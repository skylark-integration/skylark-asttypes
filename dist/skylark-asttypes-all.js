/**
 * skylark-asttypes - A version of asttypes that ported to running on skylarkjs.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
!function(e,t){var i=t.define,require=t.require,r="function"==typeof i&&i.amd,n=!r&&"undefined"!=typeof exports;if(!r&&!i){var a={};i=t.define=function(e,t,i){"function"==typeof i?(a[e]={factory:i,deps:t.map(function(t){return function(e,t){if("."!==e[0])return e;var i=t.split("/"),r=e.split("/");i.pop();for(var n=0;n<r.length;n++)"."!=r[n]&&(".."==r[n]?i.pop():i.push(r[n]));return i.join("/")}(t,e)}),resolved:!1,exports:null},require(e)):a[e]={factory:null,resolved:!0,exports:i}},require=t.require=function(e){if(!a.hasOwnProperty(e))throw new Error("Module "+e+" has not been defined");var module=a[e];if(!module.resolved){var i=[];module.deps.forEach(function(e){i.push(require(e))}),module.exports=module.factory.apply(t,i)||null,module.resolved=!0}return module.exports}}if(!i)throw new Error("The module utility (ex: requirejs or skylark-utils) is not loaded!");if(function(e,require){e("skylark-asttypes/types",[],function(){"use strict";const e=Object.prototype,t=e.toString,i=e.hasOwnProperty;class r{assert(e,t){if(!this.check(e,t)){var i=p(e);throw new Error(i+" does not match type "+this)}return!0}arrayOf(){return new n(this)}}class n extends r{constructor(e){super(),this.elemType=e,this.kind="ArrayType"}toString(){return"["+this.elemType+"]"}check(e,t){return Array.isArray(e)&&e.every(e=>this.elemType.check(e,t))}}class a extends r{constructor(e){super(),this.value=e,this.kind="IdentityType"}toString(){return String(this.value)}check(e,t){const i=e===this.value;return i||"function"!=typeof t||t(this,e),i}}class s extends r{constructor(e){super(),this.fields=e,this.kind="ObjectType"}toString(){return"{ "+this.fields.join(", ")+" }"}check(e,i){return t.call(e)===t.call({})&&this.fields.every(t=>t.type.check(e[t.name],i))}}class l extends r{constructor(e){super(),this.types=e,this.kind="OrType"}toString(){return this.types.join(" | ")}check(e,t){return!!this.types.some(i=>i.check(e,!!t))||("function"==typeof t&&t(this,e),!1)}}class o extends r{constructor(e,t){super(),this.name=e,this.predicate=t,this.kind="PredicateType"}toString(){return this.name}check(e,t){const i=this.predicate(e,t);return i||"function"!=typeof t||t(this,e),i}}class d{constructor(e,t){this.type=e,this.typeName=t,this.baseNames=[],this.ownFields=Object.create(null),this.allSupertypes=Object.create(null),this.supertypeList=[],this.allFields=Object.create(null),this.fieldNames=[],this.finalized=!1,this.buildable=!1,this.buildParams=[]}isSupertypeOf(e){if(e instanceof d){if(!0!==this.finalized||!0!==e.finalized)throw new Error("");return i.call(e.allSupertypes,this.typeName)}throw new Error(e+" is not a Def")}checkAllFields(e,t){var i=this.allFields;if(!0!==this.finalized)throw new Error(""+this.typeName);return null!==e&&"object"==typeof e&&Object.keys(i).every(function(r){var n=i[r],a=n.type,s=n.getValue(e);return a.check(s,t)})}bases(...e){var t=this.baseNames;if(this.finalized){if(e.length!==t.length)throw new Error("");for(var i=0;i<e.length;i++)if(e[i]!==t[i])throw new Error("");return this}return e.forEach(e=>{t.indexOf(e)<0&&t.push(e)}),this}}class u{constructor(e,t,i,r){this.name=e,this.type=t,this.defaultFn=i,this.hidden=!!r}toString(){return JSON.stringify(this.name)+": "+this.type}getValue(e){var t=e[this.name];return void 0!==t?t:("function"==typeof this.defaultFn&&(t=this.defaultFn.call(e)),t)}}function p(e){return Array.isArray(e)?"["+e.map(p).join(", ")+"]":e&&"object"==typeof e?"{ "+Object.keys(e).map(function(t){return t+": "+e[t]}).join(", ")+" }":JSON.stringify(e)}return function(e){const r={or:(...e)=>new l(e.map(e=>r.from(e))),from(e,t){if(e instanceof n||e instanceof a||e instanceof s||e instanceof l||e instanceof o)return e;if(e instanceof d)return e.type;if(m.check(e)){if(1!==e.length)throw new Error("only one element type is permitted for typed arrays");return new n(r.from(e[0]))}if(T.check(e))return new s(Object.keys(e).map(t=>new u(t,r.from(e[t],t))));if("function"==typeof e){var i=f.indexOf(e);if(i>=0)return c[i];if("string"!=typeof t)throw new Error("missing name");return new o(t,e)}return new a(e)},def:e=>i.call(A,e)?A[e]:A[e]=new class extends d{constructor(e){super(new o(e,(e,t)=>this.check(e,t)),e)}check(e,t){if(!0!==this.finalized)throw new Error("prematurely checking unfinalized type "+this.typeName);if(null===e||"object"!=typeof e)return!1;var i=N(e);return i?t&&i===this?this.checkAllFields(e,t):!!this.isSupertypeOf(i)&&(!t||i.checkAllFields(e,t)&&this.checkAllFields(e,!1)):("SourceLocation"===this.typeName||"Position"===this.typeName)&&this.checkAllFields(e,t)}build(...e){if(this.buildParams=e,this.buildable)return this;this.field("type",String,()=>this.typeName),this.buildable=!0;const t=(e,t,r,n)=>{if(!i.call(e,t)){var a=this.allFields;if(!i.call(a,t))throw new Error(""+t);var s,l=a[t],o=l.type;if(n)s=r;else{if(!l.defaultFn){var d="no value or default function given for field "+JSON.stringify(t)+" of "+this.typeName+"("+this.buildParams.map(function(e){return a[e]}).join(", ")+")";throw new Error(d)}s=l.defaultFn.call(e)}if(!o.check(s))throw new Error(p(s)+" does not match field "+l+" of type "+this.typeName);e[t]=s}},r=(...e)=>{var i=e.length;if(!this.finalized)throw new Error("attempting to instantiate unfinalized type "+this.typeName);var r=Object.create(B);if(this.buildParams.forEach(function(n,a){a<i?t(r,n,e[a],!0):t(r,n,null,!1)}),Object.keys(this.allFields).forEach(function(e){t(r,e,null,!1)}),r.type!==this.typeName)throw new Error("");return r};return r.from=(e=>{if(!this.finalized)throw new Error("attempting to instantiate unfinalized type "+this.typeName);var r=Object.create(B);if(Object.keys(this.allFields).forEach(function(n){i.call(e,n)?t(r,n,e[n],!0):t(r,n,null,!1)}),r.type!==this.typeName)throw new Error("");return r}),Object.defineProperty(I,D(this.typeName),{enumerable:!0,value:r}),this}field(e,t,i,n){return this.finalized?(console.error("Ignoring attempt to redefine field "+JSON.stringify(e)+" of finalized type "+JSON.stringify(this.typeName)),this):(this.ownFields[e]=new u(e,r.from(t),i,n),this)}finalize(){if(!this.finalized){var e=this.allFields,t=this.allSupertypes;for(var r in this.baseNames.forEach(i=>{var r=A[i];if(!(r instanceof d)){var n="unknown supertype name "+JSON.stringify(i)+" for subtype "+JSON.stringify(this.typeName);throw new Error(n)}r.finalize(),L(e,r.allFields),L(t,r.allSupertypes)}),L(e,this.ownFields),t[this.typeName]=this,this.fieldNames.length=0,e)i.call(e,r)&&!e[r].hidden&&this.fieldNames.push(r);Object.defineProperty(C,this.typeName,{enumerable:!0,value:this.type}),this.finalized=!0,function(e,t){t.length=0,t.push(e);for(var r=Object.create(null),n=0;n<t.length;++n){e=t[n];var a=A[e];if(!0!==a.finalized)throw new Error("");i.call(r,e)&&delete t[r[e]],r[e]=n,t.push.apply(t,a.baseNames)}for(var s=0,l=s,o=t.length;l<o;++l)i.call(t,l)&&(t[s++]=t[l]);t.length=s}(this.typeName,this.supertypeList),this.buildable&&this.supertypeList.lastIndexOf("Expression")>=0&&function(e){var t=F(e);if(I[t])return;var i=I[D(e)];if(!i)return;const r=function(...e){return I.expressionStatement(i.apply(I,e))};r.from=function(...e){return I.expressionStatement(i.from.apply(I,e))},I[t]=r}(this.typeName)}}}(e),hasDef:e=>i.call(A,e)};var f=[],c=[];function y(e,i){const r=t.call(i),n=new o(e,e=>t.call(e)===r);return i&&"function"==typeof i.constructor&&(f.push(i.constructor),c.push(n)),n}const b=y("string","truthy"),h=y("function",function(){}),m=y("array",[]),T=y("object",{}),S=y("RegExp",/./),E=y("Date",new Date),g=y("number",3),v=y("boolean",!0),x=y("null",null),P=y("undefined",void 0),w="function"==typeof BigInt?y("BigInt",BigInt(1234)):new o("BigInt",()=>!1),k={string:b,function:h,array:m,object:T,RegExp:S,Date:E,number:g,boolean:v,null:x,undefined:P,BigInt:w};var A=Object.create(null);function N(e){if(e&&"object"==typeof e){var t=e.type;if("string"==typeof t&&i.call(A,t)){var r=A[t];if(r.finalized)return r}}return null}var I=Object.create(null),B={};function D(e){return e.replace(/^[A-Z]+/,function(e){var t=e.length;switch(t){case 0:return"";case 1:return e.toLowerCase();default:return e.slice(0,t-1).toLowerCase()+e.charAt(t-1)}})}function F(e){return(e=D(e)).replace(/(Expression)?$/,"Statement")}var C={};function O(e){var t=N(e);if(t)return t.fieldNames.slice(0);if("type"in e)throw new Error("did not recognize object of type "+JSON.stringify(e.type));return Object.keys(e)}function j(e,t){var i=N(e);if(i){var r=i.allFields[t];if(r)return r.getValue(e)}return e&&e[t]}function L(e,t){return Object.keys(t).forEach(function(i){e[i]=t[i]}),e}return{Type:r,builtInTypes:k,getSupertypeNames:function(e){if(!i.call(A,e))throw new Error("");var t=A[e];if(!0!==t.finalized)throw new Error("");return t.supertypeList.slice(1)},computeSupertypeLookupTable:function(e){for(var t={},r=Object.keys(A),n=r.length,a=0;a<n;++a){var s=r[a],l=A[s];if(!0!==l.finalized)throw new Error(""+s);for(var o=0;o<l.supertypeList.length;++o){var d=l.supertypeList[o];if(i.call(e,d)){t[s]=d;break}}}return t},builders:I,defineMethod:function(e,t){var i=B[e];P.check(t)?delete B[e]:(h.assert(t),Object.defineProperty(B,e,{enumerable:!0,configurable:!0,value:t}));return i},getBuilderName:D,getStatementBuilderName:F,namedTypes:C,getFieldNames:O,getFieldValue:j,eachField:function(e,t,i){O(e).forEach(function(i){t.call(this,i,j(e,i))},i)},someField:function(e,t,i){return O(e).some(function(i){return t.call(this,i,j(e,i))},i)},finalize:function(){Object.keys(A).forEach(function(e){A[e].finalize()})}}}}),e("skylark-asttypes/path",["./types"],function(e){"use strict";var t=Object.prototype,i=t.hasOwnProperty;return function(t){var r=t.use(e),n=r.builtInTypes.array,a=r.builtInTypes.number;const s=function e(t,i,r){if(!(this instanceof e))throw new Error("Path constructor cannot be invoked without 'new'");if(i){if(!(i instanceof e))throw new Error("")}else i=null,r=null;this.value=t,this.parentPath=i,this.name=r,this.__childCache=null};var l=s.prototype;function o(e){return e.__childCache||(e.__childCache=Object.create(null))}function d(e,t){var r=o(e),n=e.getValueProperty(t),a=r[t];return i.call(r,t)&&a.value===n||(a=r[t]=new e.constructor(n,e,t)),a}function u(){}function p(e,t,r,s){if(n.assert(e.value),0===t)return u;var l=e.value.length;if(l<1)return u;var d=arguments.length;2===d?(r=0,s=l):3===d?(r=Math.max(r,0),s=l):(r=Math.max(r,0),s=Math.min(s,l)),a.assert(r),a.assert(s);for(var p=Object.create(null),f=o(e),c=r;c<s;++c)if(i.call(e.value,c)){var y=e.get(c);if(y.name!==c)throw new Error("");var b=c+t;y.name=b,p[b]=y,delete f[c]}return delete f.length,function(){for(var t in p){var i=p[t];if(i.name!==+t)throw new Error("");f[t]=i,e.value[t]=i.value}}}return l.getValueProperty=function(e){return this.value[e]},l.get=function(...e){for(var t=this,i=e.length,r=0;r<i;++r)t=d(t,e[r]);return t},l.each=function(e,t){for(var r=[],n=this.value.length,a=0,a=0;a<n;++a)i.call(this.value,a)&&(r[a]=this.get(a));for(t=t||this,a=0;a<n;++a)i.call(r,a)&&e.call(t,r[a])},l.map=function(e,t){var i=[];return this.each(function(t){i.push(e.call(this,t))},t),i},l.filter=function(e,t){var i=[];return this.each(function(t){e.call(this,t)&&i.push(t)},t),i},l.shift=function(){var e=p(this,-1),t=this.value.shift();return e(),t},l.unshift=function(...e){var t=p(this,e.length),i=this.value.unshift.apply(this.value,e);return t(),i},l.push=function(...e){return n.assert(this.value),delete o(this).length,this.value.push.apply(this.value,e)},l.pop=function(){n.assert(this.value);var e=o(this);return delete e[this.value.length-1],delete e.length,this.value.pop()},l.insertAt=function(e){var t=arguments.length,i=p(this,t-1,e);if(i===u&&t<=1)return this;e=Math.max(e,0);for(var r=1;r<t;++r)this.value[e+r-1]=arguments[r];return i(),this},l.insertBefore=function(...e){for(var t=this.parentPath,i=e.length,r=[this.name],n=0;n<i;++n)r.push(e[n]);return t.insertAt.apply(t,r)},l.insertAfter=function(...e){for(var t=this.parentPath,i=e.length,r=[this.name+1],n=0;n<i;++n)r.push(e[n]);return t.insertAt.apply(t,r)},l.replace=function(e){var t=[],i=this.parentPath.value,r=o(this.parentPath),a=arguments.length;if(function(e){if(!(e instanceof s))throw new Error("");var t=e.parentPath;if(!t)return e;var i=t.value,r=o(t);if(i[e.name]===e.value)r[e.name]=e;else if(n.check(i)){var a=i.indexOf(e.value);a>=0&&(r[e.name=a]=e)}else i[e.name]=e.value,r[e.name]=e;if(i[e.name]!==e.value)throw new Error("");if(e.parentPath.get(e.name)!==e)throw new Error("")}(this),n.check(i)){for(var l=i.length,d=p(this.parentPath,a-1,this.name+1),u=[this.name,1],f=0;f<a;++f)u.push(arguments[f]);var c=i.splice.apply(i,u);if(c[0]!==this.value)throw new Error("");if(i.length!==l-1+a)throw new Error("");if(d(),0===a)delete this.value,delete r[this.name],this.__childCache=null;else{if(i[this.name]!==e)throw new Error("");for(this.value!==e&&(this.value=e,this.__childCache=null),f=0;f<a;++f)t.push(this.parentPath.get(this.name+f));if(t[0]!==this)throw new Error("")}}else if(1===a)this.value!==e&&(this.__childCache=null),this.value=i[this.name]=e,t.push(this);else{if(0!==a)throw new Error("Could not replace path");delete i[this.name],delete this.value,this.__childCache=null}return t},s}}),e("skylark-asttypes/scope",["./types"],function(e){"use strict";var t=Object.prototype.hasOwnProperty;return function(i){var r=i.use(e),n=r.Type,a=r.namedTypes,s=a.Node,l=a.Expression,o=r.builtInTypes.array,d=r.builders;const u=function e(t,i){if(!(this instanceof e))throw new Error("Scope constructor cannot be invoked without 'new'");var r;if(f.check(t.value)||p.assert(t.value),i){if(!(i instanceof e))throw new Error("");r=i.depth+1}else i=null,r=0;Object.defineProperties(this,{path:{value:t},node:{value:t.value},isGlobal:{value:!i,enumerable:!0},depth:{value:r},parent:{value:i},bindings:{value:{}},types:{value:{}}})};var p=n.or(a.Program,a.Function,a.CatchClause),f=n.or(a.Function,a.ClassDeclaration,a.ClassExpression,a.InterfaceDeclaration,a.TSInterfaceDeclaration,a.TypeAlias,a.TSTypeAliasDeclaration),c=n.or(a.TypeParameter,a.TSTypeParameter);u.isEstablishedBy=function(e){return p.check(e)||f.check(e)};var y=u.prototype;function b(e,t,i){var n=e.value;e.parent&&a.FunctionExpression.check(e.parent.node)&&e.parent.node.id&&m(e.parent.get("id"),t),n&&(o.check(n)?e.each(e=>{h(e,t,i)}):a.Function.check(n)?(e.get("params").each(e=>{m(e,t)}),h(e.get("body"),t,i),b(e.get("typeParameters"),t,i)):a.TypeAlias&&a.TypeAlias.check(n)||a.InterfaceDeclaration&&a.InterfaceDeclaration.check(n)||a.TSTypeAliasDeclaration&&a.TSTypeAliasDeclaration.check(n)||a.TSInterfaceDeclaration&&a.TSInterfaceDeclaration.check(n)?T(e.get("id"),i):a.VariableDeclarator.check(n)?(m(e.get("id"),t),h(e.get("init"),t,i)):"ImportSpecifier"===n.type||"ImportNamespaceSpecifier"===n.type||"ImportDefaultSpecifier"===n.type?m(e.get(n.local?"local":n.name?"name":"id"),t):s.check(n)&&!l.check(n)&&r.eachField(n,function(r,n){var a=e.get(r);if(!function(e,t){if(e.value===t)return!0;if(Array.isArray(e.value)&&0===e.value.length&&Array.isArray(t)&&0===t.length)return!0;return!1}(a,n))throw new Error("");h(a,t,i)}))}function h(e,i,r){var n=e.value;if(!n||l.check(n));else if(a.FunctionDeclaration.check(n)&&null!==n.id)m(e.get("id"),i);else if(a.ClassDeclaration&&a.ClassDeclaration.check(n)&&null!==n.id)m(e.get("id"),i),b(e.get("typeParameters"),i,r);else if(a.InterfaceDeclaration&&a.InterfaceDeclaration.check(n)||a.TSInterfaceDeclaration&&a.TSInterfaceDeclaration.check(n))T(e.get("id"),r);else if(p.check(n)){if(a.CatchClause.check(n)&&a.Identifier.check(n.param)){var s=n.param.name,o=t.call(i,s);b(e.get("body"),i,r),o||delete i[s]}}else b(e,i,r)}function m(e,i){var r=e.value;a.Pattern.assert(r),a.Identifier.check(r)?t.call(i,r.name)?i[r.name].push(e):i[r.name]=[e]:a.AssignmentPattern&&a.AssignmentPattern.check(r)?m(e.get("left"),i):a.ObjectPattern&&a.ObjectPattern.check(r)?e.get("properties").each(function(e){var t=e.value;a.Pattern.check(t)?m(e,i):a.Property.check(t)||a.ObjectProperty&&a.ObjectProperty.check(t)?m(e.get("value"),i):a.SpreadProperty&&a.SpreadProperty.check(t)&&m(e.get("argument"),i)}):a.ArrayPattern&&a.ArrayPattern.check(r)?e.get("elements").each(function(e){var t=e.value;a.Pattern.check(t)?m(e,i):a.SpreadElement&&a.SpreadElement.check(t)&&m(e.get("argument"),i)}):a.PropertyPattern&&a.PropertyPattern.check(r)?m(e.get("pattern"),i):(a.SpreadElementPattern&&a.SpreadElementPattern.check(r)||a.RestElement&&a.RestElement.check(r)||a.SpreadPropertyPattern&&a.SpreadPropertyPattern.check(r))&&m(e.get("argument"),i)}function T(e,i){var r=e.value;a.Pattern.assert(r),a.Identifier.check(r)&&(t.call(i,r.name)?i[r.name].push(e):i[r.name]=[e])}return y.didScan=!1,y.declares=function(e){return this.scan(),t.call(this.bindings,e)},y.declaresType=function(e){return this.scan(),t.call(this.types,e)},y.declareTemporary=function(e){if(e){if(!/^[a-z$_]/i.test(e))throw new Error("")}else e="t$";e+=this.depth.toString(36)+"$",this.scan();for(var t=0;this.declares(e+t);)++t;var i=e+t;return this.bindings[i]=r.builders.identifier(i)},y.injectTemporary=function(e,t){e||(e=this.declareTemporary());var i=this.path.get("body");return a.BlockStatement.check(i.value)&&(i=i.get("body")),i.unshift(d.variableDeclaration("var",[d.variableDeclarator(e,t||null)])),e},y.scan=function(e){if(e||!this.didScan){for(var i in this.bindings)delete this.bindings[i];for(var i in this.types)delete this.types[i];!function(e,i,r){var n=e.value;if(f.check(n)){const i=e.get("typeParameters","params");o.check(i.value)&&i.each(e=>{l=r,d=(s=e).value,c.assert(d),t.call(l,d.name)?l[d.name].push(s):l[d.name]=[s]})}var s,l,d;p.check(n)&&(a.CatchClause.check(n)?m(e.get("param"),i):b(e,i,r))}(this.path,this.bindings,this.types),this.didScan=!0}},y.getBindings=function(){return this.scan(),this.bindings},y.getTypes=function(){return this.scan(),this.types},y.lookup=function(e){for(var t=this;t&&!t.declares(e);t=t.parent);return t},y.lookupType=function(e){for(var t=this;t&&!t.declaresType(e);t=t.parent);return t},y.getGlobalScope=function(){for(var e=this;!e.isGlobal;)e=e.parent;return e},u}}),e("skylark-asttypes/node-path",["./types","./path","./scope"],function(e,t,i){"use strict";return function(r){var n=r.use(e),a=n.namedTypes,s=n.builders,l=n.builtInTypes.number,o=n.builtInTypes.array,d=r.use(t),u=r.use(i);const p=function e(t,i,r){if(!(this instanceof e))throw new Error("NodePath constructor cannot be invoked without 'new'");d.call(this,t,i,r)};var f=p.prototype=Object.create(d.prototype,{constructor:{value:p,enumerable:!1,writable:!0,configurable:!0}});function c(e){return a.BinaryExpression.check(e)||a.LogicalExpression.check(e)}Object.defineProperties(f,{node:{get:function(){return Object.defineProperty(this,"node",{configurable:!0,value:this._computeNode()}),this.node}},parent:{get:function(){return Object.defineProperty(this,"parent",{configurable:!0,value:this._computeParent()}),this.parent}},scope:{get:function(){return Object.defineProperty(this,"scope",{configurable:!0,value:this._computeScope()}),this.scope}}}),f.replace=function(){return delete this.node,delete this.parent,delete this.scope,d.prototype.replace.apply(this,arguments)},f.prune=function(){var e=this.parent;return this.replace(),function(e){if(a.VariableDeclaration.check(e.node)){var t=e.get("declarations").value;if(!t||0===t.length)return e.prune()}else if(a.ExpressionStatement.check(e.node)){if(!e.get("expression").value)return e.prune()}else a.IfStatement.check(e.node)&&function(e){var t=e.get("test").value,i=e.get("alternate").value,r=e.get("consequent").value;if(r||i){if(!r&&i){var n=s.unaryExpression("!",t,!0);a.UnaryExpression.check(t)&&"!"===t.operator&&(n=t.argument),e.get("test").replace(n),e.get("consequent").replace(i),e.get("alternate").replace()}}else{var l=s.expressionStatement(t);e.replace(l)}}(e);return e}(e)},f._computeNode=function(){var e=this.value;if(a.Node.check(e))return e;var t=this.parentPath;return t&&t.node||null},f._computeParent=function(){var e=this.value,t=this.parentPath;if(!a.Node.check(e)){for(;t&&!a.Node.check(t.value);)t=t.parentPath;t&&(t=t.parentPath)}for(;t&&!a.Node.check(t.value);)t=t.parentPath;return t||null},f._computeScope=function(){var e=this.value,t=this.parentPath,i=t&&t.scope;return a.Node.check(e)&&u.isEstablishedBy(e)&&(i=new u(this,i)),i||null},f.getValueProperty=function(e){return n.getFieldValue(this.value,e)},f.needsParens=function(e){var t=this.parentPath;if(!t)return!1;var i=this.value;if(!a.Expression.check(i))return!1;if("Identifier"===i.type)return!1;for(;!a.Node.check(t.value);)if(!(t=t.parentPath))return!1;var r=t.value;switch(i.type){case"UnaryExpression":case"SpreadElement":case"SpreadProperty":return"MemberExpression"===r.type&&"object"===this.name&&r.object===i;case"BinaryExpression":case"LogicalExpression":switch(r.type){case"CallExpression":return"callee"===this.name&&r.callee===i;case"UnaryExpression":case"SpreadElement":case"SpreadProperty":return!0;case"MemberExpression":return"object"===this.name&&r.object===i;case"BinaryExpression":case"LogicalExpression":{const e=i,t=r.operator,n=y[t],a=e.operator,s=y[a];if(n>s)return!0;if(n===s&&"right"===this.name){if(r.right!==e)throw new Error("Nodes must be equal");return!0}}default:return!1}case"SequenceExpression":switch(r.type){case"ForStatement":return!1;case"ExpressionStatement":return"expression"!==this.name;default:return!0}case"YieldExpression":switch(r.type){case"BinaryExpression":case"LogicalExpression":case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"CallExpression":case"MemberExpression":case"NewExpression":case"ConditionalExpression":case"YieldExpression":return!0;default:return!1}case"Literal":return"MemberExpression"===r.type&&l.check(i.value)&&"object"===this.name&&r.object===i;case"AssignmentExpression":case"ConditionalExpression":switch(r.type){case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"BinaryExpression":case"LogicalExpression":return!0;case"CallExpression":return"callee"===this.name&&r.callee===i;case"ConditionalExpression":return"test"===this.name&&r.test===i;case"MemberExpression":return"object"===this.name&&r.object===i;default:return!1}default:if("NewExpression"===r.type&&"callee"===this.name&&r.callee===i)return b(i)}return!(!0===e||this.canBeFirstInStatement()||!this.firstInStatement())};var y={};function b(e){return!!a.CallExpression.check(e)||(o.check(e)?e.some(b):!!a.Node.check(e)&&n.someField(e,function(e,t){return b(t)}))}return[["||"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"]].forEach(function(e,t){e.forEach(function(e){y[e]=t})}),f.canBeFirstInStatement=function(){var e=this.node;return!a.FunctionExpression.check(e)&&!a.ObjectExpression.check(e)},f.firstInStatement=function(){return function(e){for(var t,i;e.parent;e=e.parent){if(t=e.node,i=e.parent.node,a.BlockStatement.check(i)&&"body"===e.parent.name&&0===e.name){if(i.body[0]!==t)throw new Error("Nodes must be equal");return!0}if(a.ExpressionStatement.check(i)&&"expression"===e.name){if(i.expression!==t)throw new Error("Nodes must be equal");return!0}if(a.SequenceExpression.check(i)&&"expressions"===e.parent.name&&0===e.name){if(i.expressions[0]!==t)throw new Error("Nodes must be equal")}else if(a.CallExpression.check(i)&&"callee"===e.name){if(i.callee!==t)throw new Error("Nodes must be equal")}else if(a.MemberExpression.check(i)&&"object"===e.name){if(i.object!==t)throw new Error("Nodes must be equal")}else if(a.ConditionalExpression.check(i)&&"test"===e.name){if(i.test!==t)throw new Error("Nodes must be equal")}else if(c(i)&&"left"===e.name){if(i.left!==t)throw new Error("Nodes must be equal")}else{if(!a.UnaryExpression.check(i)||i.prefix||"argument"!==e.name)return!1;if(i.argument!==t)throw new Error("Nodes must be equal")}}return!0}(this)},p}}),e("skylark-asttypes/path-visitor",["./types","./node-path"],function(e,t){"use strict";var i=Object.prototype.hasOwnProperty;return function(r){var n=r.use(e),a=r.use(t),s=n.builtInTypes.array,l=n.builtInTypes.object,o=n.builtInTypes.function;const d=function e(){if(!(this instanceof e))throw new Error("PathVisitor constructor cannot be invoked without 'new'");this._reusableContextStack=[],this._methodNameTable=function(e){var t=Object.create(null);for(var i in e)/^visit[A-Z]/.test(i)&&(t[i.slice("visit".length)]=!0);for(var r=n.computeSupertypeLookupTable(t),a=Object.create(null),s=Object.keys(r),l=s.length,d=0;d<l;++d){var u=s[d];i="visit"+r[u],o.check(e[i])&&(a[u]=i)}return a}(this),this._shouldVisitComments=i.call(this._methodNameTable,"Block")||i.call(this._methodNameTable,"Line"),this.Context=c(this),this._visiting=!1,this._changeReported=!1};function u(e,t){for(var r in t)i.call(t,r)&&(e[r]=t[r]);return e}d.fromMethodsObject=function(e){if(e instanceof d)return e;if(!l.check(e))return new d;const t=function e(){if(!(this instanceof e))throw new Error("Visitor constructor cannot be invoked without 'new'");d.call(this)};var i=t.prototype=Object.create(p);return i.constructor=t,u(i,e),u(t,d),o.assert(t.fromMethodsObject),o.assert(t.visit),new t},d.visit=function(e,t){return d.fromMethodsObject(t).visit(e)};var p=d.prototype;function f(e,t){if(!(e instanceof a))throw new Error("");if(!(t instanceof d))throw new Error("");var r=e.value;if(s.check(r))e.each(t.visitWithoutReset,t);else if(l.check(r)){var o=n.getFieldNames(r);t._shouldVisitComments&&r.comments&&o.indexOf("comments")<0&&o.push("comments");for(var u=o.length,p=[],f=0;f<u;++f){var c=o[f];i.call(r,c)||(r[c]=n.getFieldValue(r,c)),p.push(e.get(c))}for(var f=0;f<u;++f)t.visitWithoutReset(p[f])}else;return e.value}function c(e){function t(i){if(!(this instanceof t))throw new Error("");if(!(this instanceof d))throw new Error("");if(!(i instanceof a))throw new Error("");Object.defineProperty(this,"visitor",{value:e,writable:!1,enumerable:!0,configurable:!1}),this.currentPath=i,this.needToCallTraverse=!0,Object.seal(this)}if(!(e instanceof d))throw new Error("");var i=t.prototype=Object.create(e);return i.constructor=t,u(i,y),t}p.visit=function(){if(this._visiting)throw new Error("Recursively calling visitor.visit(path) resets visitor state. Try this.visit(path) or this.traverse(path) instead.");this._visiting=!0,this._changeReported=!1,this._abortRequested=!1;for(var e,t=arguments.length,i=new Array(t),r=0;r<t;++r)i[r]=arguments[r];i[0]instanceof a||(i[0]=new a({root:i[0]}).get("root")),this.reset.apply(this,i);try{var n=this.visitWithoutReset(i[0]);e=!0}finally{if(this._visiting=!1,!e&&this._abortRequested)return i[0].value}return n},p.AbortRequest=function(){},p.abort=function(){var e=this;e._abortRequested=!0;var t=new e.AbortRequest;throw t.cancel=function(){e._abortRequested=!1},t},p.reset=function(e){},p.visitWithoutReset=function(e){if(this instanceof this.Context)return this.visitor.visitWithoutReset(e);if(!(e instanceof a))throw new Error("");var t=e.value,i=t&&"object"==typeof t&&"string"==typeof t.type&&this._methodNameTable[t.type];if(!i)return f(e,this);var r=this.acquireContext(e);try{return r.invokeVisitorMethod(i)}finally{this.releaseContext(r)}},p.acquireContext=function(e){return 0===this._reusableContextStack.length?new this.Context(e):this._reusableContextStack.pop().reset(e)},p.releaseContext=function(e){if(!(e instanceof this.Context))throw new Error("");this._reusableContextStack.push(e),e.currentPath=null},p.reportChanged=function(){this._changeReported=!0},p.wasChangeReported=function(){return this._changeReported};var y=Object.create(null);return y.reset=function(e){if(!(this instanceof this.Context))throw new Error("");if(!(e instanceof a))throw new Error("");return this.currentPath=e,this.needToCallTraverse=!0,this},y.invokeVisitorMethod=function(e){if(!(this instanceof this.Context))throw new Error("");if(!(this.currentPath instanceof a))throw new Error("");var t=this.visitor[e].call(this,this.currentPath);if(!1===t?this.needToCallTraverse=!1:void 0!==t&&(this.currentPath=this.currentPath.replace(t)[0],this.needToCallTraverse&&this.traverse(this.currentPath)),!1!==this.needToCallTraverse)throw new Error("Must either call this.traverse or return false in "+e);var i=this.currentPath;return i&&i.value},y.traverse=function(e,t){if(!(this instanceof this.Context))throw new Error("");if(!(e instanceof a))throw new Error("");if(!(this.currentPath instanceof a))throw new Error("");return this.needToCallTraverse=!1,f(e,d.fromMethodsObject(t||this.visitor))},y.visit=function(e,t){if(!(this instanceof this.Context))throw new Error("");if(!(e instanceof a))throw new Error("");if(!(this.currentPath instanceof a))throw new Error("");return this.needToCallTraverse=!1,d.fromMethodsObject(t||this.visitor).visitWithoutReset(e)},y.reportChanged=function(){this.visitor.reportChanged()},y.abort=function(){this.needToCallTraverse=!1,this.visitor.abort()},d}}),e("skylark-asttypes/equiv",["./types"],function(e){"use strict";return function(t){var i=t.use(e),r=i.getFieldNames,n=i.getFieldValue,a=i.builtInTypes.array,s=i.builtInTypes.object,l=i.builtInTypes.Date,o=i.builtInTypes.RegExp,d=Object.prototype.hasOwnProperty;function u(e,t,i){return a.check(i)?i.length=0:i=null,f(e,t,i)}function p(e){return/[_$a-z][_$a-z0-9]*/i.test(e)?"."+e:"["+JSON.stringify(e)+"]"}function f(e,t,i){return e===t||(a.check(e)?function(e,t,i){a.assert(e);var r=e.length;if(!a.check(t)||t.length!==r)return i&&i.push("length"),!1;for(var n=0;n<r;++n){if(i&&i.push(n),n in e!=n in t)return!1;if(!f(e[n],t[n],i))return!1;if(i){var s=i.pop();if(s!==n)throw new Error(""+s)}}return!0}(e,t,i):s.check(e)?function(e,t,i){if(s.assert(e),!s.check(t))return!1;if(e.type!==t.type)return i&&i.push("type"),!1;var a=r(e),l=a.length,o=r(t),u=o.length;if(l===u){for(var p=0;p<l;++p){var c=a[p],y=n(e,c),b=n(t,c);if(i&&i.push(c),!f(y,b,i))return!1;if(i){var h=i.pop();if(h!==c)throw new Error(""+h)}}return!0}if(!i)return!1;var m=Object.create(null);for(p=0;p<l;++p)m[a[p]]=!0;for(p=0;p<u;++p){if(c=o[p],!d.call(m,c))return i.push(c),!1;delete m[c]}for(c in m){i.push(c);break}return!1}(e,t,i):l.check(e)?l.check(t)&&+e==+t:o.check(e)?o.check(t)&&e.source===t.source&&e.global===t.global&&e.multiline===t.multiline&&e.ignoreCase===t.ignoreCase:e==t)}return u.assert=function(e,t){var i=[];if(!u(e,t,i)){if(0!==i.length)throw new Error("Nodes differ in the following path: "+i.map(p).join(""));if(e!==t)throw new Error("Nodes must be equal")}},u}}),e("skylark-asttypes/fork",["./types","./path-visitor","./equiv","./path","./node-path"],function(e,t,i,r,n){"use strict";return function(a){const s=function(){const e=[],t=[];var i={use:function(r){var n=e.indexOf(r);-1===n&&(n=e.length,e.push(r),t[n]=r(i));return t[n]}};return i}(),l=s.use(e);a.forEach(s.use),l.finalize();const o=s.use(t);return{Type:l.Type,builtInTypes:l.builtInTypes,namedTypes:l.namedTypes,builders:l.builders,defineMethod:l.defineMethod,getFieldNames:l.getFieldNames,getFieldValue:l.getFieldValue,eachField:l.eachField,someField:l.someField,getSupertypeNames:l.getSupertypeNames,getBuilderName:l.getBuilderName,astNodesAreEquivalent:s.use(i),finalize:l.finalize,Path:s.use(r),NodePath:s.use(n),PathVisitor:o,use:s.use,visit:o.visit}}}),e("skylark-asttypes/def/operators/core",[],function(){"use strict";return function(){return{BinaryOperators:["==","!=","===","!==","<","<=",">",">=","<<",">>",">>>","+","-","*","/","%","&","|","^","in","instanceof"],AssignmentOperators:["=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","|=","^=","&="],LogicalOperators:["||","&&"]}}}),e("skylark-asttypes/def/operators/es2016",["./core"],function(e){"use strict";return function(t){const i=t.use(e);return i.BinaryOperators.indexOf("**")<0&&i.BinaryOperators.push("**"),i.AssignmentOperators.indexOf("**=")<0&&i.AssignmentOperators.push("**="),i}}),e("skylark-asttypes/def/operators/es2020",["./es2016"],function(e){"use strict";return function(t){const i=t.use(e);return i.LogicalOperators.indexOf("??")<0&&i.LogicalOperators.push("??"),i}}),e("skylark-asttypes/def/operators/es2021",["./es2020"],function(e){"use strict";return function(t){const i=t.use(e);return i.LogicalOperators.forEach(e=>{const t=e+"=";i.AssignmentOperators.indexOf(t)<0&&i.AssignmentOperators.push(t)}),i}}),e("skylark-asttypes/def/core",["./operators/core","../types"],function(e,t){"use strict";return function(i){var r=i.use(t),n=r.Type,a=n.def,s=n.or,l=i.use(sharedPlugin),o=l.defaults,d=l.geq;const{BinaryOperators:u,AssignmentOperators:p,LogicalOperators:f}=i.use(e);a("Printable").field("loc",s(a("SourceLocation"),null),o.null,!0),a("Node").bases("Printable").field("type",String).field("comments",s([a("Comment")],null),o.null,!0),a("SourceLocation").field("start",a("Position")).field("end",a("Position")).field("source",s(String,null),o.null),a("Position").field("line",d(1)).field("column",d(0)),a("File").bases("Node").build("program","name").field("program",a("Program")).field("name",s(String,null),o.null),a("Program").bases("Node").build("body").field("body",[a("Statement")]),a("Function").bases("Node").field("id",s(a("Identifier"),null),o.null).field("params",[a("Pattern")]).field("body",a("BlockStatement")).field("generator",Boolean,o.false).field("async",Boolean,o.false),a("Statement").bases("Node"),a("EmptyStatement").bases("Statement").build(),a("BlockStatement").bases("Statement").build("body").field("body",[a("Statement")]),a("ExpressionStatement").bases("Statement").build("expression").field("expression",a("Expression")),a("IfStatement").bases("Statement").build("test","consequent","alternate").field("test",a("Expression")).field("consequent",a("Statement")).field("alternate",s(a("Statement"),null),o.null),a("LabeledStatement").bases("Statement").build("label","body").field("label",a("Identifier")).field("body",a("Statement")),a("BreakStatement").bases("Statement").build("label").field("label",s(a("Identifier"),null),o.null),a("ContinueStatement").bases("Statement").build("label").field("label",s(a("Identifier"),null),o.null),a("WithStatement").bases("Statement").build("object","body").field("object",a("Expression")).field("body",a("Statement")),a("SwitchStatement").bases("Statement").build("discriminant","cases","lexical").field("discriminant",a("Expression")).field("cases",[a("SwitchCase")]).field("lexical",Boolean,o.false),a("ReturnStatement").bases("Statement").build("argument").field("argument",s(a("Expression"),null)),a("ThrowStatement").bases("Statement").build("argument").field("argument",a("Expression")),a("TryStatement").bases("Statement").build("block","handler","finalizer").field("block",a("BlockStatement")).field("handler",s(a("CatchClause"),null),function(){return this.handlers&&this.handlers[0]||null}).field("handlers",[a("CatchClause")],function(){return this.handler?[this.handler]:[]},!0).field("guardedHandlers",[a("CatchClause")],o.emptyArray).field("finalizer",s(a("BlockStatement"),null),o.null),a("CatchClause").bases("Node").build("param","guard","body").field("param",a("Pattern")).field("guard",s(a("Expression"),null),o.null).field("body",a("BlockStatement")),a("WhileStatement").bases("Statement").build("test","body").field("test",a("Expression")).field("body",a("Statement")),a("DoWhileStatement").bases("Statement").build("body","test").field("body",a("Statement")).field("test",a("Expression")),a("ForStatement").bases("Statement").build("init","test","update","body").field("init",s(a("VariableDeclaration"),a("Expression"),null)).field("test",s(a("Expression"),null)).field("update",s(a("Expression"),null)).field("body",a("Statement")),a("ForInStatement").bases("Statement").build("left","right","body").field("left",s(a("VariableDeclaration"),a("Expression"))).field("right",a("Expression")).field("body",a("Statement")),a("DebuggerStatement").bases("Statement").build(),a("Declaration").bases("Statement"),a("FunctionDeclaration").bases("Function","Declaration").build("id","params","body").field("id",a("Identifier")),a("FunctionExpression").bases("Function","Expression").build("id","params","body"),a("VariableDeclaration").bases("Declaration").build("kind","declarations").field("kind",s("var","let","const")).field("declarations",[a("VariableDeclarator")]),a("VariableDeclarator").bases("Node").build("id","init").field("id",a("Pattern")).field("init",s(a("Expression"),null),o.null),a("Expression").bases("Node"),a("ThisExpression").bases("Expression").build(),a("ArrayExpression").bases("Expression").build("elements").field("elements",[s(a("Expression"),null)]),a("ObjectExpression").bases("Expression").build("properties").field("properties",[a("Property")]),a("Property").bases("Node").build("kind","key","value").field("kind",s("init","get","set")).field("key",s(a("Literal"),a("Identifier"))).field("value",a("Expression")),a("SequenceExpression").bases("Expression").build("expressions").field("expressions",[a("Expression")]);var c=s("-","+","!","~","typeof","void","delete");a("UnaryExpression").bases("Expression").build("operator","argument","prefix").field("operator",c).field("argument",a("Expression")).field("prefix",Boolean,o.true);const y=s(...u);a("BinaryExpression").bases("Expression").build("operator","left","right").field("operator",y).field("left",a("Expression")).field("right",a("Expression"));const b=s(...p);a("AssignmentExpression").bases("Expression").build("operator","left","right").field("operator",b).field("left",s(a("Pattern"),a("MemberExpression"))).field("right",a("Expression"));var h=s("++","--");a("UpdateExpression").bases("Expression").build("operator","argument","prefix").field("operator",h).field("argument",a("Expression")).field("prefix",Boolean);var m=s(...f);a("LogicalExpression").bases("Expression").build("operator","left","right").field("operator",m).field("left",a("Expression")).field("right",a("Expression")),a("ConditionalExpression").bases("Expression").build("test","consequent","alternate").field("test",a("Expression")).field("consequent",a("Expression")).field("alternate",a("Expression")),a("NewExpression").bases("Expression").build("callee","arguments").field("callee",a("Expression")).field("arguments",[a("Expression")]),a("CallExpression").bases("Expression").build("callee","arguments").field("callee",a("Expression")).field("arguments",[a("Expression")]),a("MemberExpression").bases("Expression").build("object","property","computed").field("object",a("Expression")).field("property",s(a("Identifier"),a("Expression"))).field("computed",Boolean,function(){var e=this.property.type;return"Literal"===e||"MemberExpression"===e||"BinaryExpression"===e}),a("Pattern").bases("Node"),a("SwitchCase").bases("Node").build("test","consequent").field("test",s(a("Expression"),null)).field("consequent",[a("Statement")]),a("Identifier").bases("Expression","Pattern").build("name").field("name",String).field("optional",Boolean,o.false),a("Literal").bases("Expression").build("value").field("value",s(String,Boolean,null,Number,RegExp,BigInt)),a("Comment").bases("Printable").field("value",String).field("leading",Boolean,o.true).field("trailing",Boolean,o.false)}}),e("skylark-asttypes/shared",["./types"],function(e){"use strict";return function(t){var i=t.use(e),r=i.Type,n=i.builtInTypes,a=n.number;var s=r.or(n.string,n.number,n.boolean,n.null,n.undefined);const l=r.from(e=>{if(null===e)return!0;var t=typeof e;return"object"!==t&&"function"!==t},s.toString());return{geq:function(e){return r.from(t=>a.check(t)&&t>=e,a+" >= "+e)},defaults:{null:function(){return null},emptyArray:function(){return[]},false:function(){return!1},true:function(){return!0},undefined:function(){},"use strict":function(){return"use strict"}},isPrimitive:l}}}),e("skylark-asttypes/def/es6",["./core","../types","../shared"],function(e,t,i){"use strict";return function(r){r.use(e);const n=r.use(t),a=n.Type.def,s=n.Type.or,l=r.use(i).defaults;a("Function").field("generator",Boolean,l.false).field("expression",Boolean,l.false).field("defaults",[s(a("Expression"),null)],l.emptyArray).field("rest",s(a("Identifier"),null),l.null),a("RestElement").bases("Pattern").build("argument").field("argument",a("Pattern")).field("typeAnnotation",s(a("TypeAnnotation"),a("TSTypeAnnotation"),null),l.null),a("SpreadElementPattern").bases("Pattern").build("argument").field("argument",a("Pattern")),a("FunctionDeclaration").build("id","params","body","generator","expression").field("id",s(a("Identifier"),null)),a("FunctionExpression").build("id","params","body","generator","expression"),a("ArrowFunctionExpression").bases("Function","Expression").build("params","body","expression").field("id",null,l.null).field("body",s(a("BlockStatement"),a("Expression"))).field("generator",!1,l.false),a("ForOfStatement").bases("Statement").build("left","right","body").field("left",s(a("VariableDeclaration"),a("Pattern"))).field("right",a("Expression")).field("body",a("Statement")),a("YieldExpression").bases("Expression").build("argument","delegate").field("argument",s(a("Expression"),null)).field("delegate",Boolean,l.false),a("GeneratorExpression").bases("Expression").build("body","blocks","filter").field("body",a("Expression")).field("blocks",[a("ComprehensionBlock")]).field("filter",s(a("Expression"),null)),a("ComprehensionExpression").bases("Expression").build("body","blocks","filter").field("body",a("Expression")).field("blocks",[a("ComprehensionBlock")]).field("filter",s(a("Expression"),null)),a("ComprehensionBlock").bases("Node").build("left","right","each").field("left",a("Pattern")).field("right",a("Expression")).field("each",Boolean),a("Property").field("key",s(a("Literal"),a("Identifier"),a("Expression"))).field("value",s(a("Expression"),a("Pattern"))).field("method",Boolean,l.false).field("shorthand",Boolean,l.false).field("computed",Boolean,l.false),a("ObjectProperty").field("shorthand",Boolean,l.false),a("PropertyPattern").bases("Pattern").build("key","pattern").field("key",s(a("Literal"),a("Identifier"),a("Expression"))).field("pattern",a("Pattern")).field("computed",Boolean,l.false),a("ObjectPattern").bases("Pattern").build("properties").field("properties",[s(a("PropertyPattern"),a("Property"))]),a("ArrayPattern").bases("Pattern").build("elements").field("elements",[s(a("Pattern"),null)]),a("SpreadElement").bases("Node").build("argument").field("argument",a("Expression")),a("ArrayExpression").field("elements",[s(a("Expression"),a("SpreadElement"),a("RestElement"),null)]),a("NewExpression").field("arguments",[s(a("Expression"),a("SpreadElement"))]),a("CallExpression").field("arguments",[s(a("Expression"),a("SpreadElement"))]),a("AssignmentPattern").bases("Pattern").build("left","right").field("left",a("Pattern")).field("right",a("Expression")),a("MethodDefinition").bases("Declaration").build("kind","key","value","static").field("kind",s("constructor","method","get","set")).field("key",a("Expression")).field("value",a("Function")).field("computed",Boolean,l.false).field("static",Boolean,l.false);const o=s(a("MethodDefinition"),a("VariableDeclarator"),a("ClassPropertyDefinition"),a("ClassProperty"),a("StaticBlock"));a("ClassProperty").bases("Declaration").build("key").field("key",s(a("Literal"),a("Identifier"),a("Expression"))).field("computed",Boolean,l.false),a("ClassPropertyDefinition").bases("Declaration").build("definition").field("definition",o),a("ClassBody").bases("Declaration").build("body").field("body",[o]),a("ClassDeclaration").bases("Declaration").build("id","body","superClass").field("id",s(a("Identifier"),null)).field("body",a("ClassBody")).field("superClass",s(a("Expression"),null),l.null),a("ClassExpression").bases("Expression").build("id","body","superClass").field("id",s(a("Identifier"),null),l.null).field("body",a("ClassBody")).field("superClass",s(a("Expression"),null),l.null),a("Super").bases("Expression").build(),a("Specifier").bases("Node"),a("ModuleSpecifier").bases("Specifier").field("local",s(a("Identifier"),null),l.null).field("id",s(a("Identifier"),null),l.null).field("name",s(a("Identifier"),null),l.null),a("ImportSpecifier").bases("ModuleSpecifier").build("imported","local").field("imported",a("Identifier")),a("ImportDefaultSpecifier").bases("ModuleSpecifier").build("local"),a("ImportNamespaceSpecifier").bases("ModuleSpecifier").build("local"),a("ImportDeclaration").bases("Declaration").build("specifiers","source","importKind").field("specifiers",[s(a("ImportSpecifier"),a("ImportNamespaceSpecifier"),a("ImportDefaultSpecifier"))],l.emptyArray).field("source",a("Literal")).field("importKind",s("value","type"),function(){return"value"}),a("ExportNamedDeclaration").bases("Declaration").build("declaration","specifiers","source").field("declaration",s(a("Declaration"),null)).field("specifiers",[a("ExportSpecifier")],l.emptyArray).field("source",s(a("Literal"),null),l.null),a("ExportSpecifier").bases("ModuleSpecifier").build("local","exported").field("exported",a("Identifier")),a("ExportDefaultDeclaration").bases("Declaration").build("declaration").field("declaration",s(a("Declaration"),a("Expression"))),a("ExportAllDeclaration").bases("Declaration").build("source").field("source",a("Literal")),a("TaggedTemplateExpression").bases("Expression").build("tag","quasi").field("tag",a("Expression")).field("quasi",a("TemplateLiteral")),a("TemplateLiteral").bases("Expression").build("quasis","expressions").field("quasis",[a("TemplateElement")]).field("expressions",[a("Expression")]),a("TemplateElement").bases("Node").build("value","tail").field("value",{cooked:String,raw:String}).field("tail",Boolean),a("MetaProperty").bases("Expression").build("meta","property").field("meta",a("Identifier")).field("property",a("Identifier"))}}),e("skylark-asttypes/def/es2016",["./operators/es2016","./es6"],function(e,t){"use strict";return function(i){i.use(e),i.use(t)}}),e("skylark-asttypes/def/es2017",["./es2016","../types","../shared"],function(e,t,i){"use strict";return function(r){r.use(e);const n=r.use(t),a=n.Type.def,s=r.use(i).defaults;a("Function").field("async",Boolean,s.false),a("AwaitExpression").bases("Expression").build("argument").field("argument",a("Expression"))}}),e("skylark-asttypes/def/es2018",["./es2017","../types","../shared"],function(e,t,i){"use strict";return function(r){r.use(e);const n=r.use(t),a=n.Type.def,s=n.Type.or,l=r.use(i).defaults;a("ForOfStatement").field("await",Boolean,l.false),a("SpreadProperty").bases("Node").build("argument").field("argument",a("Expression")),a("ObjectExpression").field("properties",[s(a("Property"),a("SpreadProperty"),a("SpreadElement"))]),a("TemplateElement").field("value",{cooked:s(String,null),raw:String}),a("SpreadPropertyPattern").bases("Pattern").build("argument").field("argument",a("Pattern")),a("ObjectPattern").field("properties",[s(a("PropertyPattern"),a("Property"),a("RestElement"),a("SpreadPropertyPattern"))])}}),e("skylark-asttypes/def/es2019",["./es2018","../types","../shared"],function(e,t,i){"use strict";return function(r){r.use(e);const n=r.use(t),a=n.Type.def,s=n.Type.or,l=r.use(i).defaults;a("CatchClause").field("param",s(a("Pattern"),null),l.null)}}),e("skylark-asttypes/def/es2020",["./operators/es2020","./es2019","../types","../shared"],function(e,t,i,r){"use strict";return function(n){n.use(e),n.use(t);const a=n.use(i),s=a.Type.def,l=a.Type.or,o=n.use(r),d=o.defaults;s("ImportExpression").bases("Expression").build("source").field("source",s("Expression")),s("ExportAllDeclaration").bases("Declaration").build("source","exported").field("source",s("Literal")).field("exported",l(s("Identifier"),null,void 0),d.null),s("ChainElement").bases("Node").field("optional",Boolean,d.false),s("CallExpression").bases("Expression","ChainElement"),s("MemberExpression").bases("Expression","ChainElement"),s("ChainExpression").bases("Expression").build("expression").field("expression",s("ChainElement")),s("OptionalCallExpression").bases("CallExpression").build("callee","arguments","optional").field("optional",Boolean,d.true),s("OptionalMemberExpression").bases("MemberExpression").build("object","property","computed","optional").field("optional",Boolean,d.true)}}),e("skylark-asttypes/def/es2021",["./operators/es2021","./es2020"],function(e,t){"use strict";return function(i){i.use(e),i.use(t)}}),e("skylark-asttypes/def/es2022",["./es2021","../types"],function(e,t){"use strict";return function(i){i.use(e);const r=i.use(t),n=r.Type.def;n("StaticBlock").bases("Declaration").build("body").field("body",[n("Statement")])}}),e("skylark-asttypes/def/es-proposals",["../types","./es2022"],function(e,t){"use strict";return function(i){i.use(t);const r=i.use(e),n=r.Type,a=r.Type.def,s=n.or,l=i.use(sharedPlugin),o=l.defaults;a("AwaitExpression").build("argument","all").field("argument",s(a("Expression"),null)).field("all",Boolean,o.false),a("Decorator").bases("Node").build("expression").field("expression",a("Expression")),a("Property").field("decorators",s([a("Decorator")],null),o.null),a("MethodDefinition").field("decorators",s([a("Decorator")],null),o.null),a("PrivateName").bases("Expression","Pattern").build("id").field("id",a("Identifier")),a("ClassPrivateProperty").bases("ClassProperty").build("key","value").field("key",a("PrivateName")).field("value",s(a("Expression"),null),o.null),a("ImportAttribute").bases("Node").build("key","value").field("key",s(a("Identifier"),a("Literal"))).field("value",a("Expression")),["ImportDeclaration","ExportAllDeclaration","ExportNamedDeclaration"].forEach(e=>{a(e).field("assertions",[a("ImportAttribute")],o.emptyArray)}),a("RecordExpression").bases("Expression").build("properties").field("properties",[s(a("ObjectProperty"),a("ObjectMethod"),a("SpreadElement"))]),a("TupleExpression").bases("Expression").build("elements").field("elements",[s(a("Expression"),a("SpreadElement"),null)]),a("ModuleExpression").bases("Node").build("body").field("body",a("Program"))}}),e("skylark-asttypes/def/jsx",["./es-proposals","../types","../shared"],function(e,t,i){"use strict";return function(r){r.use(e);const n=r.use(t),a=n.Type.def,s=n.Type.or,l=r.use(i).defaults;a("JSXAttribute").bases("Node").build("name","value").field("name",s(a("JSXIdentifier"),a("JSXNamespacedName"))).field("value",s(a("Literal"),a("JSXExpressionContainer"),a("JSXElement"),a("JSXFragment"),null),l.null),a("JSXIdentifier").bases("Identifier").build("name").field("name",String),a("JSXNamespacedName").bases("Node").build("namespace","name").field("namespace",a("JSXIdentifier")).field("name",a("JSXIdentifier")),a("JSXMemberExpression").bases("MemberExpression").build("object","property").field("object",s(a("JSXIdentifier"),a("JSXMemberExpression"))).field("property",a("JSXIdentifier")).field("computed",Boolean,l.false);const o=s(a("JSXIdentifier"),a("JSXNamespacedName"),a("JSXMemberExpression"));a("JSXSpreadAttribute").bases("Node").build("argument").field("argument",a("Expression"));const d=[s(a("JSXAttribute"),a("JSXSpreadAttribute"))];a("JSXExpressionContainer").bases("Expression").build("expression").field("expression",s(a("Expression"),a("JSXEmptyExpression")));const u=[s(a("JSXText"),a("JSXExpressionContainer"),a("JSXSpreadChild"),a("JSXElement"),a("JSXFragment"),a("Literal"))];a("JSXElement").bases("Expression").build("openingElement","closingElement","children").field("openingElement",a("JSXOpeningElement")).field("closingElement",s(a("JSXClosingElement"),null),l.null).field("children",u,l.emptyArray).field("name",o,function(){return this.openingElement.name},!0).field("selfClosing",Boolean,function(){return this.openingElement.selfClosing},!0).field("attributes",d,function(){return this.openingElement.attributes},!0),a("JSXOpeningElement").bases("Node").build("name","attributes","selfClosing").field("name",o).field("attributes",d,l.emptyArray).field("selfClosing",Boolean,l.false),a("JSXClosingElement").bases("Node").build("name").field("name",o),a("JSXFragment").bases("Expression").build("openingFragment","closingFragment","children").field("openingFragment",a("JSXOpeningFragment")).field("closingFragment",a("JSXClosingFragment")).field("children",u,l.emptyArray),a("JSXOpeningFragment").bases("Node").build(),a("JSXClosingFragment").bases("Node").build(),a("JSXText").bases("Literal").build("value","raw").field("value",String).field("raw",String,function(){return this.value}),a("JSXEmptyExpression").bases("Node").build(),a("JSXSpreadChild").bases("Node").build("expression").field("expression",a("Expression"))}}),e("skylark-asttypes/def/type-annotations",["../types","../shared"],function(e,t){"use strict";return function(i){var r=i.use(e),n=r.Type.def,a=r.Type.or,s=i.use(t).defaults,l=a(n("TypeAnnotation"),n("TSTypeAnnotation"),null),o=a(n("TypeParameterDeclaration"),n("TSTypeParameterDeclaration"),null);n("Identifier").field("typeAnnotation",l,s.null),n("ObjectPattern").field("typeAnnotation",l,s.null),n("Function").field("returnType",l,s.null).field("typeParameters",o,s.null),n("ClassProperty").build("key","value","typeAnnotation","static").field("value",a(n("Expression"),null)).field("static",Boolean,s.false).field("typeAnnotation",l,s.null),["ClassDeclaration","ClassExpression"].forEach(e=>{n(e).field("typeParameters",o,s.null).field("superTypeParameters",a(n("TypeParameterInstantiation"),n("TSTypeParameterInstantiation"),null),s.null).field("implements",a([n("ClassImplements")],[n("TSExpressionWithTypeArguments")]),s.emptyArray)})}}),e("skylark-asttypes/def/flow",["./es-proposals","./type-annotations","../types","../shared"],function(e,t,i,r){"use strict";return function(n){n.use(e),n.use(t);const a=n.use(i),s=a.Type.def,l=a.Type.or,o=n.use(r).defaults;s("Flow").bases("Node"),s("FlowType").bases("Flow"),s("AnyTypeAnnotation").bases("FlowType").build(),s("EmptyTypeAnnotation").bases("FlowType").build(),s("MixedTypeAnnotation").bases("FlowType").build(),s("VoidTypeAnnotation").bases("FlowType").build(),s("SymbolTypeAnnotation").bases("FlowType").build(),s("NumberTypeAnnotation").bases("FlowType").build(),s("BigIntTypeAnnotation").bases("FlowType").build(),s("NumberLiteralTypeAnnotation").bases("FlowType").build("value","raw").field("value",Number).field("raw",String),s("NumericLiteralTypeAnnotation").bases("FlowType").build("value","raw").field("value",Number).field("raw",String),s("BigIntLiteralTypeAnnotation").bases("FlowType").build("value","raw").field("value",null).field("raw",String),s("StringTypeAnnotation").bases("FlowType").build(),s("StringLiteralTypeAnnotation").bases("FlowType").build("value","raw").field("value",String).field("raw",String),s("BooleanTypeAnnotation").bases("FlowType").build(),s("BooleanLiteralTypeAnnotation").bases("FlowType").build("value","raw").field("value",Boolean).field("raw",String),s("TypeAnnotation").bases("Node").build("typeAnnotation").field("typeAnnotation",s("FlowType")),s("NullableTypeAnnotation").bases("FlowType").build("typeAnnotation").field("typeAnnotation",s("FlowType")),s("NullLiteralTypeAnnotation").bases("FlowType").build(),s("NullTypeAnnotation").bases("FlowType").build(),s("ThisTypeAnnotation").bases("FlowType").build(),s("ExistsTypeAnnotation").bases("FlowType").build(),s("ExistentialTypeParam").bases("FlowType").build(),s("FunctionTypeAnnotation").bases("FlowType").build("params","returnType","rest","typeParameters").field("params",[s("FunctionTypeParam")]).field("returnType",s("FlowType")).field("rest",l(s("FunctionTypeParam"),null)).field("typeParameters",l(s("TypeParameterDeclaration"),null)),s("FunctionTypeParam").bases("Node").build("name","typeAnnotation","optional").field("name",l(s("Identifier"),null)).field("typeAnnotation",s("FlowType")).field("optional",Boolean),s("ArrayTypeAnnotation").bases("FlowType").build("elementType").field("elementType",s("FlowType")),s("ObjectTypeAnnotation").bases("FlowType").build("properties","indexers","callProperties").field("properties",[l(s("ObjectTypeProperty"),s("ObjectTypeSpreadProperty"))]).field("indexers",[s("ObjectTypeIndexer")],o.emptyArray).field("callProperties",[s("ObjectTypeCallProperty")],o.emptyArray).field("inexact",l(Boolean,void 0),o[void 0]).field("exact",Boolean,o.false).field("internalSlots",[s("ObjectTypeInternalSlot")],o.emptyArray),s("Variance").bases("Node").build("kind").field("kind",l("plus","minus"));const d=l(s("Variance"),"plus","minus",null);s("ObjectTypeProperty").bases("Node").build("key","value","optional").field("key",l(s("Literal"),s("Identifier"))).field("value",s("FlowType")).field("optional",Boolean).field("variance",d,o.null),s("ObjectTypeIndexer").bases("Node").build("id","key","value").field("id",s("Identifier")).field("key",s("FlowType")).field("value",s("FlowType")).field("variance",d,o.null).field("static",Boolean,o.false),s("ObjectTypeCallProperty").bases("Node").build("value").field("value",s("FunctionTypeAnnotation")).field("static",Boolean,o.false),s("QualifiedTypeIdentifier").bases("Node").build("qualification","id").field("qualification",l(s("Identifier"),s("QualifiedTypeIdentifier"))).field("id",s("Identifier")),s("GenericTypeAnnotation").bases("FlowType").build("id","typeParameters").field("id",l(s("Identifier"),s("QualifiedTypeIdentifier"))).field("typeParameters",l(s("TypeParameterInstantiation"),null)),s("MemberTypeAnnotation").bases("FlowType").build("object","property").field("object",s("Identifier")).field("property",l(s("MemberTypeAnnotation"),s("GenericTypeAnnotation"))),s("IndexedAccessType").bases("FlowType").build("objectType","indexType").field("objectType",s("FlowType")).field("indexType",s("FlowType")),s("OptionalIndexedAccessType").bases("FlowType").build("objectType","indexType","optional").field("objectType",s("FlowType")).field("indexType",s("FlowType")).field("optional",Boolean),s("UnionTypeAnnotation").bases("FlowType").build("types").field("types",[s("FlowType")]),s("IntersectionTypeAnnotation").bases("FlowType").build("types").field("types",[s("FlowType")]),s("TypeofTypeAnnotation").bases("FlowType").build("argument").field("argument",s("FlowType")),s("ObjectTypeSpreadProperty").bases("Node").build("argument").field("argument",s("FlowType")),s("ObjectTypeInternalSlot").bases("Node").build("id","value","optional","static","method").field("id",s("Identifier")).field("value",s("FlowType")).field("optional",Boolean).field("static",Boolean).field("method",Boolean),s("TypeParameterDeclaration").bases("Node").build("params").field("params",[s("TypeParameter")]),s("TypeParameterInstantiation").bases("Node").build("params").field("params",[s("FlowType")]),s("TypeParameter").bases("FlowType").build("name","variance","bound","default").field("name",String).field("variance",d,o.null).field("bound",l(s("TypeAnnotation"),null),o.null).field("default",l(s("FlowType"),null),o.null),s("ClassProperty").field("variance",d,o.null),s("ClassImplements").bases("Node").build("id").field("id",s("Identifier")).field("superClass",l(s("Expression"),null),o.null).field("typeParameters",l(s("TypeParameterInstantiation"),null),o.null),s("InterfaceTypeAnnotation").bases("FlowType").build("body","extends").field("body",s("ObjectTypeAnnotation")).field("extends",l([s("InterfaceExtends")],null),o.null),s("InterfaceDeclaration").bases("Declaration").build("id","body","extends").field("id",s("Identifier")).field("typeParameters",l(s("TypeParameterDeclaration"),null),o.null).field("body",s("ObjectTypeAnnotation")).field("extends",[s("InterfaceExtends")]),s("DeclareInterface").bases("InterfaceDeclaration").build("id","body","extends"),s("InterfaceExtends").bases("Node").build("id").field("id",s("Identifier")).field("typeParameters",l(s("TypeParameterInstantiation"),null),o.null),s("TypeAlias").bases("Declaration").build("id","typeParameters","right").field("id",s("Identifier")).field("typeParameters",l(s("TypeParameterDeclaration"),null)).field("right",s("FlowType")),s("DeclareTypeAlias").bases("TypeAlias").build("id","typeParameters","right"),s("OpaqueType").bases("Declaration").build("id","typeParameters","impltype","supertype").field("id",s("Identifier")).field("typeParameters",l(s("TypeParameterDeclaration"),null)).field("impltype",s("FlowType")).field("supertype",l(s("FlowType"),null)),s("DeclareOpaqueType").bases("OpaqueType").build("id","typeParameters","supertype").field("impltype",l(s("FlowType"),null)),s("TypeCastExpression").bases("Expression").build("expression","typeAnnotation").field("expression",s("Expression")).field("typeAnnotation",s("TypeAnnotation")),s("TupleTypeAnnotation").bases("FlowType").build("types").field("types",[s("FlowType")]),s("DeclareVariable").bases("Statement").build("id").field("id",s("Identifier")),s("DeclareFunction").bases("Statement").build("id").field("id",s("Identifier")).field("predicate",l(s("FlowPredicate"),null),o.null),s("DeclareClass").bases("InterfaceDeclaration").build("id"),s("DeclareModule").bases("Statement").build("id","body").field("id",l(s("Identifier"),s("Literal"))).field("body",s("BlockStatement")),s("DeclareModuleExports").bases("Statement").build("typeAnnotation").field("typeAnnotation",s("TypeAnnotation")),s("DeclareExportDeclaration").bases("Declaration").build("default","declaration","specifiers","source").field("default",Boolean).field("declaration",l(s("DeclareVariable"),s("DeclareFunction"),s("DeclareClass"),s("FlowType"),s("TypeAlias"),s("DeclareOpaqueType"),s("InterfaceDeclaration"),null)).field("specifiers",[l(s("ExportSpecifier"),s("ExportBatchSpecifier"))],o.emptyArray).field("source",l(s("Literal"),null),o.null),s("DeclareExportAllDeclaration").bases("Declaration").build("source").field("source",l(s("Literal"),null),o.null),s("ImportDeclaration").field("importKind",l("value","type","typeof"),()=>"value"),s("FlowPredicate").bases("Flow"),s("InferredPredicate").bases("FlowPredicate").build(),s("DeclaredPredicate").bases("FlowPredicate").build("value").field("value",s("Expression")),s("Function").field("predicate",l(s("FlowPredicate"),null),o.null),s("CallExpression").field("typeArguments",l(null,s("TypeParameterInstantiation")),o.null),s("NewExpression").field("typeArguments",l(null,s("TypeParameterInstantiation")),o.null),s("EnumDeclaration").bases("Declaration").build("id","body").field("id",s("Identifier")).field("body",l(s("EnumBooleanBody"),s("EnumNumberBody"),s("EnumStringBody"),s("EnumSymbolBody"))),s("EnumBooleanBody").build("members","explicitType").field("members",[s("EnumBooleanMember")]).field("explicitType",Boolean),s("EnumNumberBody").build("members","explicitType").field("members",[s("EnumNumberMember")]).field("explicitType",Boolean),s("EnumStringBody").build("members","explicitType").field("members",l([s("EnumStringMember")],[s("EnumDefaultedMember")])).field("explicitType",Boolean),s("EnumSymbolBody").build("members").field("members",[s("EnumDefaultedMember")]),s("EnumBooleanMember").build("id","init").field("id",s("Identifier")).field("init",l(s("Literal"),Boolean)),s("EnumNumberMember").build("id","init").field("id",s("Identifier")).field("init",s("Literal")),s("EnumStringMember").build("id","init").field("id",s("Identifier")).field("init",s("Literal")),s("EnumDefaultedMember").build("id").field("id",s("Identifier"))}}),e("skylark-asttypes/def/esprima",["./es-proposals","../types","../shared"],function(e,t,i){"use strict";return function(r){r.use(e);var n=r.use(t),a=r.use(i).defaults,s=n.Type.def,l=n.Type.or;s("VariableDeclaration").field("declarations",[l(s("VariableDeclarator"),s("Identifier"))]),s("Property").field("value",l(s("Expression"),s("Pattern"))),s("ArrayPattern").field("elements",[l(s("Pattern"),s("SpreadElement"),null)]),s("ObjectPattern").field("properties",[l(s("Property"),s("PropertyPattern"),s("SpreadPropertyPattern"),s("SpreadProperty"))]),s("ExportSpecifier").bases("ModuleSpecifier").build("id","name"),s("ExportBatchSpecifier").bases("Specifier").build(),s("ExportDeclaration").bases("Declaration").build("default","declaration","specifiers","source").field("default",Boolean).field("declaration",l(s("Declaration"),s("Expression"),null)).field("specifiers",[l(s("ExportSpecifier"),s("ExportBatchSpecifier"))],a.emptyArray).field("source",l(s("Literal"),null),a.null),s("Block").bases("Comment").build("value","leading","trailing"),s("Line").bases("Comment").build("value","leading","trailing")}}),e("skylark-asttypes/def/babel-core",["./es-proposals","../types"],function(e,t){"use strict";return function(i){i.use(e);const r=i.use(t),n=i.use(sharedPlugin).defaults,a=r.Type.def,s=r.Type.or,{undefined:l}=r.builtInTypes;function o(e=String,t){return["extra",{rawValue:e,raw:String},function(){const e=r.getFieldValue(this,"value");return{rawValue:e,raw:t?t(e):String(e)}}]}a("Noop").bases("Statement").build(),a("DoExpression").bases("Expression").build("body").field("body",[a("Statement")]),a("BindExpression").bases("Expression").build("object","callee").field("object",s(a("Expression"),null)).field("callee",a("Expression")),a("ParenthesizedExpression").bases("Expression").build("expression").field("expression",a("Expression")),a("ExportNamespaceSpecifier").bases("Specifier").build("exported").field("exported",a("Identifier")),a("ExportDefaultSpecifier").bases("Specifier").build("exported").field("exported",a("Identifier")),a("CommentBlock").bases("Comment").build("value","leading","trailing"),a("CommentLine").bases("Comment").build("value","leading","trailing"),a("Directive").bases("Node").build("value").field("value",a("DirectiveLiteral")),a("DirectiveLiteral").bases("Node","Expression").build("value").field("value",String,n["use strict"]),a("InterpreterDirective").bases("Node").build("value").field("value",String),a("BlockStatement").bases("Statement").build("body").field("body",[a("Statement")]).field("directives",[a("Directive")],n.emptyArray),a("Program").bases("Node").build("body").field("body",[a("Statement")]).field("directives",[a("Directive")],n.emptyArray).field("interpreter",s(a("InterpreterDirective"),null),n.null),a("StringLiteral").bases("Literal").build("value").field("value",String).field(...o(String,e=>JSON.stringify(e))),a("NumericLiteral").bases("Literal").build("value").field("value",Number).field("raw",s(String,null),n.null).field(...o(Number)),a("BigIntLiteral").bases("Literal").build("value").field("value",s(String,Number)).field(...o(String,e=>e+"n")),a("DecimalLiteral").bases("Literal").build("value").field("value",String).field(...o(String,e=>e+"m")),a("NullLiteral").bases("Literal").build().field("value",null,n.null),a("BooleanLiteral").bases("Literal").build("value").field("value",Boolean),a("RegExpLiteral").bases("Literal").build("pattern","flags").field("pattern",String).field("flags",String).field("value",RegExp,function(){return new RegExp(this.pattern,this.flags)}).field(...o(s(RegExp,l),e=>`/${e.pattern}/${e.flags||""}`)).field("regex",{pattern:String,flags:String},function(){return{pattern:this.pattern,flags:this.flags}});var d=s(a("Property"),a("ObjectMethod"),a("ObjectProperty"),a("SpreadProperty"),a("SpreadElement"));a("ObjectExpression").bases("Expression").build("properties").field("properties",[d]),a("ObjectMethod").bases("Node","Function").build("kind","key","params","body","computed").field("kind",s("method","get","set")).field("key",s(a("Literal"),a("Identifier"),a("Expression"))).field("params",[a("Pattern")]).field("body",a("BlockStatement")).field("computed",Boolean,n.false).field("generator",Boolean,n.false).field("async",Boolean,n.false).field("accessibility",s(a("Literal"),null),n.null).field("decorators",s([a("Decorator")],null),n.null),a("ObjectProperty").bases("Node").build("key","value").field("key",s(a("Literal"),a("Identifier"),a("Expression"))).field("value",s(a("Expression"),a("Pattern"))).field("accessibility",s(a("Literal"),null),n.null).field("computed",Boolean,n.false);var u=s(a("MethodDefinition"),a("VariableDeclarator"),a("ClassPropertyDefinition"),a("ClassProperty"),a("ClassPrivateProperty"),a("ClassMethod"),a("ClassPrivateMethod"),a("ClassAccessorProperty"),a("StaticBlock"));a("ClassBody").bases("Declaration").build("body").field("body",[u]),a("ClassMethod").bases("Declaration","Function").build("kind","key","params","body","computed","static").field("key",s(a("Literal"),a("Identifier"),a("Expression"))),a("ClassPrivateMethod").bases("Declaration","Function").build("key","params","body","kind","computed","static").field("key",a("PrivateName")),a("ClassAccessorProperty").bases("Declaration").build("key","value","decorators","computed","static").field("key",s(a("Literal"),a("Identifier"),a("PrivateName"),a("Expression"))).field("value",s(a("Expression"),null),n.null),["ClassMethod","ClassPrivateMethod"].forEach(e=>{a(e).field("kind",s("get","set","method","constructor"),()=>"method").field("body",a("BlockStatement")).field("access",s("public","private","protected",null),n.null)}),["ClassMethod","ClassPrivateMethod","ClassAccessorProperty"].forEach(e=>{a(e).field("computed",Boolean,n.false).field("static",Boolean,n.false).field("abstract",Boolean,n.false).field("accessibility",s("public","private","protected",null),n.null).field("decorators",s([a("Decorator")],null),n.null).field("definite",Boolean,n.false).field("optional",Boolean,n.false).field("override",Boolean,n.false).field("readonly",Boolean,n.false)});var p=s(a("Property"),a("PropertyPattern"),a("SpreadPropertyPattern"),a("SpreadProperty"),a("ObjectProperty"),a("RestProperty"),a("RestElement"));a("ObjectPattern").bases("Pattern").build("properties").field("properties",[p]).field("decorators",s([a("Decorator")],null),n.null),a("SpreadProperty").bases("Node").build("argument").field("argument",a("Expression")),a("RestProperty").bases("Node").build("argument").field("argument",a("Expression")),a("ForAwaitStatement").bases("Statement").build("left","right","body").field("left",s(a("VariableDeclaration"),a("Expression"))).field("right",a("Expression")).field("body",a("Statement")),a("Import").bases("Expression").build()}}),e("skylark-asttypes/def/babel",["../types","./babel-core","./flow"],function(e,t,i){"use strict";return function(r){const n=r.use(e),a=n.Type.def;r.use(t),r.use(i),a("V8IntrinsicIdentifier").bases("Expression").build("name").field("name",String),a("TopicReference").bases("Expression").build()}}),e("skylark-asttypes/def/typescript",["./babel-core","./type-annotations","../types","../shared"],function(e,t,i,r){"use strict";return function(n){n.use(e),n.use(t);var a=n.use(i),s=a.namedTypes,l=a.Type.def,o=a.Type.or,d=n.use(r).defaults,u=a.Type.from(function(e,t){return!(!s.StringLiteral||!s.StringLiteral.check(e,t))||!(!s.Literal||!s.Literal.check(e,t)||"string"!=typeof e.value)},"StringLiteral");l("TSType").bases("Node");var p=o(l("Identifier"),l("TSQualifiedName"));l("TSTypeReference").bases("TSType","TSHasOptionalTypeParameterInstantiation").build("typeName","typeParameters").field("typeName",p),l("TSHasOptionalTypeParameterInstantiation").field("typeParameters",o(l("TSTypeParameterInstantiation"),null),d.null),l("TSHasOptionalTypeParameters").field("typeParameters",o(l("TSTypeParameterDeclaration"),null,void 0),d.null),l("TSHasOptionalTypeAnnotation").field("typeAnnotation",o(l("TSTypeAnnotation"),null),d.null),l("TSQualifiedName").bases("Node").build("left","right").field("left",p).field("right",p),l("TSAsExpression").bases("Expression","Pattern").build("expression","typeAnnotation").field("expression",l("Expression")).field("typeAnnotation",l("TSType")).field("extra",o({parenthesized:Boolean},null),d.null),l("TSTypeCastExpression").bases("Expression").build("expression","typeAnnotation").field("expression",l("Expression")).field("typeAnnotation",l("TSType")),l("TSSatisfiesExpression").bases("Expression","Pattern").build("expression","typeAnnotation").field("expression",l("Expression")).field("typeAnnotation",l("TSType")),l("TSNonNullExpression").bases("Expression","Pattern").build("expression").field("expression",l("Expression")),["TSAnyKeyword","TSBigIntKeyword","TSBooleanKeyword","TSNeverKeyword","TSNullKeyword","TSNumberKeyword","TSObjectKeyword","TSStringKeyword","TSSymbolKeyword","TSUndefinedKeyword","TSUnknownKeyword","TSVoidKeyword","TSIntrinsicKeyword","TSThisType"].forEach(e=>{l(e).bases("TSType").build()}),l("TSArrayType").bases("TSType").build("elementType").field("elementType",l("TSType")),l("TSLiteralType").bases("TSType").build("literal").field("literal",o(l("NumericLiteral"),l("StringLiteral"),l("BooleanLiteral"),l("TemplateLiteral"),l("UnaryExpression"),l("BigIntLiteral"))),l("TemplateLiteral").field("expressions",o([l("Expression")],[l("TSType")])),["TSUnionType","TSIntersectionType"].forEach(e=>{l(e).bases("TSType").build("types").field("types",[l("TSType")])}),l("TSConditionalType").bases("TSType").build("checkType","extendsType","trueType","falseType").field("checkType",l("TSType")).field("extendsType",l("TSType")).field("trueType",l("TSType")).field("falseType",l("TSType")),l("TSInferType").bases("TSType").build("typeParameter").field("typeParameter",l("TSTypeParameter")),l("TSParenthesizedType").bases("TSType").build("typeAnnotation").field("typeAnnotation",l("TSType"));var f=[o(l("Identifier"),l("RestElement"),l("ArrayPattern"),l("ObjectPattern"))];["TSFunctionType","TSConstructorType"].forEach(e=>{l(e).bases("TSType","TSHasOptionalTypeParameters","TSHasOptionalTypeAnnotation").build("parameters").field("parameters",f)}),l("TSDeclareFunction").bases("Declaration","TSHasOptionalTypeParameters").build("id","params","returnType").field("declare",Boolean,d.false).field("async",Boolean,d.false).field("generator",Boolean,d.false).field("id",o(l("Identifier"),null),d.null).field("params",[l("Pattern")]).field("returnType",o(l("TSTypeAnnotation"),l("Noop"),null),d.null),l("TSDeclareMethod").bases("Declaration","TSHasOptionalTypeParameters").build("key","params","returnType").field("async",Boolean,d.false).field("generator",Boolean,d.false).field("params",[l("Pattern")]).field("abstract",Boolean,d.false).field("accessibility",o("public","private","protected",void 0),d[void 0]).field("static",Boolean,d.false).field("computed",Boolean,d.false).field("optional",Boolean,d.false).field("key",o(l("Identifier"),l("StringLiteral"),l("NumericLiteral"),l("Expression"))).field("kind",o("get","set","method","constructor"),function(){return"method"}).field("access",o("public","private","protected",void 0),d[void 0]).field("decorators",o([l("Decorator")],null),d.null).field("returnType",o(l("TSTypeAnnotation"),l("Noop"),null),d.null),l("TSMappedType").bases("TSType").build("typeParameter","typeAnnotation").field("readonly",o(Boolean,"+","-"),d.false).field("typeParameter",l("TSTypeParameter")).field("optional",o(Boolean,"+","-"),d.false).field("typeAnnotation",o(l("TSType"),null),d.null),l("TSTupleType").bases("TSType").build("elementTypes").field("elementTypes",[o(l("TSType"),l("TSNamedTupleMember"))]),l("TSNamedTupleMember").bases("TSType").build("label","elementType","optional").field("label",l("Identifier")).field("optional",Boolean,d.false).field("elementType",l("TSType")),l("TSRestType").bases("TSType").build("typeAnnotation").field("typeAnnotation",l("TSType")),l("TSOptionalType").bases("TSType").build("typeAnnotation").field("typeAnnotation",l("TSType")),l("TSIndexedAccessType").bases("TSType").build("objectType","indexType").field("objectType",l("TSType")).field("indexType",l("TSType")),l("TSTypeOperator").bases("TSType").build("operator").field("operator",String).field("typeAnnotation",l("TSType")),l("TSTypeAnnotation").bases("Node").build("typeAnnotation").field("typeAnnotation",o(l("TSType"),l("TSTypeAnnotation"))),l("TSIndexSignature").bases("Declaration","TSHasOptionalTypeAnnotation").build("parameters","typeAnnotation").field("parameters",[l("Identifier")]).field("readonly",Boolean,d.false),l("TSPropertySignature").bases("Declaration","TSHasOptionalTypeAnnotation").build("key","typeAnnotation","optional").field("key",l("Expression")).field("computed",Boolean,d.false).field("readonly",Boolean,d.false).field("optional",Boolean,d.false).field("initializer",o(l("Expression"),null),d.null),l("TSMethodSignature").bases("Declaration","TSHasOptionalTypeParameters","TSHasOptionalTypeAnnotation").build("key","parameters","typeAnnotation").field("key",l("Expression")).field("computed",Boolean,d.false).field("optional",Boolean,d.false).field("parameters",f),l("TSTypePredicate").bases("TSTypeAnnotation","TSType").build("parameterName","typeAnnotation","asserts").field("parameterName",o(l("Identifier"),l("TSThisType"))).field("typeAnnotation",o(l("TSTypeAnnotation"),null),d.null).field("asserts",Boolean,d.false),["TSCallSignatureDeclaration","TSConstructSignatureDeclaration"].forEach(e=>{l(e).bases("Declaration","TSHasOptionalTypeParameters","TSHasOptionalTypeAnnotation").build("parameters","typeAnnotation").field("parameters",f)}),l("TSEnumMember").bases("Node").build("id","initializer").field("id",o(l("Identifier"),u)).field("initializer",o(l("Expression"),null),d.null),l("TSTypeQuery").bases("TSType").build("exprName").field("exprName",o(p,l("TSImportType")));var c=o(l("TSCallSignatureDeclaration"),l("TSConstructSignatureDeclaration"),l("TSIndexSignature"),l("TSMethodSignature"),l("TSPropertySignature"));l("TSTypeLiteral").bases("TSType").build("members").field("members",[c]),l("TSTypeParameter").bases("Identifier").build("name","constraint","default").field("name",o(l("Identifier"),String)).field("constraint",o(l("TSType"),void 0),d[void 0]).field("default",o(l("TSType"),void 0),d[void 0]),l("TSTypeAssertion").bases("Expression","Pattern").build("typeAnnotation","expression").field("typeAnnotation",l("TSType")).field("expression",l("Expression")).field("extra",o({parenthesized:Boolean},null),d.null),l("TSTypeParameterDeclaration").bases("Declaration").build("params").field("params",[l("TSTypeParameter")]),l("TSInstantiationExpression").bases("Expression","TSHasOptionalTypeParameterInstantiation").build("expression","typeParameters").field("expression",l("Expression")),l("TSTypeParameterInstantiation").bases("Node").build("params").field("params",[l("TSType")]),l("TSEnumDeclaration").bases("Declaration").build("id","members").field("id",l("Identifier")).field("const",Boolean,d.false).field("declare",Boolean,d.false).field("members",[l("TSEnumMember")]).field("initializer",o(l("Expression"),null),d.null),l("TSTypeAliasDeclaration").bases("Declaration","TSHasOptionalTypeParameters").build("id","typeAnnotation").field("id",l("Identifier")).field("declare",Boolean,d.false).field("typeAnnotation",l("TSType")),l("TSModuleBlock").bases("Node").build("body").field("body",[l("Statement")]),l("TSModuleDeclaration").bases("Declaration").build("id","body").field("id",o(u,p)).field("declare",Boolean,d.false).field("global",Boolean,d.false).field("body",o(l("TSModuleBlock"),l("TSModuleDeclaration"),null),d.null),l("TSImportType").bases("TSType","TSHasOptionalTypeParameterInstantiation").build("argument","qualifier","typeParameters").field("argument",u).field("qualifier",o(p,void 0),d[void 0]),l("TSImportEqualsDeclaration").bases("Declaration").build("id","moduleReference").field("id",l("Identifier")).field("isExport",Boolean,d.false).field("moduleReference",o(p,l("TSExternalModuleReference"))),l("TSExternalModuleReference").bases("Declaration").build("expression").field("expression",u),l("TSExportAssignment").bases("Statement").build("expression").field("expression",l("Expression")),l("TSNamespaceExportDeclaration").bases("Declaration").build("id").field("id",l("Identifier")),l("TSInterfaceBody").bases("Node").build("body").field("body",[c]),l("TSExpressionWithTypeArguments").bases("TSType","TSHasOptionalTypeParameterInstantiation").build("expression","typeParameters").field("expression",p),l("TSInterfaceDeclaration").bases("Declaration","TSHasOptionalTypeParameters").build("id","body").field("id",p).field("declare",Boolean,d.false).field("extends",o([l("TSExpressionWithTypeArguments")],null),d.null).field("body",l("TSInterfaceBody")),l("TSParameterProperty").bases("Pattern").build("parameter").field("accessibility",o("public","private","protected",void 0),d[void 0]).field("readonly",Boolean,d.false).field("parameter",o(l("Identifier"),l("AssignmentPattern"))),l("ClassProperty").field("access",o("public","private","protected",void 0),d[void 0]),l("ClassAccessorProperty").bases("Declaration","TSHasOptionalTypeAnnotation"),l("ClassBody").field("body",[o(l("MethodDefinition"),l("VariableDeclarator"),l("ClassPropertyDefinition"),l("ClassProperty"),l("ClassPrivateProperty"),l("ClassAccessorProperty"),l("ClassMethod"),l("ClassPrivateMethod"),l("StaticBlock"),l("TSDeclareMethod"),c)])}}),e("skylark-asttypes/gen/namedTypes",[],function(){"use strict";return{}}),e("skylark-asttypes/gen/visitor",[],function(){"use strict";return{}}),e("skylark-asttypes/main",["./fork","./def/es-proposals","./def/jsx","./def/flow","./def/esprima","./def/babel","./def/typescript","./types","./gen/namedTypes","./gen/visitor"],function(e,t,i,r,n,a,s,l,o,d){"use strict";const{ASTNode:u,AnyType:p,Field:f}=l,{namedTypes:c}=o,{Visitor:y}=d,{astNodesAreEquivalent:b,builders:h,builtInTypes:m,defineMethod:T,eachField:S,finalize:E,getBuilderName:g,getFieldNames:v,getFieldValue:x,getSupertypeNames:P,namedTypes:w,NodePath:k,Path:A,PathVisitor:N,someField:I,Type:B,use:D,visit:F}=e([t,i,r,n,a,s]);return Object.assign(c,w),{AnyType:p,ASTNode:u,astNodesAreEquivalent:b,builders:h,builtInTypes:m,defineMethod:T,eachField:S,Field:f,finalize:E,getBuilderName:g,getFieldNames:v,getFieldValue:x,getSupertypeNames:P,namedTypes:c,NodePath:k,Path:A,PathVisitor:N,someField:I,Type:B,use:D,visit:F,Visitor:y}}),e("skylark-asttypes",["skylark-asttypes/main"],function(e){return e})}(i),!r){var s=require("skylark-langx-ns");n?module.exports=s:t.skylarkjs=s}}(0,this);
//# sourceMappingURL=sourcemaps/skylark-asttypes-all.js.map
