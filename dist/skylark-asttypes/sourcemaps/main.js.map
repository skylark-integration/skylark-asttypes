{"version":3,"sources":["main.js"],"names":["define","fork","esProposalsDef","jsxDef","flowDef","esprimaDef","babelDef","typescriptDef","m_types","m_namedTypes","m_visitor","ASTNode","AnyType","Field","namedTypes","Visitor","astNodesAreEquivalent","builders","builtInTypes","defineMethod","eachField","finalize","getBuilderName","getFieldNames","getFieldValue","getSupertypeNames","n","NodePath","Path","PathVisitor","someField","Type","use","visit","Object","assign"],"mappings":";;;;;;;AAAAA,QACI,SACA,qBACA,YACA,aACA,gBACA,cACA,mBACA,UACA,mBACA,iBACD,SAAUC,EAAMC,EAAgBC,EAAQC,EAASC,EAAYC,EAAUC,EAAeC,EAASC,EAAcC,GAC5G,aACA,MAAMC,QAACA,EAAOC,QAAEA,EAAOC,MAAEA,GAASL,GAC5BM,WAACA,GAAcL,GACfM,QAACA,GAAWL,GACZM,sBACFA,EAAqBC,SACrBA,EAAQC,aACRA,EAAYC,aACZA,EAAYC,UACZA,EAASC,SACTA,EAAQC,eACRA,EAAcC,cACdA,EAAaC,cACbA,EAAaC,kBACbA,EACAX,WAAYY,EAACC,SACbA,EAAQC,KACRA,EAAIC,YACJA,EAAWC,UACXA,EAASC,KACTA,EAAIC,IACJA,EAAGC,MACHA,GACAhC,GACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IAGJ,OADA2B,OAAOC,OAAOrB,EAAYY,IAEtBd,QAAAA,EACAD,QAAAA,EACAK,sBAAAA,EACAC,SAAAA,EACAC,aAAAA,EACAC,aAAAA,EACAC,UAAAA,EACAP,MAAAA,EACAQ,SAAAA,EACAC,eAAAA,EACAC,cAAAA,EACAC,cAAAA,EACAC,kBAAAA,EACAX,WAAAA,EACAa,SAAAA,EACAC,KAAAA,EACAC,YAAAA,EACAC,UAAAA,EACAC,KAAAA,EACAC,IAAAA,EACAC,MAAAA,EACAlB,QAAAA","file":"../main.js","sourcesContent":["define([\n    './fork',\n    './def/es-proposals',\n    './def/jsx',\n    './def/flow',\n    './def/esprima',\n    './def/babel',\n    './def/typescript',\n    './types',\n    './gen/namedTypes',\n    './gen/visitor'\n], function (fork, esProposalsDef, jsxDef, flowDef, esprimaDef, babelDef, typescriptDef, m_types, m_namedTypes, m_visitor) {\n    'use strict';\n    const {ASTNode, AnyType, Field} = m_types;\n    const {namedTypes} = m_namedTypes;\n    const {Visitor} = m_visitor;\n    const {\n        astNodesAreEquivalent,\n        builders,\n        builtInTypes,\n        defineMethod,\n        eachField,\n        finalize,\n        getBuilderName,\n        getFieldNames,\n        getFieldValue,\n        getSupertypeNames,\n        namedTypes: n,\n        NodePath,\n        Path,\n        PathVisitor,\n        someField,\n        Type,\n        use,\n        visit\n    } = fork([\n        esProposalsDef,\n        jsxDef,\n        flowDef,\n        esprimaDef,\n        babelDef,\n        typescriptDef\n    ]);\n    Object.assign(namedTypes, n);\n    return {\n        AnyType,\n        ASTNode,\n        astNodesAreEquivalent,\n        builders,\n        builtInTypes,\n        defineMethod,\n        eachField,\n        Field,\n        finalize,\n        getBuilderName,\n        getFieldNames,\n        getFieldValue,\n        getSupertypeNames,\n        namedTypes,\n        NodePath,\n        Path,\n        PathVisitor,\n        someField,\n        Type,\n        use,\n        visit,\n        Visitor\n    };\n});"]}