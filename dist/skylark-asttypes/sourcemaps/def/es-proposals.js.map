{"version":3,"sources":["def/es-proposals.js"],"names":["define","typesPlugin","es2022Def","fork","use","types","Type","def","or","defaults","sharedPlugin","build","field","Boolean","bases","forEach","decl","emptyArray"],"mappings":";;;;;;;AAAAA,OAAO,CACH,WACA,YACD,SAAUC,EAAaC,GACtB,aACA,OAAO,SAAUC,GACbA,EAAKC,IAAIF,CAAS,EAClB,IAAMG,EAAQF,EAAKC,IAAIH,CAAW,EAC5BK,EAAOD,EAAMC,KACnB,MAAMC,EAAMF,EAAMC,KAAKC,IACjBC,EAAKF,EAAKE,GAEhB,MAAMC,EADSN,EAAKC,IAAIM,YAAY,EACZD,SACxBF,EAAI,iBAAiB,EAAEI,MAAM,WAAY,KAAK,EAAEC,MAAM,WAAYJ,EAAGD,EAAI,YAAY,EAAG,IAAI,CAAC,EAAEK,MAAM,MAAOC,QAASJ,EAAgB,KAAC,EACtIF,EAAI,WAAW,EAAEO,MAAM,MAAM,EAAEH,MAAM,YAAY,EAAEC,MAAM,aAAcL,EAAI,YAAY,CAAC,EACxFA,EAAI,UAAU,EAAEK,MAAM,aAAcJ,EAAG,CAACD,EAAI,WAAW,GAAI,IAAI,EAAGE,EAAe,IAAC,EAClFF,EAAI,kBAAkB,EAAEK,MAAM,aAAcJ,EAAG,CAACD,EAAI,WAAW,GAAI,IAAI,EAAGE,EAAe,IAAC,EAC1FF,EAAI,aAAa,EAAEO,MAAM,aAAc,SAAS,EAAEH,MAAM,IAAI,EAAEC,MAAM,KAAML,EAAI,YAAY,CAAC,EAC3FA,EAAI,sBAAsB,EAAEO,MAAM,eAAe,EAAEH,MAAM,MAAO,OAAO,EAAEC,MAAM,MAAOL,EAAI,aAAa,CAAC,EAAEK,MAAM,QAASJ,EAAGD,EAAI,YAAY,EAAG,IAAI,EAAGE,EAAe,IAAC,EACtKF,EAAI,iBAAiB,EAAEO,MAAM,MAAM,EAAEH,MAAM,MAAO,OAAO,EAAEC,MAAM,MAAOJ,EAAGD,EAAI,YAAY,EAAGA,EAAI,SAAS,CAAC,CAAC,EAAEK,MAAM,QAASL,EAAI,YAAY,CAAC,EAC/I,CACI,oBACA,uBACA,0BACFQ,QAAQC,IACNT,EAAIS,CAAI,EAAEJ,MAAM,aAAc,CAACL,EAAI,iBAAiB,GAAIE,EAASQ,UAAU,CAC/E,CAAC,EACDV,EAAI,kBAAkB,EAAEO,MAAM,YAAY,EAAEH,MAAM,YAAY,EAAEC,MAAM,aAAc,CAACJ,EAAGD,EAAI,gBAAgB,EAAGA,EAAI,cAAc,EAAGA,EAAI,eAAe,CAAC,EAAE,EAC1JA,EAAI,iBAAiB,EAAEO,MAAM,YAAY,EAAEH,MAAM,UAAU,EAAEC,MAAM,WAAY,CAACJ,EAAGD,EAAI,YAAY,EAAGA,EAAI,eAAe,EAAG,IAAI,EAAE,EAClIA,EAAI,kBAAkB,EAAEO,MAAM,MAAM,EAAEH,MAAM,MAAM,EAAEC,MAAM,OAAQL,EAAI,SAAS,CAAC,CACpF,CACJ,CAAC","file":"../../def/es-proposals.js","sourcesContent":["define([\n    '../types',\n    './es2022'\n], function (typesPlugin, es2022Def) {\n    'use strict';\n    return function (fork) {\n        fork.use(es2022Def);\n        const types = fork.use(typesPlugin);\n        const Type = types.Type;\n        const def = types.Type.def;\n        const or = Type.or;\n        const shared = fork.use(sharedPlugin);\n        const defaults = shared.defaults;\n        def('AwaitExpression').build('argument', 'all').field('argument', or(def('Expression'), null)).field('all', Boolean, defaults['false']);\n        def('Decorator').bases('Node').build('expression').field('expression', def('Expression'));\n        def('Property').field('decorators', or([def('Decorator')], null), defaults['null']);\n        def('MethodDefinition').field('decorators', or([def('Decorator')], null), defaults['null']);\n        def('PrivateName').bases('Expression', 'Pattern').build('id').field('id', def('Identifier'));\n        def('ClassPrivateProperty').bases('ClassProperty').build('key', 'value').field('key', def('PrivateName')).field('value', or(def('Expression'), null), defaults['null']);\n        def('ImportAttribute').bases('Node').build('key', 'value').field('key', or(def('Identifier'), def('Literal'))).field('value', def('Expression'));\n        [\n            'ImportDeclaration',\n            'ExportAllDeclaration',\n            'ExportNamedDeclaration'\n        ].forEach(decl => {\n            def(decl).field('assertions', [def('ImportAttribute')], defaults.emptyArray);\n        });\n        def('RecordExpression').bases('Expression').build('properties').field('properties', [or(def('ObjectProperty'), def('ObjectMethod'), def('SpreadElement'))]);\n        def('TupleExpression').bases('Expression').build('elements').field('elements', [or(def('Expression'), def('SpreadElement'), null)]);\n        def('ModuleExpression').bases('Node').build('body').field('body', def('Program'));\n    };\n});"]}