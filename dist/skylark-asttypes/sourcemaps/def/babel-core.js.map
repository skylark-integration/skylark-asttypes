{"version":3,"sources":["def/babel-core.js"],"names":["define","esProposalsDef","typesPlugin","fork","use","types","defaults","sharedPlugin","def","Type","or","undefined","isUndefined","builtInTypes","makeLiteralExtra","rawValueType","String","toRaw","rawValue","raw","value","getFieldValue","this","bases","build","field","emptyArray","val","JSON","stringify","Number","Boolean","RegExp","pattern","flags","exp","ObjectExpressionProperty","ClassBodyElement","forEach","typeName","ObjectPatternProperty"],"mappings":"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","file":"../../def/babel-core.js","sourcesContent":["define([\n    './es-proposals',\n    '../types'\n], function (esProposalsDef, typesPlugin) {\n    'use strict';\n    return function (fork) {\n        fork.use(esProposalsDef);\n        const types = fork.use(typesPlugin);\n        const defaults = fork.use(sharedPlugin).defaults;\n        const def = types.Type.def;\n        const or = types.Type.or;\n        const {undefined: isUndefined} = types.builtInTypes;\n        def('Noop').bases('Statement').build();\n        def('DoExpression').bases('Expression').build('body').field('body', [def('Statement')]);\n        def('BindExpression').bases('Expression').build('object', 'callee').field('object', or(def('Expression'), null)).field('callee', def('Expression'));\n        def('ParenthesizedExpression').bases('Expression').build('expression').field('expression', def('Expression'));\n        def('ExportNamespaceSpecifier').bases('Specifier').build('exported').field('exported', def('Identifier'));\n        def('ExportDefaultSpecifier').bases('Specifier').build('exported').field('exported', def('Identifier'));\n        def('CommentBlock').bases('Comment').build('value', 'leading', 'trailing');\n        def('CommentLine').bases('Comment').build('value', 'leading', 'trailing');\n        def('Directive').bases('Node').build('value').field('value', def('DirectiveLiteral'));\n        def('DirectiveLiteral').bases('Node', 'Expression').build('value').field('value', String, defaults['use strict']);\n        def('InterpreterDirective').bases('Node').build('value').field('value', String);\n        def('BlockStatement').bases('Statement').build('body').field('body', [def('Statement')]).field('directives', [def('Directive')], defaults.emptyArray);\n        def('Program').bases('Node').build('body').field('body', [def('Statement')]).field('directives', [def('Directive')], defaults.emptyArray).field('interpreter', or(def('InterpreterDirective'), null), defaults['null']);\n        function makeLiteralExtra(rawValueType = String, toRaw) {\n            return [\n                'extra',\n                {\n                    rawValue: rawValueType,\n                    raw: String\n                },\n                function getDefault() {\n                    const value = types.getFieldValue(this, 'value');\n                    return {\n                        rawValue: value,\n                        raw: toRaw ? toRaw(value) : String(value)\n                    };\n                }\n            ];\n        }\n        def('StringLiteral').bases('Literal').build('value').field('value', String).field(...makeLiteralExtra(String, val => JSON.stringify(val)));\n        def('NumericLiteral').bases('Literal').build('value').field('value', Number).field('raw', or(String, null), defaults['null']).field(...makeLiteralExtra(Number));\n        def('BigIntLiteral').bases('Literal').build('value').field('value', or(String, Number)).field(...makeLiteralExtra(String, val => val + 'n'));\n        def('DecimalLiteral').bases('Literal').build('value').field('value', String).field(...makeLiteralExtra(String, val => val + 'm'));\n        def('NullLiteral').bases('Literal').build().field('value', null, defaults['null']);\n        def('BooleanLiteral').bases('Literal').build('value').field('value', Boolean);\n        def('RegExpLiteral').bases('Literal').build('pattern', 'flags').field('pattern', String).field('flags', String).field('value', RegExp, function () {\n            return new RegExp(this.pattern, this.flags);\n        }).field(...makeLiteralExtra(or(RegExp, isUndefined), exp => `/${ exp.pattern }/${ exp.flags || '' }`)).field('regex', {\n            pattern: String,\n            flags: String\n        }, function () {\n            return {\n                pattern: this.pattern,\n                flags: this.flags\n            };\n        });\n        var ObjectExpressionProperty = or(def('Property'), def('ObjectMethod'), def('ObjectProperty'), def('SpreadProperty'), def('SpreadElement'));\n        def('ObjectExpression').bases('Expression').build('properties').field('properties', [ObjectExpressionProperty]);\n        def('ObjectMethod').bases('Node', 'Function').build('kind', 'key', 'params', 'body', 'computed').field('kind', or('method', 'get', 'set')).field('key', or(def('Literal'), def('Identifier'), def('Expression'))).field('params', [def('Pattern')]).field('body', def('BlockStatement')).field('computed', Boolean, defaults['false']).field('generator', Boolean, defaults['false']).field('async', Boolean, defaults['false']).field('accessibility', or(def('Literal'), null), defaults['null']).field('decorators', or([def('Decorator')], null), defaults['null']);\n        def('ObjectProperty').bases('Node').build('key', 'value').field('key', or(def('Literal'), def('Identifier'), def('Expression'))).field('value', or(def('Expression'), def('Pattern'))).field('accessibility', or(def('Literal'), null), defaults['null']).field('computed', Boolean, defaults['false']);\n        var ClassBodyElement = or(def('MethodDefinition'), def('VariableDeclarator'), def('ClassPropertyDefinition'), def('ClassProperty'), def('ClassPrivateProperty'), def('ClassMethod'), def('ClassPrivateMethod'), def('ClassAccessorProperty'), def('StaticBlock'));\n        def('ClassBody').bases('Declaration').build('body').field('body', [ClassBodyElement]);\n        def('ClassMethod').bases('Declaration', 'Function').build('kind', 'key', 'params', 'body', 'computed', 'static').field('key', or(def('Literal'), def('Identifier'), def('Expression')));\n        def('ClassPrivateMethod').bases('Declaration', 'Function').build('key', 'params', 'body', 'kind', 'computed', 'static').field('key', def('PrivateName'));\n        def('ClassAccessorProperty').bases('Declaration').build('key', 'value', 'decorators', 'computed', 'static').field('key', or(def('Literal'), def('Identifier'), def('PrivateName'), def('Expression'))).field('value', or(def('Expression'), null), defaults['null']);\n        [\n            'ClassMethod',\n            'ClassPrivateMethod'\n        ].forEach(typeName => {\n            def(typeName).field('kind', or('get', 'set', 'method', 'constructor'), () => 'method').field('body', def('BlockStatement')).field('access', or('public', 'private', 'protected', null), defaults['null']);\n        });\n        [\n            'ClassMethod',\n            'ClassPrivateMethod',\n            'ClassAccessorProperty'\n        ].forEach(typeName => {\n            def(typeName).field('computed', Boolean, defaults['false']).field('static', Boolean, defaults['false']).field('abstract', Boolean, defaults['false']).field('accessibility', or('public', 'private', 'protected', null), defaults['null']).field('decorators', or([def('Decorator')], null), defaults['null']).field('definite', Boolean, defaults['false']).field('optional', Boolean, defaults['false']).field('override', Boolean, defaults['false']).field('readonly', Boolean, defaults['false']);\n        });\n        var ObjectPatternProperty = or(def('Property'), def('PropertyPattern'), def('SpreadPropertyPattern'), def('SpreadProperty'), def('ObjectProperty'), def('RestProperty'), def('RestElement'));\n        def('ObjectPattern').bases('Pattern').build('properties').field('properties', [ObjectPatternProperty]).field('decorators', or([def('Decorator')], null), defaults['null']);\n        def('SpreadProperty').bases('Node').build('argument').field('argument', def('Expression'));\n        def('RestProperty').bases('Node').build('argument').field('argument', def('Expression'));\n        def('ForAwaitStatement').bases('Statement').build('left', 'right', 'body').field('left', or(def('VariableDeclaration'), def('Expression'))).field('right', def('Expression')).field('body', def('Statement'));\n        def('Import').bases('Expression').build();\n    };\n    ;\n});"]}