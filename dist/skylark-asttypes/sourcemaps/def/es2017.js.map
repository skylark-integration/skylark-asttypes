{"version":3,"sources":["def/es2017.js"],"names":["define","es2016Def","typesPlugin","sharedPlugin","fork","use","def","Type","defaults","field","Boolean","bases","build"],"mappings":";;;;;;;AAAAA,OAAO,CACH,WACA,WACA,aACD,SAAUC,EAAWC,EAAaC,GACjC,aACA,OAAO,SAAUC,GACbA,EAAKC,IAAIJ,CAAS,EAClB,IACMK,EADQF,EAAKC,IAAIH,CAAW,EAChBK,KAAKD,IACjBE,EAAWJ,EAAKC,IAAIF,CAAY,EAAEK,SACxCF,EAAI,UAAU,EAAEG,MAAM,QAASC,QAASF,EAAgB,KAAC,EACzDF,EAAI,iBAAiB,EAAEK,MAAM,YAAY,EAAEC,MAAM,UAAU,EAAEH,MAAM,WAAYH,EAAI,YAAY,CAAC,CACpG,CACJ,CAAC","file":"../../def/es2017.js","sourcesContent":["define([\n    './es2016',\n    '../types',\n    '../shared'\n], function (es2016Def, typesPlugin, sharedPlugin) {\n    'use strict';\n    return function (fork) {\n        fork.use(es2016Def);\n        const types = fork.use(typesPlugin);\n        const def = types.Type.def;\n        const defaults = fork.use(sharedPlugin).defaults;\n        def('Function').field('async', Boolean, defaults['false']);\n        def('AwaitExpression').bases('Expression').build('argument').field('argument', def('Expression'));\n    };\n});"]}