{"version":3,"sources":["def/jsx.js"],"names":["define","esProposalsDef","typesPlugin","sharedPlugin","fork","use","types","def","Type","or","defaults","bases","build","field","String","Boolean","false","JSXElementName","JSXAttributes","JSXChildren","emptyArray","this","openingElement","name","selfClosing","attributes","value"],"mappings":";;;;;;;AAAAA,QACI,iBACA,WACA,aACD,SAAUC,EAAgBC,EAAaC,GACtC,aACA,OAAO,SAAUC,GACbA,EAAKC,IAAIJ,GACT,MAAMK,EAAQF,EAAKC,IAAIH,GACjBK,EAAMD,EAAME,KAAKD,IACjBE,EAAKH,EAAME,KAAKC,GAChBC,EAAWN,EAAKC,IAAIF,GAAcO,SACxCH,EAAI,gBAAgBI,MAAM,QAAQC,MAAM,OAAQ,SAASC,MAAM,OAAQJ,EAAGF,EAAI,iBAAkBA,EAAI,uBAAuBM,MAAM,QAASJ,EAAGF,EAAI,WAAYA,EAAI,0BAA2BA,EAAI,cAAeA,EAAI,eAAgB,MAAOG,EAAe,MACzPH,EAAI,iBAAiBI,MAAM,cAAcC,MAAM,QAAQC,MAAM,OAAQC,QACrEP,EAAI,qBAAqBI,MAAM,QAAQC,MAAM,YAAa,QAAQC,MAAM,YAAaN,EAAI,kBAAkBM,MAAM,OAAQN,EAAI,kBAC7HA,EAAI,uBAAuBI,MAAM,oBAAoBC,MAAM,SAAU,YAAYC,MAAM,SAAUJ,EAAGF,EAAI,iBAAkBA,EAAI,yBAAyBM,MAAM,WAAYN,EAAI,kBAAkBM,MAAM,WAAYE,QAASL,EAASM,OACnO,MAAMC,EAAiBR,EAAGF,EAAI,iBAAkBA,EAAI,qBAAsBA,EAAI,wBAC9EA,EAAI,sBAAsBI,MAAM,QAAQC,MAAM,YAAYC,MAAM,WAAYN,EAAI,eAChF,MAAMW,GAAiBT,EAAGF,EAAI,gBAAiBA,EAAI,wBACnDA,EAAI,0BAA0BI,MAAM,cAAcC,MAAM,cAAcC,MAAM,aAAcJ,EAAGF,EAAI,cAAeA,EAAI,wBACpH,MAAMY,GAAeV,EAAGF,EAAI,WAAYA,EAAI,0BAA2BA,EAAI,kBAAmBA,EAAI,cAAeA,EAAI,eAAgBA,EAAI,aACzIA,EAAI,cAAcI,MAAM,cAAcC,MAAM,iBAAkB,iBAAkB,YAAYC,MAAM,iBAAkBN,EAAI,sBAAsBM,MAAM,iBAAkBJ,EAAGF,EAAI,qBAAsB,MAAOG,EAAe,MAAGG,MAAM,WAAYM,EAAaT,EAASU,YAAYP,MAAM,OAAQI,EAAgB,WAC1S,OAAOI,KAAKC,eAAeC,OAC5B,GAAMV,MAAM,cAAeE,QAAS,WACnC,OAAOM,KAAKC,eAAeE,cAC5B,GAAMX,MAAM,aAAcK,EAAe,WACxC,OAAOG,KAAKC,eAAeG,aAC5B,GACHlB,EAAI,qBAAqBI,MAAM,QAAQC,MAAM,OAAQ,aAAc,eAAeC,MAAM,OAAQI,GAAgBJ,MAAM,aAAcK,EAAeR,EAASU,YAAYP,MAAM,cAAeE,QAASL,EAAgB,OACtNH,EAAI,qBAAqBI,MAAM,QAAQC,MAAM,QAAQC,MAAM,OAAQI,GACnEV,EAAI,eAAeI,MAAM,cAAcC,MAAM,kBAAmB,kBAAmB,YAAYC,MAAM,kBAAmBN,EAAI,uBAAuBM,MAAM,kBAAmBN,EAAI,uBAAuBM,MAAM,WAAYM,EAAaT,EAASU,YAC/Ob,EAAI,sBAAsBI,MAAM,QAAQC,QACxCL,EAAI,sBAAsBI,MAAM,QAAQC,QACxCL,EAAI,WAAWI,MAAM,WAAWC,MAAM,QAAS,OAAOC,MAAM,QAASC,QAAQD,MAAM,MAAOC,OAAQ,WAC9F,OAAOO,KAAKK,QAEhBnB,EAAI,sBAAsBI,MAAM,QAAQC,QACxCL,EAAI,kBAAkBI,MAAM,QAAQC,MAAM,cAAcC,MAAM,aAAcN,EAAI","file":"../../def/jsx.js","sourcesContent":["define([\n    './es-proposals',\n    '../types',\n    '../shared'\n], function (esProposalsDef, typesPlugin, sharedPlugin) {\n    'use strict';\n    return function (fork) {\n        fork.use(esProposalsDef);\n        const types = fork.use(typesPlugin);\n        const def = types.Type.def;\n        const or = types.Type.or;\n        const defaults = fork.use(sharedPlugin).defaults;\n        def('JSXAttribute').bases('Node').build('name', 'value').field('name', or(def('JSXIdentifier'), def('JSXNamespacedName'))).field('value', or(def('Literal'), def('JSXExpressionContainer'), def('JSXElement'), def('JSXFragment'), null), defaults['null']);\n        def('JSXIdentifier').bases('Identifier').build('name').field('name', String);\n        def('JSXNamespacedName').bases('Node').build('namespace', 'name').field('namespace', def('JSXIdentifier')).field('name', def('JSXIdentifier'));\n        def('JSXMemberExpression').bases('MemberExpression').build('object', 'property').field('object', or(def('JSXIdentifier'), def('JSXMemberExpression'))).field('property', def('JSXIdentifier')).field('computed', Boolean, defaults.false);\n        const JSXElementName = or(def('JSXIdentifier'), def('JSXNamespacedName'), def('JSXMemberExpression'));\n        def('JSXSpreadAttribute').bases('Node').build('argument').field('argument', def('Expression'));\n        const JSXAttributes = [or(def('JSXAttribute'), def('JSXSpreadAttribute'))];\n        def('JSXExpressionContainer').bases('Expression').build('expression').field('expression', or(def('Expression'), def('JSXEmptyExpression')));\n        const JSXChildren = [or(def('JSXText'), def('JSXExpressionContainer'), def('JSXSpreadChild'), def('JSXElement'), def('JSXFragment'), def('Literal'))];\n        def('JSXElement').bases('Expression').build('openingElement', 'closingElement', 'children').field('openingElement', def('JSXOpeningElement')).field('closingElement', or(def('JSXClosingElement'), null), defaults['null']).field('children', JSXChildren, defaults.emptyArray).field('name', JSXElementName, function () {\n            return this.openingElement.name;\n        }, true).field('selfClosing', Boolean, function () {\n            return this.openingElement.selfClosing;\n        }, true).field('attributes', JSXAttributes, function () {\n            return this.openingElement.attributes;\n        }, true);\n        def('JSXOpeningElement').bases('Node').build('name', 'attributes', 'selfClosing').field('name', JSXElementName).field('attributes', JSXAttributes, defaults.emptyArray).field('selfClosing', Boolean, defaults['false']);\n        def('JSXClosingElement').bases('Node').build('name').field('name', JSXElementName);\n        def('JSXFragment').bases('Expression').build('openingFragment', 'closingFragment', 'children').field('openingFragment', def('JSXOpeningFragment')).field('closingFragment', def('JSXClosingFragment')).field('children', JSXChildren, defaults.emptyArray);\n        def('JSXOpeningFragment').bases('Node').build();\n        def('JSXClosingFragment').bases('Node').build();\n        def('JSXText').bases('Literal').build('value', 'raw').field('value', String).field('raw', String, function () {\n            return this.value;\n        });\n        def('JSXEmptyExpression').bases('Node').build();\n        def('JSXSpreadChild').bases('Node').build('expression').field('expression', def('Expression'));\n    };\n});"]}