{"version":3,"sources":["def/typescript.js"],"names":["define","babelCoreDef","typeAnnotationsDef","typesPlugin","sharedPlugin","fork","use","types","n","namedTypes","def","Type","or","defaults","StringLiteral","from","value","deep","check","Literal","TSEntityName","bases","ParametersType","build","field","parenthesized","Boolean","forEach","keywordType","typeName","TSTypeMember","String"],"mappings":"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","file":"../../def/typescript.js","sourcesContent":["define([\n    './babel-core',\n    './type-annotations',\n    '../types',\n    '../shared'\n], function (babelCoreDef, typeAnnotationsDef, typesPlugin, sharedPlugin) {\n    'use strict';\n    return function (fork) {\n        fork.use(babelCoreDef);\n        fork.use(typeAnnotationsDef);\n        var types = fork.use(typesPlugin);\n        var n = types.namedTypes;\n        var def = types.Type.def;\n        var or = types.Type.or;\n        var defaults = fork.use(sharedPlugin).defaults;\n        var StringLiteral = types.Type.from(function (value, deep) {\n            if (n.StringLiteral && n.StringLiteral.check(value, deep)) {\n                return true;\n            }\n            if (n.Literal && n.Literal.check(value, deep) && typeof value.value === 'string') {\n                return true;\n            }\n            return false;\n        }, 'StringLiteral');\n        def('TSType').bases('Node');\n        var TSEntityName = or(def('Identifier'), def('TSQualifiedName'));\n        def('TSTypeReference').bases('TSType', 'TSHasOptionalTypeParameterInstantiation').build('typeName', 'typeParameters').field('typeName', TSEntityName);\n        def('TSHasOptionalTypeParameterInstantiation').field('typeParameters', or(def('TSTypeParameterInstantiation'), null), defaults['null']);\n        def('TSHasOptionalTypeParameters').field('typeParameters', or(def('TSTypeParameterDeclaration'), null, void 0), defaults['null']);\n        def('TSHasOptionalTypeAnnotation').field('typeAnnotation', or(def('TSTypeAnnotation'), null), defaults['null']);\n        def('TSQualifiedName').bases('Node').build('left', 'right').field('left', TSEntityName).field('right', TSEntityName);\n        def('TSAsExpression').bases('Expression', 'Pattern').build('expression', 'typeAnnotation').field('expression', def('Expression')).field('typeAnnotation', def('TSType')).field('extra', or({ parenthesized: Boolean }, null), defaults['null']);\n        def('TSTypeCastExpression').bases('Expression').build('expression', 'typeAnnotation').field('expression', def('Expression')).field('typeAnnotation', def('TSType'));\n        def('TSSatisfiesExpression').bases('Expression', 'Pattern').build('expression', 'typeAnnotation').field('expression', def('Expression')).field('typeAnnotation', def('TSType'));\n        def('TSNonNullExpression').bases('Expression', 'Pattern').build('expression').field('expression', def('Expression'));\n        [\n            'TSAnyKeyword',\n            'TSBigIntKeyword',\n            'TSBooleanKeyword',\n            'TSNeverKeyword',\n            'TSNullKeyword',\n            'TSNumberKeyword',\n            'TSObjectKeyword',\n            'TSStringKeyword',\n            'TSSymbolKeyword',\n            'TSUndefinedKeyword',\n            'TSUnknownKeyword',\n            'TSVoidKeyword',\n            'TSIntrinsicKeyword',\n            'TSThisType'\n        ].forEach(keywordType => {\n            def(keywordType).bases('TSType').build();\n        });\n        def('TSArrayType').bases('TSType').build('elementType').field('elementType', def('TSType'));\n        def('TSLiteralType').bases('TSType').build('literal').field('literal', or(def('NumericLiteral'), def('StringLiteral'), def('BooleanLiteral'), def('TemplateLiteral'), def('UnaryExpression'), def('BigIntLiteral')));\n        def('TemplateLiteral').field('expressions', or([def('Expression')], [def('TSType')]));\n        [\n            'TSUnionType',\n            'TSIntersectionType'\n        ].forEach(typeName => {\n            def(typeName).bases('TSType').build('types').field('types', [def('TSType')]);\n        });\n        def('TSConditionalType').bases('TSType').build('checkType', 'extendsType', 'trueType', 'falseType').field('checkType', def('TSType')).field('extendsType', def('TSType')).field('trueType', def('TSType')).field('falseType', def('TSType'));\n        def('TSInferType').bases('TSType').build('typeParameter').field('typeParameter', def('TSTypeParameter'));\n        def('TSParenthesizedType').bases('TSType').build('typeAnnotation').field('typeAnnotation', def('TSType'));\n        var ParametersType = [or(def('Identifier'), def('RestElement'), def('ArrayPattern'), def('ObjectPattern'))];\n        [\n            'TSFunctionType',\n            'TSConstructorType'\n        ].forEach(typeName => {\n            def(typeName).bases('TSType', 'TSHasOptionalTypeParameters', 'TSHasOptionalTypeAnnotation').build('parameters').field('parameters', ParametersType);\n        });\n        def('TSDeclareFunction').bases('Declaration', 'TSHasOptionalTypeParameters').build('id', 'params', 'returnType').field('declare', Boolean, defaults['false']).field('async', Boolean, defaults['false']).field('generator', Boolean, defaults['false']).field('id', or(def('Identifier'), null), defaults['null']).field('params', [def('Pattern')]).field('returnType', or(def('TSTypeAnnotation'), def('Noop'), null), defaults['null']);\n        def('TSDeclareMethod').bases('Declaration', 'TSHasOptionalTypeParameters').build('key', 'params', 'returnType').field('async', Boolean, defaults['false']).field('generator', Boolean, defaults['false']).field('params', [def('Pattern')]).field('abstract', Boolean, defaults['false']).field('accessibility', or('public', 'private', 'protected', void 0), defaults['undefined']).field('static', Boolean, defaults['false']).field('computed', Boolean, defaults['false']).field('optional', Boolean, defaults['false']).field('key', or(def('Identifier'), def('StringLiteral'), def('NumericLiteral'), def('Expression'))).field('kind', or('get', 'set', 'method', 'constructor'), function getDefault() {\n            return 'method';\n        }).field('access', or('public', 'private', 'protected', void 0), defaults['undefined']).field('decorators', or([def('Decorator')], null), defaults['null']).field('returnType', or(def('TSTypeAnnotation'), def('Noop'), null), defaults['null']);\n        def('TSMappedType').bases('TSType').build('typeParameter', 'typeAnnotation').field('readonly', or(Boolean, '+', '-'), defaults['false']).field('typeParameter', def('TSTypeParameter')).field('optional', or(Boolean, '+', '-'), defaults['false']).field('typeAnnotation', or(def('TSType'), null), defaults['null']);\n        def('TSTupleType').bases('TSType').build('elementTypes').field('elementTypes', [or(def('TSType'), def('TSNamedTupleMember'))]);\n        def('TSNamedTupleMember').bases('TSType').build('label', 'elementType', 'optional').field('label', def('Identifier')).field('optional', Boolean, defaults['false']).field('elementType', def('TSType'));\n        def('TSRestType').bases('TSType').build('typeAnnotation').field('typeAnnotation', def('TSType'));\n        def('TSOptionalType').bases('TSType').build('typeAnnotation').field('typeAnnotation', def('TSType'));\n        def('TSIndexedAccessType').bases('TSType').build('objectType', 'indexType').field('objectType', def('TSType')).field('indexType', def('TSType'));\n        def('TSTypeOperator').bases('TSType').build('operator').field('operator', String).field('typeAnnotation', def('TSType'));\n        def('TSTypeAnnotation').bases('Node').build('typeAnnotation').field('typeAnnotation', or(def('TSType'), def('TSTypeAnnotation')));\n        def('TSIndexSignature').bases('Declaration', 'TSHasOptionalTypeAnnotation').build('parameters', 'typeAnnotation').field('parameters', [def('Identifier')]).field('readonly', Boolean, defaults['false']);\n        def('TSPropertySignature').bases('Declaration', 'TSHasOptionalTypeAnnotation').build('key', 'typeAnnotation', 'optional').field('key', def('Expression')).field('computed', Boolean, defaults['false']).field('readonly', Boolean, defaults['false']).field('optional', Boolean, defaults['false']).field('initializer', or(def('Expression'), null), defaults['null']);\n        def('TSMethodSignature').bases('Declaration', 'TSHasOptionalTypeParameters', 'TSHasOptionalTypeAnnotation').build('key', 'parameters', 'typeAnnotation').field('key', def('Expression')).field('computed', Boolean, defaults['false']).field('optional', Boolean, defaults['false']).field('parameters', ParametersType);\n        def('TSTypePredicate').bases('TSTypeAnnotation', 'TSType').build('parameterName', 'typeAnnotation', 'asserts').field('parameterName', or(def('Identifier'), def('TSThisType'))).field('typeAnnotation', or(def('TSTypeAnnotation'), null), defaults['null']).field('asserts', Boolean, defaults['false']);\n        [\n            'TSCallSignatureDeclaration',\n            'TSConstructSignatureDeclaration'\n        ].forEach(typeName => {\n            def(typeName).bases('Declaration', 'TSHasOptionalTypeParameters', 'TSHasOptionalTypeAnnotation').build('parameters', 'typeAnnotation').field('parameters', ParametersType);\n        });\n        def('TSEnumMember').bases('Node').build('id', 'initializer').field('id', or(def('Identifier'), StringLiteral)).field('initializer', or(def('Expression'), null), defaults['null']);\n        def('TSTypeQuery').bases('TSType').build('exprName').field('exprName', or(TSEntityName, def('TSImportType')));\n        var TSTypeMember = or(def('TSCallSignatureDeclaration'), def('TSConstructSignatureDeclaration'), def('TSIndexSignature'), def('TSMethodSignature'), def('TSPropertySignature'));\n        def('TSTypeLiteral').bases('TSType').build('members').field('members', [TSTypeMember]);\n        def('TSTypeParameter').bases('Identifier').build('name', 'constraint', 'default').field('name', or(def('Identifier'), String)).field('constraint', or(def('TSType'), void 0), defaults['undefined']).field('default', or(def('TSType'), void 0), defaults['undefined']);\n        def('TSTypeAssertion').bases('Expression', 'Pattern').build('typeAnnotation', 'expression').field('typeAnnotation', def('TSType')).field('expression', def('Expression')).field('extra', or({ parenthesized: Boolean }, null), defaults['null']);\n        def('TSTypeParameterDeclaration').bases('Declaration').build('params').field('params', [def('TSTypeParameter')]);\n        def('TSInstantiationExpression').bases('Expression', 'TSHasOptionalTypeParameterInstantiation').build('expression', 'typeParameters').field('expression', def('Expression'));\n        def('TSTypeParameterInstantiation').bases('Node').build('params').field('params', [def('TSType')]);\n        def('TSEnumDeclaration').bases('Declaration').build('id', 'members').field('id', def('Identifier')).field('const', Boolean, defaults['false']).field('declare', Boolean, defaults['false']).field('members', [def('TSEnumMember')]).field('initializer', or(def('Expression'), null), defaults['null']);\n        def('TSTypeAliasDeclaration').bases('Declaration', 'TSHasOptionalTypeParameters').build('id', 'typeAnnotation').field('id', def('Identifier')).field('declare', Boolean, defaults['false']).field('typeAnnotation', def('TSType'));\n        def('TSModuleBlock').bases('Node').build('body').field('body', [def('Statement')]);\n        def('TSModuleDeclaration').bases('Declaration').build('id', 'body').field('id', or(StringLiteral, TSEntityName)).field('declare', Boolean, defaults['false']).field('global', Boolean, defaults['false']).field('body', or(def('TSModuleBlock'), def('TSModuleDeclaration'), null), defaults['null']);\n        def('TSImportType').bases('TSType', 'TSHasOptionalTypeParameterInstantiation').build('argument', 'qualifier', 'typeParameters').field('argument', StringLiteral).field('qualifier', or(TSEntityName, void 0), defaults['undefined']);\n        def('TSImportEqualsDeclaration').bases('Declaration').build('id', 'moduleReference').field('id', def('Identifier')).field('isExport', Boolean, defaults['false']).field('moduleReference', or(TSEntityName, def('TSExternalModuleReference')));\n        def('TSExternalModuleReference').bases('Declaration').build('expression').field('expression', StringLiteral);\n        def('TSExportAssignment').bases('Statement').build('expression').field('expression', def('Expression'));\n        def('TSNamespaceExportDeclaration').bases('Declaration').build('id').field('id', def('Identifier'));\n        def('TSInterfaceBody').bases('Node').build('body').field('body', [TSTypeMember]);\n        def('TSExpressionWithTypeArguments').bases('TSType', 'TSHasOptionalTypeParameterInstantiation').build('expression', 'typeParameters').field('expression', TSEntityName);\n        def('TSInterfaceDeclaration').bases('Declaration', 'TSHasOptionalTypeParameters').build('id', 'body').field('id', TSEntityName).field('declare', Boolean, defaults['false']).field('extends', or([def('TSExpressionWithTypeArguments')], null), defaults['null']).field('body', def('TSInterfaceBody'));\n        def('TSParameterProperty').bases('Pattern').build('parameter').field('accessibility', or('public', 'private', 'protected', void 0), defaults['undefined']).field('readonly', Boolean, defaults['false']).field('parameter', or(def('Identifier'), def('AssignmentPattern')));\n        def('ClassProperty').field('access', or('public', 'private', 'protected', void 0), defaults['undefined']);\n        def('ClassAccessorProperty').bases('Declaration', 'TSHasOptionalTypeAnnotation');\n        def('ClassBody').field('body', [or(def('MethodDefinition'), def('VariableDeclarator'), def('ClassPropertyDefinition'), def('ClassProperty'), def('ClassPrivateProperty'), def('ClassAccessorProperty'), def('ClassMethod'), def('ClassPrivateMethod'), def('StaticBlock'), def('TSDeclareMethod'), TSTypeMember)]);\n    };\n    ;\n});"]}