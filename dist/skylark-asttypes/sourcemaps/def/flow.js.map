{"version":3,"sources":["def/flow.js"],"names":["define","esProposalsDef","typeAnnotationsDef","typesPlugin","sharedPlugin","fork","use","types","def","Type","or","defaults","bases","build","field","Number","String","Boolean","emptyArray","LegacyVariance"],"mappings":"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","file":"../../def/flow.js","sourcesContent":["define([\n    './es-proposals',\n    './type-annotations',\n    '../types',\n    '../shared'\n], function (esProposalsDef, typeAnnotationsDef, typesPlugin, sharedPlugin) {\n    'use strict';\n    return function (fork) {\n        fork.use(esProposalsDef);\n        fork.use(typeAnnotationsDef);\n        const types = fork.use(typesPlugin);\n        const def = types.Type.def;\n        const or = types.Type.or;\n        const defaults = fork.use(sharedPlugin).defaults;\n        def('Flow').bases('Node');\n        def('FlowType').bases('Flow');\n        def('AnyTypeAnnotation').bases('FlowType').build();\n        def('EmptyTypeAnnotation').bases('FlowType').build();\n        def('MixedTypeAnnotation').bases('FlowType').build();\n        def('VoidTypeAnnotation').bases('FlowType').build();\n        def('SymbolTypeAnnotation').bases('FlowType').build();\n        def('NumberTypeAnnotation').bases('FlowType').build();\n        def('BigIntTypeAnnotation').bases('FlowType').build();\n        def('NumberLiteralTypeAnnotation').bases('FlowType').build('value', 'raw').field('value', Number).field('raw', String);\n        def('NumericLiteralTypeAnnotation').bases('FlowType').build('value', 'raw').field('value', Number).field('raw', String);\n        def('BigIntLiteralTypeAnnotation').bases('FlowType').build('value', 'raw').field('value', null).field('raw', String);\n        def('StringTypeAnnotation').bases('FlowType').build();\n        def('StringLiteralTypeAnnotation').bases('FlowType').build('value', 'raw').field('value', String).field('raw', String);\n        def('BooleanTypeAnnotation').bases('FlowType').build();\n        def('BooleanLiteralTypeAnnotation').bases('FlowType').build('value', 'raw').field('value', Boolean).field('raw', String);\n        def('TypeAnnotation').bases('Node').build('typeAnnotation').field('typeAnnotation', def('FlowType'));\n        def('NullableTypeAnnotation').bases('FlowType').build('typeAnnotation').field('typeAnnotation', def('FlowType'));\n        def('NullLiteralTypeAnnotation').bases('FlowType').build();\n        def('NullTypeAnnotation').bases('FlowType').build();\n        def('ThisTypeAnnotation').bases('FlowType').build();\n        def('ExistsTypeAnnotation').bases('FlowType').build();\n        def('ExistentialTypeParam').bases('FlowType').build();\n        def('FunctionTypeAnnotation').bases('FlowType').build('params', 'returnType', 'rest', 'typeParameters').field('params', [def('FunctionTypeParam')]).field('returnType', def('FlowType')).field('rest', or(def('FunctionTypeParam'), null)).field('typeParameters', or(def('TypeParameterDeclaration'), null));\n        def('FunctionTypeParam').bases('Node').build('name', 'typeAnnotation', 'optional').field('name', or(def('Identifier'), null)).field('typeAnnotation', def('FlowType')).field('optional', Boolean);\n        def('ArrayTypeAnnotation').bases('FlowType').build('elementType').field('elementType', def('FlowType'));\n        def('ObjectTypeAnnotation').bases('FlowType').build('properties', 'indexers', 'callProperties').field('properties', [or(def('ObjectTypeProperty'), def('ObjectTypeSpreadProperty'))]).field('indexers', [def('ObjectTypeIndexer')], defaults.emptyArray).field('callProperties', [def('ObjectTypeCallProperty')], defaults.emptyArray).field('inexact', or(Boolean, void 0), defaults['undefined']).field('exact', Boolean, defaults['false']).field('internalSlots', [def('ObjectTypeInternalSlot')], defaults.emptyArray);\n        def('Variance').bases('Node').build('kind').field('kind', or('plus', 'minus'));\n        const LegacyVariance = or(def('Variance'), 'plus', 'minus', null);\n        def('ObjectTypeProperty').bases('Node').build('key', 'value', 'optional').field('key', or(def('Literal'), def('Identifier'))).field('value', def('FlowType')).field('optional', Boolean).field('variance', LegacyVariance, defaults['null']);\n        def('ObjectTypeIndexer').bases('Node').build('id', 'key', 'value').field('id', def('Identifier')).field('key', def('FlowType')).field('value', def('FlowType')).field('variance', LegacyVariance, defaults['null']).field('static', Boolean, defaults['false']);\n        def('ObjectTypeCallProperty').bases('Node').build('value').field('value', def('FunctionTypeAnnotation')).field('static', Boolean, defaults['false']);\n        def('QualifiedTypeIdentifier').bases('Node').build('qualification', 'id').field('qualification', or(def('Identifier'), def('QualifiedTypeIdentifier'))).field('id', def('Identifier'));\n        def('GenericTypeAnnotation').bases('FlowType').build('id', 'typeParameters').field('id', or(def('Identifier'), def('QualifiedTypeIdentifier'))).field('typeParameters', or(def('TypeParameterInstantiation'), null));\n        def('MemberTypeAnnotation').bases('FlowType').build('object', 'property').field('object', def('Identifier')).field('property', or(def('MemberTypeAnnotation'), def('GenericTypeAnnotation')));\n        def('IndexedAccessType').bases('FlowType').build('objectType', 'indexType').field('objectType', def('FlowType')).field('indexType', def('FlowType'));\n        def('OptionalIndexedAccessType').bases('FlowType').build('objectType', 'indexType', 'optional').field('objectType', def('FlowType')).field('indexType', def('FlowType')).field('optional', Boolean);\n        def('UnionTypeAnnotation').bases('FlowType').build('types').field('types', [def('FlowType')]);\n        def('IntersectionTypeAnnotation').bases('FlowType').build('types').field('types', [def('FlowType')]);\n        def('TypeofTypeAnnotation').bases('FlowType').build('argument').field('argument', def('FlowType'));\n        def('ObjectTypeSpreadProperty').bases('Node').build('argument').field('argument', def('FlowType'));\n        def('ObjectTypeInternalSlot').bases('Node').build('id', 'value', 'optional', 'static', 'method').field('id', def('Identifier')).field('value', def('FlowType')).field('optional', Boolean).field('static', Boolean).field('method', Boolean);\n        def('TypeParameterDeclaration').bases('Node').build('params').field('params', [def('TypeParameter')]);\n        def('TypeParameterInstantiation').bases('Node').build('params').field('params', [def('FlowType')]);\n        def('TypeParameter').bases('FlowType').build('name', 'variance', 'bound', 'default').field('name', String).field('variance', LegacyVariance, defaults['null']).field('bound', or(def('TypeAnnotation'), null), defaults['null']).field('default', or(def('FlowType'), null), defaults['null']);\n        def('ClassProperty').field('variance', LegacyVariance, defaults['null']);\n        def('ClassImplements').bases('Node').build('id').field('id', def('Identifier')).field('superClass', or(def('Expression'), null), defaults['null']).field('typeParameters', or(def('TypeParameterInstantiation'), null), defaults['null']);\n        def('InterfaceTypeAnnotation').bases('FlowType').build('body', 'extends').field('body', def('ObjectTypeAnnotation')).field('extends', or([def('InterfaceExtends')], null), defaults['null']);\n        def('InterfaceDeclaration').bases('Declaration').build('id', 'body', 'extends').field('id', def('Identifier')).field('typeParameters', or(def('TypeParameterDeclaration'), null), defaults['null']).field('body', def('ObjectTypeAnnotation')).field('extends', [def('InterfaceExtends')]);\n        def('DeclareInterface').bases('InterfaceDeclaration').build('id', 'body', 'extends');\n        def('InterfaceExtends').bases('Node').build('id').field('id', def('Identifier')).field('typeParameters', or(def('TypeParameterInstantiation'), null), defaults['null']);\n        def('TypeAlias').bases('Declaration').build('id', 'typeParameters', 'right').field('id', def('Identifier')).field('typeParameters', or(def('TypeParameterDeclaration'), null)).field('right', def('FlowType'));\n        def('DeclareTypeAlias').bases('TypeAlias').build('id', 'typeParameters', 'right');\n        def('OpaqueType').bases('Declaration').build('id', 'typeParameters', 'impltype', 'supertype').field('id', def('Identifier')).field('typeParameters', or(def('TypeParameterDeclaration'), null)).field('impltype', def('FlowType')).field('supertype', or(def('FlowType'), null));\n        def('DeclareOpaqueType').bases('OpaqueType').build('id', 'typeParameters', 'supertype').field('impltype', or(def('FlowType'), null));\n        def('TypeCastExpression').bases('Expression').build('expression', 'typeAnnotation').field('expression', def('Expression')).field('typeAnnotation', def('TypeAnnotation'));\n        def('TupleTypeAnnotation').bases('FlowType').build('types').field('types', [def('FlowType')]);\n        def('DeclareVariable').bases('Statement').build('id').field('id', def('Identifier'));\n        def('DeclareFunction').bases('Statement').build('id').field('id', def('Identifier')).field('predicate', or(def('FlowPredicate'), null), defaults['null']);\n        def('DeclareClass').bases('InterfaceDeclaration').build('id');\n        def('DeclareModule').bases('Statement').build('id', 'body').field('id', or(def('Identifier'), def('Literal'))).field('body', def('BlockStatement'));\n        def('DeclareModuleExports').bases('Statement').build('typeAnnotation').field('typeAnnotation', def('TypeAnnotation'));\n        def('DeclareExportDeclaration').bases('Declaration').build('default', 'declaration', 'specifiers', 'source').field('default', Boolean).field('declaration', or(def('DeclareVariable'), def('DeclareFunction'), def('DeclareClass'), def('FlowType'), def('TypeAlias'), def('DeclareOpaqueType'), def('InterfaceDeclaration'), null)).field('specifiers', [or(def('ExportSpecifier'), def('ExportBatchSpecifier'))], defaults.emptyArray).field('source', or(def('Literal'), null), defaults['null']);\n        def('DeclareExportAllDeclaration').bases('Declaration').build('source').field('source', or(def('Literal'), null), defaults['null']);\n        def('ImportDeclaration').field('importKind', or('value', 'type', 'typeof'), () => 'value');\n        def('FlowPredicate').bases('Flow');\n        def('InferredPredicate').bases('FlowPredicate').build();\n        def('DeclaredPredicate').bases('FlowPredicate').build('value').field('value', def('Expression'));\n        def('Function').field('predicate', or(def('FlowPredicate'), null), defaults['null']);\n        def('CallExpression').field('typeArguments', or(null, def('TypeParameterInstantiation')), defaults['null']);\n        def('NewExpression').field('typeArguments', or(null, def('TypeParameterInstantiation')), defaults['null']);\n        def('EnumDeclaration').bases('Declaration').build('id', 'body').field('id', def('Identifier')).field('body', or(def('EnumBooleanBody'), def('EnumNumberBody'), def('EnumStringBody'), def('EnumSymbolBody')));\n        def('EnumBooleanBody').build('members', 'explicitType').field('members', [def('EnumBooleanMember')]).field('explicitType', Boolean);\n        def('EnumNumberBody').build('members', 'explicitType').field('members', [def('EnumNumberMember')]).field('explicitType', Boolean);\n        def('EnumStringBody').build('members', 'explicitType').field('members', or([def('EnumStringMember')], [def('EnumDefaultedMember')])).field('explicitType', Boolean);\n        def('EnumSymbolBody').build('members').field('members', [def('EnumDefaultedMember')]);\n        def('EnumBooleanMember').build('id', 'init').field('id', def('Identifier')).field('init', or(def('Literal'), Boolean));\n        def('EnumNumberMember').build('id', 'init').field('id', def('Identifier')).field('init', def('Literal'));\n        def('EnumStringMember').build('id', 'init').field('id', def('Identifier')).field('init', def('Literal'));\n        def('EnumDefaultedMember').build('id').field('id', def('Identifier'));\n    };\n});"]}