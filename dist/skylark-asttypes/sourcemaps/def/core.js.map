{"version":3,"sources":["def/core.js"],"names":["define","coreOpsDef","typesPlugin","fork","Type","use","def","or","shared","sharedPlugin","defaults","geq","BinaryOperators","AssignmentOperators","LogicalOperators","UnaryOperator","field","bases","String","build","Boolean","this","handlers","handler","emptyArray","BinaryOperator","AssignmentOperator","UpdateOperator","LogicalOperator","type","property","Number","RegExp","BigInt"],"mappings":"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","file":"../../def/core.js","sourcesContent":["define([\n    './operators/core',\n    '../types'\n], function (coreOpsDef, typesPlugin) {\n    'use strict';\n    return function (fork) {\n        var types = fork.use(typesPlugin);\n        var Type = types.Type;\n        var def = Type.def;\n        var or = Type.or;\n        var shared = fork.use(sharedPlugin);\n        var defaults = shared.defaults;\n        var geq = shared.geq;\n        const {BinaryOperators, AssignmentOperators, LogicalOperators} = fork.use(coreOpsDef);\n        def('Printable').field('loc', or(def('SourceLocation'), null), defaults['null'], true);\n        def('Node').bases('Printable').field('type', String).field('comments', or([def('Comment')], null), defaults['null'], true);\n        def('SourceLocation').field('start', def('Position')).field('end', def('Position')).field('source', or(String, null), defaults['null']);\n        def('Position').field('line', geq(1)).field('column', geq(0));\n        def('File').bases('Node').build('program', 'name').field('program', def('Program')).field('name', or(String, null), defaults['null']);\n        def('Program').bases('Node').build('body').field('body', [def('Statement')]);\n        def('Function').bases('Node').field('id', or(def('Identifier'), null), defaults['null']).field('params', [def('Pattern')]).field('body', def('BlockStatement')).field('generator', Boolean, defaults['false']).field('async', Boolean, defaults['false']);\n        def('Statement').bases('Node');\n        def('EmptyStatement').bases('Statement').build();\n        def('BlockStatement').bases('Statement').build('body').field('body', [def('Statement')]);\n        def('ExpressionStatement').bases('Statement').build('expression').field('expression', def('Expression'));\n        def('IfStatement').bases('Statement').build('test', 'consequent', 'alternate').field('test', def('Expression')).field('consequent', def('Statement')).field('alternate', or(def('Statement'), null), defaults['null']);\n        def('LabeledStatement').bases('Statement').build('label', 'body').field('label', def('Identifier')).field('body', def('Statement'));\n        def('BreakStatement').bases('Statement').build('label').field('label', or(def('Identifier'), null), defaults['null']);\n        def('ContinueStatement').bases('Statement').build('label').field('label', or(def('Identifier'), null), defaults['null']);\n        def('WithStatement').bases('Statement').build('object', 'body').field('object', def('Expression')).field('body', def('Statement'));\n        def('SwitchStatement').bases('Statement').build('discriminant', 'cases', 'lexical').field('discriminant', def('Expression')).field('cases', [def('SwitchCase')]).field('lexical', Boolean, defaults['false']);\n        def('ReturnStatement').bases('Statement').build('argument').field('argument', or(def('Expression'), null));\n        def('ThrowStatement').bases('Statement').build('argument').field('argument', def('Expression'));\n        def('TryStatement').bases('Statement').build('block', 'handler', 'finalizer').field('block', def('BlockStatement')).field('handler', or(def('CatchClause'), null), function () {\n            return this.handlers && this.handlers[0] || null;\n        }).field('handlers', [def('CatchClause')], function () {\n            return this.handler ? [this.handler] : [];\n        }, true).field('guardedHandlers', [def('CatchClause')], defaults.emptyArray).field('finalizer', or(def('BlockStatement'), null), defaults['null']);\n        def('CatchClause').bases('Node').build('param', 'guard', 'body').field('param', def('Pattern')).field('guard', or(def('Expression'), null), defaults['null']).field('body', def('BlockStatement'));\n        def('WhileStatement').bases('Statement').build('test', 'body').field('test', def('Expression')).field('body', def('Statement'));\n        def('DoWhileStatement').bases('Statement').build('body', 'test').field('body', def('Statement')).field('test', def('Expression'));\n        def('ForStatement').bases('Statement').build('init', 'test', 'update', 'body').field('init', or(def('VariableDeclaration'), def('Expression'), null)).field('test', or(def('Expression'), null)).field('update', or(def('Expression'), null)).field('body', def('Statement'));\n        def('ForInStatement').bases('Statement').build('left', 'right', 'body').field('left', or(def('VariableDeclaration'), def('Expression'))).field('right', def('Expression')).field('body', def('Statement'));\n        def('DebuggerStatement').bases('Statement').build();\n        def('Declaration').bases('Statement');\n        def('FunctionDeclaration').bases('Function', 'Declaration').build('id', 'params', 'body').field('id', def('Identifier'));\n        def('FunctionExpression').bases('Function', 'Expression').build('id', 'params', 'body');\n        def('VariableDeclaration').bases('Declaration').build('kind', 'declarations').field('kind', or('var', 'let', 'const')).field('declarations', [def('VariableDeclarator')]);\n        def('VariableDeclarator').bases('Node').build('id', 'init').field('id', def('Pattern')).field('init', or(def('Expression'), null), defaults['null']);\n        def('Expression').bases('Node');\n        def('ThisExpression').bases('Expression').build();\n        def('ArrayExpression').bases('Expression').build('elements').field('elements', [or(def('Expression'), null)]);\n        def('ObjectExpression').bases('Expression').build('properties').field('properties', [def('Property')]);\n        def('Property').bases('Node').build('kind', 'key', 'value').field('kind', or('init', 'get', 'set')).field('key', or(def('Literal'), def('Identifier'))).field('value', def('Expression'));\n        def('SequenceExpression').bases('Expression').build('expressions').field('expressions', [def('Expression')]);\n        var UnaryOperator = or('-', '+', '!', '~', 'typeof', 'void', 'delete');\n        def('UnaryExpression').bases('Expression').build('operator', 'argument', 'prefix').field('operator', UnaryOperator).field('argument', def('Expression')).field('prefix', Boolean, defaults['true']);\n        const BinaryOperator = or(...BinaryOperators);\n        def('BinaryExpression').bases('Expression').build('operator', 'left', 'right').field('operator', BinaryOperator).field('left', def('Expression')).field('right', def('Expression'));\n        const AssignmentOperator = or(...AssignmentOperators);\n        def('AssignmentExpression').bases('Expression').build('operator', 'left', 'right').field('operator', AssignmentOperator).field('left', or(def('Pattern'), def('MemberExpression'))).field('right', def('Expression'));\n        var UpdateOperator = or('++', '--');\n        def('UpdateExpression').bases('Expression').build('operator', 'argument', 'prefix').field('operator', UpdateOperator).field('argument', def('Expression')).field('prefix', Boolean);\n        var LogicalOperator = or(...LogicalOperators);\n        def('LogicalExpression').bases('Expression').build('operator', 'left', 'right').field('operator', LogicalOperator).field('left', def('Expression')).field('right', def('Expression'));\n        def('ConditionalExpression').bases('Expression').build('test', 'consequent', 'alternate').field('test', def('Expression')).field('consequent', def('Expression')).field('alternate', def('Expression'));\n        def('NewExpression').bases('Expression').build('callee', 'arguments').field('callee', def('Expression')).field('arguments', [def('Expression')]);\n        def('CallExpression').bases('Expression').build('callee', 'arguments').field('callee', def('Expression')).field('arguments', [def('Expression')]);\n        def('MemberExpression').bases('Expression').build('object', 'property', 'computed').field('object', def('Expression')).field('property', or(def('Identifier'), def('Expression'))).field('computed', Boolean, function () {\n            var type = this.property.type;\n            if (type === 'Literal' || type === 'MemberExpression' || type === 'BinaryExpression') {\n                return true;\n            }\n            return false;\n        });\n        def('Pattern').bases('Node');\n        def('SwitchCase').bases('Node').build('test', 'consequent').field('test', or(def('Expression'), null)).field('consequent', [def('Statement')]);\n        def('Identifier').bases('Expression', 'Pattern').build('name').field('name', String).field('optional', Boolean, defaults['false']);\n        def('Literal').bases('Expression').build('value').field('value', or(String, Boolean, null, Number, RegExp, BigInt));\n        def('Comment').bases('Printable').field('value', String).field('leading', Boolean, defaults['true']).field('trailing', Boolean, defaults['false']);\n    };\n});"]}