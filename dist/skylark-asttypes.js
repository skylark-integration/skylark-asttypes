/**
 * skylark-asttypes - A version of asttypes that ported to running on skylarkjs.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
(function(factory,globals,define,require) {
  var isAmd = (typeof define === 'function' && define.amd),
      isCmd = (!isAmd && typeof exports !== 'undefined');

  if (!isAmd && !define) {
    var map = {};
    function absolute(relative, base) {
        if (relative[0]!==".") {
          return relative;
        }
        var stack = base.split("/"),
            parts = relative.split("/");
        stack.pop(); 
        for (var i=0; i<parts.length; i++) {
            if (parts[i] == ".")
                continue;
            if (parts[i] == "..")
                stack.pop();
            else
                stack.push(parts[i]);
        }
        return stack.join("/");
    }
    define = globals.define = function(id, deps, factory) {
        if (typeof factory == 'function') {
            map[id] = {
                factory: factory,
                deps: deps.map(function(dep){
                  return absolute(dep,id);
                }),
                resolved: false,
                exports: null
            };
            require(id);
        } else {
            map[id] = {
                factory : null,
                resolved : true,
                exports : factory
            };
        }
    };
    require = globals.require = function(id) {
        if (!map.hasOwnProperty(id)) {
            throw new Error('Module ' + id + ' has not been defined');
        }
        var module = map[id];
        if (!module.resolved) {
            var args = [];

            module.deps.forEach(function(dep){
                args.push(require(dep));
            })

            module.exports = module.factory.apply(globals, args) || null;
            module.resolved = true;
        }
        return module.exports;
    };
  }
  
  if (!define) {
     throw new Error("The module utility (ex: requirejs or skylark-utils) is not loaded!");
  }

  factory(define,require);

  if (!isAmd) {
    var skylarkjs = require("skylark-langx-ns");

    if (isCmd) {
      module.exports = skylarkjs;
    } else {
      globals.skylarkjs  = skylarkjs;
    }
  }

})(function(define,require) {

define("skylark-asttypes/types",[],function(){"use strict";var e=Object.prototype;const A=e.toString,N=e.hasOwnProperty;class t{assert(e,t){if(this.check(e,t))return!0;throw t=L(e),new Error(t+" does not match type "+this)}arrayOf(){return new I(this)}}class I extends t{constructor(e){super(),this.elemType=e,this.kind="ArrayType"}toString(){return"["+this.elemType+"]"}check(e,t){return Array.isArray(e)&&e.every(e=>this.elemType.check(e,t))}}class B extends t{constructor(e){super(),this.value=e,this.kind="IdentityType"}toString(){return String(this.value)}check(e,t){var i=e===this.value;return i||"function"!=typeof t||t(this,e),i}}class D extends t{constructor(e){super(),this.fields=e,this.kind="ObjectType"}toString(){return"{ "+this.fields.join(", ")+" }"}check(t,i){return A.call(t)===A.call({})&&this.fields.every(e=>e.type.check(t[e.name],i))}}class F extends t{constructor(e){super(),this.types=e,this.kind="OrType"}toString(){return this.types.join(" | ")}check(t,i){return!!this.types.some(e=>e.check(t,!!i))||("function"==typeof i&&i(this,t),!1)}}class C extends t{constructor(e,t){super(),this.name=e,this.predicate=t,this.kind="PredicateType"}toString(){return this.name}check(e,t){var i=this.predicate(e,t);return i||"function"!=typeof t||t(this,e),i}}class O{constructor(e,t){this.type=e,this.typeName=t,this.baseNames=[],this.ownFields=Object.create(null),this.allSupertypes=Object.create(null),this.supertypeList=[],this.allFields=Object.create(null),this.fieldNames=[],this.finalized=!1,this.buildable=!1,this.buildParams=[]}isSupertypeOf(e){if(e instanceof O){if(!0!==this.finalized||!0!==e.finalized)throw new Error("");return N.call(e.allSupertypes,this.typeName)}throw new Error(e+" is not a Def")}checkAllFields(i,n){var r=this.allFields;if(!0!==this.finalized)throw new Error(""+this.typeName);return null!==i&&"object"==typeof i&&Object.keys(r).every(function(e){var t=(e=r[e]).type,e=e.getValue(i);return t.check(e,n)})}bases(...e){var t=this.baseNames;if(this.finalized){if(e.length!==t.length)throw new Error("");for(var i=0;i<e.length;i++)if(e[i]!==t[i])throw new Error("")}else e.forEach(e=>{t.indexOf(e)<0&&t.push(e)});return this}}class j{constructor(e,t,i,n){this.name=e,this.type=t,this.defaultFn=i,this.hidden=!!n}toString(){return JSON.stringify(this.name)+": "+this.type}getValue(e){var t=e[this.name];return t=void 0===t&&"function"==typeof this.defaultFn?this.defaultFn.call(e):t}}function L(t){return Array.isArray(t)?"["+t.map(L).join(", ")+"]":t&&"object"==typeof t?"{ "+Object.keys(t).map(function(e){return e+": "+t[e]}).join(", ")+" }":JSON.stringify(t)}return function(e){const r={or(...e){return new F(e.map(e=>r.from(e)))},from(t,e){if(t instanceof I||t instanceof B||t instanceof D||t instanceof F||t instanceof C)return t;if(t instanceof O)return t.type;if(l.check(t)){if(1!==t.length)throw new Error("only one element type is permitted for typed arrays");return new I(r.from(t[0]))}if(o.check(t))return new D(Object.keys(t).map(e=>new j(e,r.from(t[e],e))));if("function"!=typeof t)return new B(t);var i=n.indexOf(t);if(0<=i)return a[i];if("string"!=typeof e)throw new Error("missing name");return new C(e,t)},def(e){return N.call(h,e)?h[e]:h[e]=new T(e)},hasDef(e){return N.call(h,e)}};var n=[],a=[];function t(e,t){const i=A.call(t);e=new C(e,e=>A.call(e)===i);return t&&"function"==typeof t.constructor&&(n.push(t.constructor),a.push(e)),e}var i=t("string","truthy");const s=t("function",function(){}),l=t("array",[]),o=t("object",{});var d=t("RegExp",/./),u=t("Date",new Date),p=t("number",3),f=t("boolean",!0),c=t("null",null);const y=t("undefined",void 0);var b="function"==typeof BigInt?t("BigInt",BigInt(1234)):new C("BigInt",()=>!1),i={string:i,function:s,array:l,object:o,RegExp:d,Date:u,number:p,boolean:f,null:c,undefined:y,BigInt:b},h=Object.create(null);function m(e){if(e&&"object"==typeof e){e=e.type;if("string"==typeof e&&N.call(h,e)){e=h[e];if(e.finalized)return e}}return null}class T extends O{constructor(e){super(new C(e,(e,t)=>this.check(e,t)),e)}check(e,t){if(!0!==this.finalized)throw new Error("prematurely checking unfinalized type "+this.typeName);var i;return null!==e&&"object"==typeof e&&((i=m(e))?t&&i===this?this.checkAllFields(e,t):!!this.isSupertypeOf(i)&&(!t||i.checkAllFields(e,t)&&this.checkAllFields(e,!1)):("SourceLocation"===this.typeName||"Position"===this.typeName)&&this.checkAllFields(e,t))}build(...e){if(this.buildParams=e,!this.buildable){this.field("type",String,()=>this.typeName),this.buildable=!0;const a=(e,t,i,n)=>{if(!N.call(e,t)){var r=this.allFields;if(!N.call(r,t))throw new Error(""+t);var a,s=r[t],l=s.type;if(n)a=i;else{if(!s.defaultFn)throw n="no value or default function given for field "+JSON.stringify(t)+" of "+this.typeName+"("+this.buildParams.map(function(e){return r[e]}).join(", ")+")",new Error(n);a=s.defaultFn.call(e)}if(!l.check(a))throw new Error(L(a)+" does not match field "+s+" of type "+this.typeName);e[t]=a}};e=(...i)=>{var n=i.length;if(!this.finalized)throw new Error("attempting to instantiate unfinalized type "+this.typeName);var r=Object.create(E);if(this.buildParams.forEach(function(e,t){t<n?a(r,e,i[t],!0):a(r,e,null,!1)}),Object.keys(this.allFields).forEach(function(e){a(r,e,null,!1)}),r.type!==this.typeName)throw new Error("");return r};e.from=t=>{if(!this.finalized)throw new Error("attempting to instantiate unfinalized type "+this.typeName);var i=Object.create(E);if(Object.keys(this.allFields).forEach(function(e){N.call(t,e)?a(i,e,t[e],!0):a(i,e,null,!1)}),i.type!==this.typeName)throw new Error("");return i},Object.defineProperty(S,g(this.typeName),{enumerable:!0,value:e})}return this}field(e,t,i,n){return this.finalized?console.error("Ignoring attempt to redefine field "+JSON.stringify(e)+" of finalized type "+JSON.stringify(this.typeName)):this.ownFields[e]=new j(e,r.from(t),i,n),this}finalize(){if(!this.finalized){var e,i=this.allFields,n=this.allSupertypes;for(e in this.baseNames.forEach(e=>{var t=h[e];if(!(t instanceof O))throw e="unknown supertype name "+JSON.stringify(e)+" for subtype "+JSON.stringify(this.typeName),new Error(e);t.finalize(),k(i,t.allFields),k(n,t.allSupertypes)}),k(i,this.ownFields),(n[this.typeName]=this).fieldNames.length=0,i)N.call(i,e)&&!i[e].hidden&&this.fieldNames.push(e);Object.defineProperty(v,this.typeName,{enumerable:!0,value:this.type}),this.finalized=!0;var t=this.typeName,r=this.supertypeList;r.length=0,r.push(t);for(var a=Object.create(null),s=0;s<r.length;++s){t=r[s];var l=h[t];if(!0!==l.finalized)throw new Error("");N.call(a,t)&&delete r[a[t]],a[t]=s,r.push.apply(r,l.baseNames)}for(var o=0,d=o,u=r.length;d<u;++d)N.call(r,d)&&(r[o++]=r[d]);r.length=o,this.buildable&&0<=this.supertypeList.lastIndexOf("Expression")&&(p=this.typeName,c=x(p),S[c]||(f=S[g(p)])&&((p=function(...e){return S.expressionStatement(f.apply(S,e))}).from=function(...e){return S.expressionStatement(f.from.apply(S,e))},S[c]=p))}var p,f,c}}var S=Object.create(null),E={};function g(e){return e.replace(/^[A-Z]+/,function(e){var t=e.length;switch(t){case 0:return"";case 1:return e.toLowerCase();default:return e.slice(0,t-1).toLowerCase()+e.charAt(t-1)}})}function x(e){return(e=g(e)).replace(/(Expression)?$/,"Statement")}var v={};function P(e){var t=m(e);if(t)return t.fieldNames.slice(0);if("type"in e)throw new Error("did not recognize object of type "+JSON.stringify(e.type));return Object.keys(e)}function w(e,t){var i=m(e);if(i){i=i.allFields[t];if(i)return i.getValue(e)}return e&&e[t]}function k(t,i){Object.keys(i).forEach(function(e){t[e]=i[e]})}return{Type:r,builtInTypes:i,getSupertypeNames:function(e){if(!N.call(h,e))throw new Error("");if(!0!==(e=h[e]).finalized)throw new Error("");return e.supertypeList.slice(1)},computeSupertypeLookupTable:function(e){for(var t={},i=Object.keys(h),n=i.length,r=0;r<n;++r){var a=i[r],s=h[a];if(!0!==s.finalized)throw new Error(""+a);for(var l=0;l<s.supertypeList.length;++l){var o=s.supertypeList[l];if(N.call(e,o)){t[a]=o;break}}}return t},builders:S,defineMethod:function(e,t){var i=E[e];return y.check(t)?delete E[e]:(s.assert(t),Object.defineProperty(E,e,{enumerable:!0,configurable:!0,value:t})),i},getBuilderName:g,getStatementBuilderName:x,namedTypes:v,getFieldNames:P,getFieldValue:w,eachField:function(t,i,e){P(t).forEach(function(e){i.call(this,e,w(t,e))},e)},someField:function(t,i,e){return P(t).some(function(e){return i.call(this,e,w(t,e))},e)},finalize:function(){Object.keys(h).forEach(function(e){h[e].finalize()})}}}}),define("skylark-asttypes/path",["./types"],function(t){"use strict";var m=Object.prototype.hasOwnProperty;return function(e){var e=e.use(t),p=e.builtInTypes.array,f=e.builtInTypes.number;function c(e,t,i){if(!(this instanceof c))throw new Error("Path constructor cannot be invoked without 'new'");if(t){if(!(t instanceof c))throw new Error("")}else i=t=null;this.value=e,this.parentPath=t,this.name=i,this.__childCache=null}e=c.prototype;function y(e){return e.__childCache||(e.__childCache=Object.create(null))}function b(){}function h(i,e,t,n){if(p.assert(i.value),0===e)return b;var r=i.value.length;if(r<1)return b;for(var a=arguments.length,s=(n=2===a?(t=0,r):3===a?(t=Math.max(t,0),r):(t=Math.max(t,0),Math.min(n,r)),f.assert(t),f.assert(n),Object.create(null)),l=y(i),o=t;o<n;++o)if(m.call(i.value,o)){var d=i.get(o);if(d.name!==o)throw new Error("");var u=o+e;d.name=u,s[u]=d,delete l[o]}return delete l.length,function(){for(var e in s){var t=s[e];if(t.name!==+e)throw new Error("");l[e]=t,i.value[e]=t.value}}}return e.getValueProperty=function(e){return this.value[e]},e.get=function(...e){for(var t,i,n,r,a,s=this,l=e.length,o=0;o<l;++o)t=s,i=e[o],a=r=n=void 0,n=y(t),r=t.getValueProperty(i),a=n[i],s=a=m.call(n,i)&&a.value===r?a:n[i]=new t.constructor(r,t,i);return s},e.each=function(e,t){for(var i=[],n=this.value.length,r=0,r=0;r<n;++r)m.call(this.value,r)&&(i[r]=this.get(r));for(t=t||this,r=0;r<n;++r)m.call(i,r)&&e.call(t,i[r])},e.map=function(t,e){var i=[];return this.each(function(e){i.push(t.call(this,e))},e),i},e.filter=function(t,e){var i=[];return this.each(function(e){t.call(this,e)&&i.push(e)},e),i},e.shift=function(){var e=h(this,-1),t=this.value.shift();return e(),t},e.unshift=function(...e){var t=h(this,e.length),e=this.value.unshift.apply(this.value,e);return t(),e},e.push=function(...e){return p.assert(this.value),delete y(this).length,this.value.push.apply(this.value,e)},e.pop=function(){p.assert(this.value);var e=y(this);return delete e[this.value.length-1],delete e.length,this.value.pop()},e.insertAt=function(e){var t=arguments.length,i=h(this,t-1,e);if(!(i===b&&t<=1)){e=Math.max(e,0);for(var n=1;n<t;++n)this.value[e+n-1]=arguments[n];i()}return this},e.insertBefore=function(...e){for(var t=this.parentPath,i=e.length,n=[this.name],r=0;r<i;++r)n.push(e[r]);return t.insertAt.apply(t,n)},e.insertAfter=function(...e){for(var t=this.parentPath,i=e.length,n=[this.name+1],r=0;r<i;++r)n.push(e[r]);return t.insertAt.apply(t,n)},e.replace=function(e){var t=[],i=this.parentPath.value,n=y(this.parentPath),r=arguments.length,a=this;if(!(a instanceof c))throw new Error("");if(l=a.parentPath){var s=l.value,l=y(l);if(s[a.name]===a.value?l[a.name]=a:p.check(s)?0<=(o=s.indexOf(a.value))&&(l[a.name=o]=a):(s[a.name]=a.value,l[a.name]=a),s[a.name]!==a.value)throw new Error("");if(a.parentPath.get(a.name)!==a)throw new Error("")}if(p.check(i)){for(var o=i.length,l=h(this.parentPath,r-1,this.name+1),d=[this.name,1],u=0;u<r;++u)d.push(arguments[u]);if(i.splice.apply(i,d)[0]!==this.value)throw new Error("");if(i.length!==o-1+r)throw new Error("");if(l(),0===r)delete this.value,delete n[this.name],this.__childCache=null;else{if(i[this.name]!==e)throw new Error("");for(this.value!==e&&(this.value=e,this.__childCache=null),u=0;u<r;++u)t.push(this.parentPath.get(this.name+u));if(t[0]!==this)throw new Error("")}}else if(1===r)this.value!==e&&(this.__childCache=null),this.value=i[this.name]=e,t.push(this);else{if(0!==r)throw new Error("Could not replace path");delete i[this.name],delete this.value,this.__childCache=null}return t},c}}),define("skylark-asttypes/scope",["./types"],function(i){"use strict";var h=Object.prototype.hasOwnProperty;return function(e){function n(e,t){if(!(this instanceof n))throw new Error("Scope constructor cannot be invoked without 'new'");var i;if(u.check(e.value)||d.assert(e.value),t){if(!(t instanceof n))throw new Error("");i=t.depth+1}else t=null,i=0;Object.defineProperties(this,{path:{value:e},node:{value:e.value},isGlobal:{value:!t,enumerable:!0},depth:{value:i},parent:{value:t},bindings:{value:{}},types:{value:{}}})}var a=e.use(i),e=a.Type,s=a.namedTypes,t=s.Node,l=s.Expression,o=a.builtInTypes.array,r=a.builders,d=e.or(s.Program,s.Function,s.CatchClause),u=e.or(s.Function,s.ClassDeclaration,s.ClassExpression,s.InterfaceDeclaration,s.TSInterfaceDeclaration,s.TypeAlias,s.TSTypeAliasDeclaration),p=e.or(s.TypeParameter,s.TSTypeParameter),e=(n.isEstablishedBy=function(e){return d.check(e)||u.check(e)},n.prototype);function f(i,n,r){var e=i.value;i.parent&&s.FunctionExpression.check(i.parent.node)&&i.parent.node.id&&y(i.parent.get("id"),n),e&&(o.check(e)?i.each(e=>{c(e,n,r)}):s.Function.check(e)?(i.get("params").each(e=>{y(e,n)}),c(i.get("body"),n,r),f(i.get("typeParameters"),n,r)):s.TypeAlias&&s.TypeAlias.check(e)||s.InterfaceDeclaration&&s.InterfaceDeclaration.check(e)||s.TSTypeAliasDeclaration&&s.TSTypeAliasDeclaration.check(e)||s.TSInterfaceDeclaration&&s.TSInterfaceDeclaration.check(e)?b(i.get("id"),r):s.VariableDeclarator.check(e)?(y(i.get("id"),n),c(i.get("init"),n,r)):"ImportSpecifier"===e.type||"ImportNamespaceSpecifier"===e.type||"ImportDefaultSpecifier"===e.type?y(i.get(e.local?"local":e.name?"name":"id"),n):t.check(e)&&!l.check(e)&&a.eachField(e,function(e,t){e=i.get(e);if(!function(e,t){if(e.value===t)return 1;if(Array.isArray(e.value)&&0===e.value.length&&Array.isArray(t)&&0===t.length)return 1;return}(e,t))throw new Error("");c(e,n,r)}))}function c(e,t,i){var n,r=e.value;r&&!l.check(r)&&(s.FunctionDeclaration.check(r)&&null!==r.id?y(e.get("id"),t):s.ClassDeclaration&&s.ClassDeclaration.check(r)&&null!==r.id?(y(e.get("id"),t),f(e.get("typeParameters"),t,i)):s.InterfaceDeclaration&&s.InterfaceDeclaration.check(r)||s.TSInterfaceDeclaration&&s.TSInterfaceDeclaration.check(r)?b(e.get("id"),i):d.check(r)?s.CatchClause.check(r)&&s.Identifier.check(r.param)&&(r=r.param.name,n=h.call(t,r),f(e.get("body"),t,i),n||delete t[r]):f(e,t,i))}function y(e,i){var t=e.value;s.Pattern.assert(t),s.Identifier.check(t)?h.call(i,t.name)?i[t.name].push(e):i[t.name]=[e]:s.AssignmentPattern&&s.AssignmentPattern.check(t)?y(e.get("left"),i):s.ObjectPattern&&s.ObjectPattern.check(t)?e.get("properties").each(function(e){var t=e.value;s.Pattern.check(t)?y(e,i):s.Property.check(t)||s.ObjectProperty&&s.ObjectProperty.check(t)?y(e.get("value"),i):s.SpreadProperty&&s.SpreadProperty.check(t)&&y(e.get("argument"),i)}):s.ArrayPattern&&s.ArrayPattern.check(t)?e.get("elements").each(function(e){var t=e.value;s.Pattern.check(t)?y(e,i):s.SpreadElement&&s.SpreadElement.check(t)&&y(e.get("argument"),i)}):s.PropertyPattern&&s.PropertyPattern.check(t)?y(e.get("pattern"),i):(s.SpreadElementPattern&&s.SpreadElementPattern.check(t)||s.RestElement&&s.RestElement.check(t)||s.SpreadPropertyPattern&&s.SpreadPropertyPattern.check(t))&&y(e.get("argument"),i)}function b(e,t){var i=e.value;s.Pattern.assert(i),s.Identifier.check(i)&&(h.call(t,i.name)?t[i.name].push(e):t[i.name]=[e])}return e.didScan=!1,e.declares=function(e){return this.scan(),h.call(this.bindings,e)},e.declaresType=function(e){return this.scan(),h.call(this.types,e)},e.declareTemporary=function(e){if(e){if(!/^[a-z$_]/i.test(e))throw new Error("")}else e="t$";e+=this.depth.toString(36)+"$",this.scan();for(var t=0;this.declares(e+t);)++t;var i=e+t;return this.bindings[i]=a.builders.identifier(i)},e.injectTemporary=function(e,t){e=e||this.declareTemporary();var i=this.path.get("body");return(i=s.BlockStatement.check(i.value)?i.get("body"):i).unshift(r.variableDeclaration("var",[r.variableDeclarator(e,t||null)])),e},e.scan=function(e){if(e||!this.didScan){for(var t in this.bindings)delete this.bindings[t];for(var t in this.types)delete this.types[t];var i,e=this.path,n=this.bindings,r=this.types,a=e.value;u.check(a)&&(i=e.get("typeParameters","params"),o.check(i.value))&&i.each(e=>{var t,i;t=r,i=(e=e).value,p.assert(i),h.call(t,i.name)?t[i.name].push(e):t[i.name]=[e]}),d.check(a)&&(s.CatchClause.check(a)?y(e.get("param"),n):f(e,n,r)),this.didScan=!0}},e.getBindings=function(){return this.scan(),this.bindings},e.getTypes=function(){return this.scan(),this.types},e.lookup=function(e){for(var t=this;t&&!t.declares(e);t=t.parent);return t},e.lookupType=function(e){for(var t=this;t&&!t.declaresType(e);t=t.parent);return t},e.getGlobalScope=function(){for(var e=this;!e.isGlobal;)e=e.parent;return e},n}}),define("skylark-asttypes/node-path",["./types","./path","./scope"],function(p,f,c){"use strict";return function(e){function n(e,t,i){if(!(this instanceof n))throw new Error("NodePath constructor cannot be invoked without 'new'");r.call(this,e,t,i)}var t=e.use(p),a=t.namedTypes,s=t.builders,l=t.builtInTypes.number,i=t.builtInTypes.array,r=e.use(f),o=e.use(c),e=n.prototype=Object.create(r.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}});Object.defineProperties(e,{node:{get:function(){return Object.defineProperty(this,"node",{configurable:!0,value:this._computeNode()}),this.node}},parent:{get:function(){return Object.defineProperty(this,"parent",{configurable:!0,value:this._computeParent()}),this.parent}},scope:{get:function(){return Object.defineProperty(this,"scope",{configurable:!0,value:this._computeScope()}),this.scope}}}),e.replace=function(){return delete this.node,delete this.parent,delete this.scope,r.prototype.replace.apply(this,arguments)},e.prune=function(){var e=this.parent;this.replace();if(a.VariableDeclaration.check(e.node)){var t=e.get("declarations").value;if(!t||0===t.length)return e.prune()}else if(a.ExpressionStatement.check(e.node)){if(!e.get("expression").value)return e.prune()}else if(a.IfStatement.check(e.node)){t=e;var i=t.get("test").value,n=t.get("alternate").value,r=t.get("consequent").value;r||n?!r&&n&&(r=s.unaryExpression("!",i,!0),a.UnaryExpression.check(i)&&"!"===i.operator&&(r=i.argument),t.get("test").replace(r),t.get("consequent").replace(n),t.get("alternate").replace()):(r=s.expressionStatement(i),t.replace(r))}return e},e._computeNode=function(){var e=this.value;return a.Node.check(e)?e:(e=this.parentPath)&&e.node||null},e._computeParent=function(){var e=this.value,t=this.parentPath;if(!a.Node.check(e)){for(;t&&!a.Node.check(t.value);)t=t.parentPath;t=t&&t.parentPath}for(;t&&!a.Node.check(t.value);)t=t.parentPath;return t||null},e._computeScope=function(){var e=this.value,t=this.parentPath,t=t&&t.scope;return(t=a.Node.check(e)&&o.isEstablishedBy(e)?new o(this,t):t)||null},e.getValueProperty=function(e){return t.getFieldValue(this.value,e)},e.needsParens=function(e){var t=this.parentPath;if(!t)return!1;var i=this.value;if(!a.Expression.check(i))return!1;if("Identifier"===i.type)return!1;for(;!a.Node.check(t.value);)if(!(t=t.parentPath))return!1;var n=t.value;switch(i.type){case"UnaryExpression":case"SpreadElement":case"SpreadProperty":return"MemberExpression"===n.type&&"object"===this.name&&n.object===i;case"BinaryExpression":case"LogicalExpression":switch(n.type){case"CallExpression":return"callee"===this.name&&n.callee===i;case"UnaryExpression":case"SpreadElement":case"SpreadProperty":return!0;case"MemberExpression":return"object"===this.name&&n.object===i;case"BinaryExpression":case"LogicalExpression":{const a=i;var r=n.operator;const t=d[r];r=a.operator,r=d[r];if(t>r)return!0;if(t===r&&"right"===this.name){if(n.right!==a)throw new Error("Nodes must be equal");return!0}}default:return!1}case"SequenceExpression":switch(n.type){case"ForStatement":return!1;case"ExpressionStatement":return"expression"!==this.name;default:return!0}case"YieldExpression":switch(n.type){case"BinaryExpression":case"LogicalExpression":case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"CallExpression":case"MemberExpression":case"NewExpression":case"ConditionalExpression":case"YieldExpression":return!0;default:return!1}case"Literal":return"MemberExpression"===n.type&&l.check(i.value)&&"object"===this.name&&n.object===i;case"AssignmentExpression":case"ConditionalExpression":switch(n.type){case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"BinaryExpression":case"LogicalExpression":return!0;case"CallExpression":return"callee"===this.name&&n.callee===i;case"ConditionalExpression":return"test"===this.name&&n.test===i;case"MemberExpression":return"object"===this.name&&n.object===i;default:return!1}default:if("NewExpression"===n.type&&"callee"===this.name&&n.callee===i)return u(i)}return!(!0===e||this.canBeFirstInStatement()||!this.firstInStatement())};var d={};function u(e){return!!a.CallExpression.check(e)||(i.check(e)?e.some(u):!!a.Node.check(e)&&t.someField(e,function(e,t){return u(t)}))}return[["||"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"]].forEach(function(e,t){e.forEach(function(e){d[e]=t})}),e.canBeFirstInStatement=function(){var e=this.node;return!a.FunctionExpression.check(e)&&!a.ObjectExpression.check(e)},e.firstInStatement=function(){for(var e,t,i=this;i.parent;i=i.parent){if(e=i.node,t=i.parent.node,a.BlockStatement.check(t)&&"body"===i.parent.name&&0===i.name){if(t.body[0]!==e)throw new Error("Nodes must be equal");return!0}if(a.ExpressionStatement.check(t)&&"expression"===i.name){if(t.expression!==e)throw new Error("Nodes must be equal");return!0}if(a.SequenceExpression.check(t)&&"expressions"===i.parent.name&&0===i.name){if(t.expressions[0]!==e)throw new Error("Nodes must be equal")}else if(a.CallExpression.check(t)&&"callee"===i.name){if(t.callee!==e)throw new Error("Nodes must be equal")}else if(a.MemberExpression.check(t)&&"object"===i.name){if(t.object!==e)throw new Error("Nodes must be equal")}else if(a.ConditionalExpression.check(t)&&"test"===i.name){if(t.test!==e)throw new Error("Nodes must be equal")}else if(function(e){return a.BinaryExpression.check(e)||a.LogicalExpression.check(e)}(t)&&"left"===i.name){if(t.left!==e)throw new Error("Nodes must be equal")}else{if(!a.UnaryExpression.check(t)||t.prefix||"argument"!==i.name)return!1;if(t.argument!==e)throw new Error("Nodes must be equal")}}return!0},n}}),define("skylark-asttypes/path-visitor",["./types","./node-path"],function(t,s){"use strict";var y=Object.prototype.hasOwnProperty;return function(e){var d=e.use(t),o=e.use(s),u=d.builtInTypes.array,p=d.builtInTypes.object,f=d.builtInTypes.function;const c=function e(){if(!(this instanceof e))throw new Error("PathVisitor constructor cannot be invoked without 'new'");this._reusableContextStack=[],this._methodNameTable=function(e){var t,i=Object.create(null);for(t in e)/^visit[A-Z]/.test(t)&&(i[t.slice("visit".length)]=!0);for(var n=d.computeSupertypeLookupTable(i),r=Object.create(null),a=Object.keys(n),s=a.length,l=0;l<s;++l){var o=a[l];t="visit"+n[o],f.check(e[t])&&(r[o]=t)}return r}(this),this._shouldVisitComments=y.call(this._methodNameTable,"Block")||y.call(this._methodNameTable,"Line"),this.Context=function(t){function i(e){if(!(this instanceof i))throw new Error("");if(!(this instanceof c))throw new Error("");if(!(e instanceof o))throw new Error("");Object.defineProperty(this,"visitor",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.currentPath=e,this.needToCallTraverse=!0,Object.seal(this)}var e;if(t instanceof c)return(e=i.prototype=Object.create(t)).constructor=i,n(e,a),i;throw new Error("")}(this),this._visiting=!1,this._changeReported=!1};function n(e,t){for(var i in t)y.call(t,i)&&(e[i]=t[i])}c.fromMethodsObject=function(e){var t,i;return e instanceof c?e:new(p.check(e)?((i=(t=function e(){if(!(this instanceof e))throw new Error("Visitor constructor cannot be invoked without 'new'");c.call(this)}).prototype=Object.create(r)).constructor=t,n(i,e),n(t,c),f.assert(t.fromMethodsObject),f.assert(t.visit),t):c)},c.visit=function(e,t){return c.fromMethodsObject(t).visit(e)};var r=c.prototype;function i(e,t){if(!(e instanceof o))throw new Error("");if(!(t instanceof c))throw new Error("");var i=e.value;if(u.check(i))e.each(t.visitWithoutReset,t);else if(p.check(i)){for(var n=d.getFieldNames(i),r=(t._shouldVisitComments&&i.comments&&n.indexOf("comments")<0&&n.push("comments"),n.length),a=[],s=0;s<r;++s){var l=n[s];y.call(i,l)||(i[l]=d.getFieldValue(i,l)),a.push(e.get(l))}for(s=0;s<r;++s)t.visitWithoutReset(a[s])}return e.value}r.visit=function(){if(this._visiting)throw new Error("Recursively calling visitor.visit(path) resets visitor state. Try this.visit(path) or this.traverse(path) instead.");this._visiting=!0,this._changeReported=!1,this._abortRequested=!1;for(var e=arguments.length,t=new Array(e),i=0;i<e;++i)t[i]=arguments[i];t[0]instanceof o||(t[0]=new o({root:t[0]}).get("root")),this.reset.apply(this,t);try{var n=this.visitWithoutReset(t[0]),r=!0}finally{if(this._visiting=!1,!r&&this._abortRequested)return t[0].value}return n},r.AbortRequest=function(){},r.abort=function(){var e=this,t=(e._abortRequested=!0,new e.AbortRequest);throw t.cancel=function(){e._abortRequested=!1},t},r.reset=function(e){},r.visitWithoutReset=function(e){if(this instanceof this.Context)return this.visitor.visitWithoutReset(e);if(!(e instanceof o))throw new Error("");var t=e.value,t=t&&"object"==typeof t&&"string"==typeof t.type&&this._methodNameTable[t.type];if(!t)return i(e,this);e=this.acquireContext(e);try{return e.invokeVisitorMethod(t)}finally{this.releaseContext(e)}},r.acquireContext=function(e){return 0===this._reusableContextStack.length?new this.Context(e):this._reusableContextStack.pop().reset(e)},r.releaseContext=function(e){if(!(e instanceof this.Context))throw new Error("");this._reusableContextStack.push(e),e.currentPath=null},r.reportChanged=function(){this._changeReported=!0},r.wasChangeReported=function(){return this._changeReported};var a=Object.create(null);return a.reset=function(e){if(this instanceof this.Context&&e instanceof o)return this.currentPath=e,this.needToCallTraverse=!0,this;throw new Error("")},a.invokeVisitorMethod=function(e){if(!(this instanceof this.Context))throw new Error("");if(!(this.currentPath instanceof o))throw new Error("");var t=this.visitor[e].call(this,this.currentPath);if(!1===t?this.needToCallTraverse=!1:void 0!==t&&(this.currentPath=this.currentPath.replace(t)[0],this.needToCallTraverse)&&this.traverse(this.currentPath),!1!==this.needToCallTraverse)throw new Error("Must either call this.traverse or return false in "+e);t=this.currentPath;return t&&t.value},a.traverse=function(e,t){if(this instanceof this.Context&&e instanceof o&&this.currentPath instanceof o)return this.needToCallTraverse=!1,i(e,c.fromMethodsObject(t||this.visitor));throw new Error("")},a.visit=function(e,t){if(this instanceof this.Context&&e instanceof o&&this.currentPath instanceof o)return this.needToCallTraverse=!1,c.fromMethodsObject(t||this.visitor).visitWithoutReset(e);throw new Error("")},a.reportChanged=function(){this.visitor.reportChanged()},a.abort=function(){this.needToCallTraverse=!1,this.visitor.abort()},c}}),define("skylark-asttypes/equiv",["./types"],function(t){"use strict";return function(e){var e=e.use(t),g=e.getFieldNames,x=e.getFieldValue,v=e.builtInTypes.array,P=e.builtInTypes.object,w=e.builtInTypes.Date,k=e.builtInTypes.RegExp,A=Object.prototype.hasOwnProperty;function n(e,t,i){return v.check(i)?i.length=0:i=null,N(e,t,i)}function r(e){return/[_$a-z][_$a-z0-9]*/i.test(e)?"."+e:"["+JSON.stringify(e)+"]"}function N(e,t,i){if(e===t)return!0;if(v.check(e)){var n=e,r=t,a=i,s=(v.assert(n),n.length);if(!v.check(r)||r.length!==s)return a&&a.push("length"),!1;for(var l=0;l<s;++l){if(a&&a.push(l),l in n!=l in r)return!1;if(!N(n[l],r[l],a))return!1;if(a){var o=a.pop();if(o!==l)throw new Error(""+o)}}return!0}if(P.check(e)){var d=e,u=t,p=i;if(P.assert(d),P.check(u))if(d.type!==u.type)p&&p.push("type");else{var f=g(d),c=f.length,y=g(u),b=y.length;if(c===b){for(var h=0;h<c;++h){var m=f[h],T=x(d,m),S=x(u,m);if(p&&p.push(m),!N(T,S,p))return!1;if(p){T=p.pop();if(T!==m)throw new Error(""+T)}}return!0}if(p){var E=Object.create(null);for(h=0;h<c;++h)E[f[h]]=!0;for(h=0;h<b;++h){if(m=y[h],!A.call(E,m))return p.push(m),!1;delete E[m]}for(m in E){p.push(m);break}}}return!1}return w.check(e)?w.check(t)&&+e==+t:k.check(e)?k.check(t)&&e.source===t.source&&e.global===t.global&&e.multiline===t.multiline&&e.ignoreCase===t.ignoreCase:e==t}return n.assert=function(e,t){var i=[];if(!n(e,t,i)){if(0!==i.length)throw new Error("Nodes differ in the following path: "+i.map(r).join(""));if(e!==t)throw new Error("Nodes must be equal")}},n}}),define("skylark-asttypes/fork",["./types","./path-visitor","./equiv","./path","./node-path"],function(n,r,a,s,l){"use strict";function o(){const i=[],n=[];var r={use:function(e){var t=i.indexOf(e);return-1===t&&(t=i.length,i.push(e),n[t]=e(r)),n[t]}};return r}return function(e){var t=o(),i=t.use(n),e=(e.forEach(t.use),i.finalize(),t.use(r));return{Type:i.Type,builtInTypes:i.builtInTypes,namedTypes:i.namedTypes,builders:i.builders,defineMethod:i.defineMethod,getFieldNames:i.getFieldNames,getFieldValue:i.getFieldValue,eachField:i.eachField,someField:i.someField,getSupertypeNames:i.getSupertypeNames,getBuilderName:i.getBuilderName,astNodesAreEquivalent:t.use(a),finalize:i.finalize,Path:t.use(s),NodePath:t.use(l),PathVisitor:e,use:t.use,visit:e.visit}}}),define("skylark-asttypes/def/operators/core",[],function(){"use strict";return function(){return{BinaryOperators:["==","!=","===","!==","<","<=",">",">=","<<",">>",">>>","+","-","*","/","%","&","|","^","in","instanceof"],AssignmentOperators:["=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","|=","^=","&="],LogicalOperators:["||","&&"]}}}),define("skylark-asttypes/def/operators/es2016",["./core"],function(t){"use strict";return function(e){e=e.use(t);return e.BinaryOperators.indexOf("**")<0&&e.BinaryOperators.push("**"),e.AssignmentOperators.indexOf("**=")<0&&e.AssignmentOperators.push("**="),e}}),define("skylark-asttypes/def/operators/es2020",["./es2016"],function(t){"use strict";return function(e){e=e.use(t);return e.LogicalOperators.indexOf("??")<0&&e.LogicalOperators.push("??"),e}}),define("skylark-asttypes/def/operators/es2021",["./es2020"],function(i){"use strict";return function(e){const t=e.use(i);return t.LogicalOperators.forEach(e=>{e+="=";t.AssignmentOperators.indexOf(e)<0&&t.AssignmentOperators.push(e)}),t}}),define("skylark-asttypes/def/core",["./operators/core","../types"],function(l,o){"use strict";return function(e){var t=e.use(o).Type,i=t.def,t=t.or,n=e.use(sharedPlugin),r=n.defaults,n=n.geq,{BinaryOperators:e,AssignmentOperators:a,LogicalOperators:s}=e.use(l),n=(i("Printable").field("loc",t(i("SourceLocation"),null),r.null,!0),i("Node").bases("Printable").field("type",String).field("comments",t([i("Comment")],null),r.null,!0),i("SourceLocation").field("start",i("Position")).field("end",i("Position")).field("source",t(String,null),r.null),i("Position").field("line",n(1)).field("column",n(0)),i("File").bases("Node").build("program","name").field("program",i("Program")).field("name",t(String,null),r.null),i("Program").bases("Node").build("body").field("body",[i("Statement")]),i("Function").bases("Node").field("id",t(i("Identifier"),null),r.null).field("params",[i("Pattern")]).field("body",i("BlockStatement")).field("generator",Boolean,r.false).field("async",Boolean,r.false),i("Statement").bases("Node"),i("EmptyStatement").bases("Statement").build(),i("BlockStatement").bases("Statement").build("body").field("body",[i("Statement")]),i("ExpressionStatement").bases("Statement").build("expression").field("expression",i("Expression")),i("IfStatement").bases("Statement").build("test","consequent","alternate").field("test",i("Expression")).field("consequent",i("Statement")).field("alternate",t(i("Statement"),null),r.null),i("LabeledStatement").bases("Statement").build("label","body").field("label",i("Identifier")).field("body",i("Statement")),i("BreakStatement").bases("Statement").build("label").field("label",t(i("Identifier"),null),r.null),i("ContinueStatement").bases("Statement").build("label").field("label",t(i("Identifier"),null),r.null),i("WithStatement").bases("Statement").build("object","body").field("object",i("Expression")).field("body",i("Statement")),i("SwitchStatement").bases("Statement").build("discriminant","cases","lexical").field("discriminant",i("Expression")).field("cases",[i("SwitchCase")]).field("lexical",Boolean,r.false),i("ReturnStatement").bases("Statement").build("argument").field("argument",t(i("Expression"),null)),i("ThrowStatement").bases("Statement").build("argument").field("argument",i("Expression")),i("TryStatement").bases("Statement").build("block","handler","finalizer").field("block",i("BlockStatement")).field("handler",t(i("CatchClause"),null),function(){return this.handlers&&this.handlers[0]||null}).field("handlers",[i("CatchClause")],function(){return this.handler?[this.handler]:[]},!0).field("guardedHandlers",[i("CatchClause")],r.emptyArray).field("finalizer",t(i("BlockStatement"),null),r.null),i("CatchClause").bases("Node").build("param","guard","body").field("param",i("Pattern")).field("guard",t(i("Expression"),null),r.null).field("body",i("BlockStatement")),i("WhileStatement").bases("Statement").build("test","body").field("test",i("Expression")).field("body",i("Statement")),i("DoWhileStatement").bases("Statement").build("body","test").field("body",i("Statement")).field("test",i("Expression")),i("ForStatement").bases("Statement").build("init","test","update","body").field("init",t(i("VariableDeclaration"),i("Expression"),null)).field("test",t(i("Expression"),null)).field("update",t(i("Expression"),null)).field("body",i("Statement")),i("ForInStatement").bases("Statement").build("left","right","body").field("left",t(i("VariableDeclaration"),i("Expression"))).field("right",i("Expression")).field("body",i("Statement")),i("DebuggerStatement").bases("Statement").build(),i("Declaration").bases("Statement"),i("FunctionDeclaration").bases("Function","Declaration").build("id","params","body").field("id",i("Identifier")),i("FunctionExpression").bases("Function","Expression").build("id","params","body"),i("VariableDeclaration").bases("Declaration").build("kind","declarations").field("kind",t("var","let","const")).field("declarations",[i("VariableDeclarator")]),i("VariableDeclarator").bases("Node").build("id","init").field("id",i("Pattern")).field("init",t(i("Expression"),null),r.null),i("Expression").bases("Node"),i("ThisExpression").bases("Expression").build(),i("ArrayExpression").bases("Expression").build("elements").field("elements",[t(i("Expression"),null)]),i("ObjectExpression").bases("Expression").build("properties").field("properties",[i("Property")]),i("Property").bases("Node").build("kind","key","value").field("kind",t("init","get","set")).field("key",t(i("Literal"),i("Identifier"))).field("value",i("Expression")),i("SequenceExpression").bases("Expression").build("expressions").field("expressions",[i("Expression")]),t("-","+","!","~","typeof","void","delete")),n=(i("UnaryExpression").bases("Expression").build("operator","argument","prefix").field("operator",n).field("argument",i("Expression")).field("prefix",Boolean,r.true),t(...e)),e=(i("BinaryExpression").bases("Expression").build("operator","left","right").field("operator",n).field("left",i("Expression")).field("right",i("Expression")),t(...a)),n=(i("AssignmentExpression").bases("Expression").build("operator","left","right").field("operator",e).field("left",t(i("Pattern"),i("MemberExpression"))).field("right",i("Expression")),t("++","--")),a=(i("UpdateExpression").bases("Expression").build("operator","argument","prefix").field("operator",n).field("argument",i("Expression")).field("prefix",Boolean),t(...s));i("LogicalExpression").bases("Expression").build("operator","left","right").field("operator",a).field("left",i("Expression")).field("right",i("Expression")),i("ConditionalExpression").bases("Expression").build("test","consequent","alternate").field("test",i("Expression")).field("consequent",i("Expression")).field("alternate",i("Expression")),i("NewExpression").bases("Expression").build("callee","arguments").field("callee",i("Expression")).field("arguments",[i("Expression")]),i("CallExpression").bases("Expression").build("callee","arguments").field("callee",i("Expression")).field("arguments",[i("Expression")]),i("MemberExpression").bases("Expression").build("object","property","computed").field("object",i("Expression")).field("property",t(i("Identifier"),i("Expression"))).field("computed",Boolean,function(){var e=this.property.type;return"Literal"===e||"MemberExpression"===e||"BinaryExpression"===e}),i("Pattern").bases("Node"),i("SwitchCase").bases("Node").build("test","consequent").field("test",t(i("Expression"),null)).field("consequent",[i("Statement")]),i("Identifier").bases("Expression","Pattern").build("name").field("name",String).field("optional",Boolean,r.false),i("Literal").bases("Expression").build("value").field("value",t(String,Boolean,null,Number,RegExp,BigInt)),i("Comment").bases("Printable").field("value",String).field("leading",Boolean,r.true).field("trailing",Boolean,r.false)}}),define("skylark-asttypes/shared",["./types"],function(t){"use strict";return function(e){var e=e.use(t),i=e.Type,e=e.builtInTypes,n=e.number;e=i.or(e.string,e.number,e.boolean,e.null,e.undefined);return{geq:function(t){return i.from(e=>n.check(e)&&t<=e,n+" >= "+t)},defaults:{null:function(){return null},emptyArray:function(){return[]},false:function(){return!1},true:function(){return!0},undefined:function(){},"use strict":function(){return"use strict"}},isPrimitive:i.from(e=>{return null===e||"object"!=(e=typeof e)&&"function"!=e},e.toString())}}}),define("skylark-asttypes/def/es6",["./core","../types","../shared"],function(r,a,s){"use strict";return function(e){e.use(r);var t=e.use(a),i=t.Type.def,t=t.Type.or,e=e.use(s).defaults,n=(i("Function").field("generator",Boolean,e.false).field("expression",Boolean,e.false).field("defaults",[t(i("Expression"),null)],e.emptyArray).field("rest",t(i("Identifier"),null),e.null),i("RestElement").bases("Pattern").build("argument").field("argument",i("Pattern")).field("typeAnnotation",t(i("TypeAnnotation"),i("TSTypeAnnotation"),null),e.null),i("SpreadElementPattern").bases("Pattern").build("argument").field("argument",i("Pattern")),i("FunctionDeclaration").build("id","params","body","generator","expression").field("id",t(i("Identifier"),null)),i("FunctionExpression").build("id","params","body","generator","expression"),i("ArrowFunctionExpression").bases("Function","Expression").build("params","body","expression").field("id",null,e.null).field("body",t(i("BlockStatement"),i("Expression"))).field("generator",!1,e.false),i("ForOfStatement").bases("Statement").build("left","right","body").field("left",t(i("VariableDeclaration"),i("Pattern"))).field("right",i("Expression")).field("body",i("Statement")),i("YieldExpression").bases("Expression").build("argument","delegate").field("argument",t(i("Expression"),null)).field("delegate",Boolean,e.false),i("GeneratorExpression").bases("Expression").build("body","blocks","filter").field("body",i("Expression")).field("blocks",[i("ComprehensionBlock")]).field("filter",t(i("Expression"),null)),i("ComprehensionExpression").bases("Expression").build("body","blocks","filter").field("body",i("Expression")).field("blocks",[i("ComprehensionBlock")]).field("filter",t(i("Expression"),null)),i("ComprehensionBlock").bases("Node").build("left","right","each").field("left",i("Pattern")).field("right",i("Expression")).field("each",Boolean),i("Property").field("key",t(i("Literal"),i("Identifier"),i("Expression"))).field("value",t(i("Expression"),i("Pattern"))).field("method",Boolean,e.false).field("shorthand",Boolean,e.false).field("computed",Boolean,e.false),i("ObjectProperty").field("shorthand",Boolean,e.false),i("PropertyPattern").bases("Pattern").build("key","pattern").field("key",t(i("Literal"),i("Identifier"),i("Expression"))).field("pattern",i("Pattern")).field("computed",Boolean,e.false),i("ObjectPattern").bases("Pattern").build("properties").field("properties",[t(i("PropertyPattern"),i("Property"))]),i("ArrayPattern").bases("Pattern").build("elements").field("elements",[t(i("Pattern"),null)]),i("SpreadElement").bases("Node").build("argument").field("argument",i("Expression")),i("ArrayExpression").field("elements",[t(i("Expression"),i("SpreadElement"),i("RestElement"),null)]),i("NewExpression").field("arguments",[t(i("Expression"),i("SpreadElement"))]),i("CallExpression").field("arguments",[t(i("Expression"),i("SpreadElement"))]),i("AssignmentPattern").bases("Pattern").build("left","right").field("left",i("Pattern")).field("right",i("Expression")),i("MethodDefinition").bases("Declaration").build("kind","key","value","static").field("kind",t("constructor","method","get","set")).field("key",i("Expression")).field("value",i("Function")).field("computed",Boolean,e.false).field("static",Boolean,e.false),t(i("MethodDefinition"),i("VariableDeclarator"),i("ClassPropertyDefinition"),i("ClassProperty"),i("StaticBlock")));i("ClassProperty").bases("Declaration").build("key").field("key",t(i("Literal"),i("Identifier"),i("Expression"))).field("computed",Boolean,e.false),i("ClassPropertyDefinition").bases("Declaration").build("definition").field("definition",n),i("ClassBody").bases("Declaration").build("body").field("body",[n]),i("ClassDeclaration").bases("Declaration").build("id","body","superClass").field("id",t(i("Identifier"),null)).field("body",i("ClassBody")).field("superClass",t(i("Expression"),null),e.null),i("ClassExpression").bases("Expression").build("id","body","superClass").field("id",t(i("Identifier"),null),e.null).field("body",i("ClassBody")).field("superClass",t(i("Expression"),null),e.null),i("Super").bases("Expression").build(),i("Specifier").bases("Node"),i("ModuleSpecifier").bases("Specifier").field("local",t(i("Identifier"),null),e.null).field("id",t(i("Identifier"),null),e.null).field("name",t(i("Identifier"),null),e.null),i("ImportSpecifier").bases("ModuleSpecifier").build("imported","local").field("imported",i("Identifier")),i("ImportDefaultSpecifier").bases("ModuleSpecifier").build("local"),i("ImportNamespaceSpecifier").bases("ModuleSpecifier").build("local"),i("ImportDeclaration").bases("Declaration").build("specifiers","source","importKind").field("specifiers",[t(i("ImportSpecifier"),i("ImportNamespaceSpecifier"),i("ImportDefaultSpecifier"))],e.emptyArray).field("source",i("Literal")).field("importKind",t("value","type"),function(){return"value"}),i("ExportNamedDeclaration").bases("Declaration").build("declaration","specifiers","source").field("declaration",t(i("Declaration"),null)).field("specifiers",[i("ExportSpecifier")],e.emptyArray).field("source",t(i("Literal"),null),e.null),i("ExportSpecifier").bases("ModuleSpecifier").build("local","exported").field("exported",i("Identifier")),i("ExportDefaultDeclaration").bases("Declaration").build("declaration").field("declaration",t(i("Declaration"),i("Expression"))),i("ExportAllDeclaration").bases("Declaration").build("source").field("source",i("Literal")),i("TaggedTemplateExpression").bases("Expression").build("tag","quasi").field("tag",i("Expression")).field("quasi",i("TemplateLiteral")),i("TemplateLiteral").bases("Expression").build("quasis","expressions").field("quasis",[i("TemplateElement")]).field("expressions",[i("Expression")]),i("TemplateElement").bases("Node").build("value","tail").field("value",{cooked:String,raw:String}).field("tail",Boolean),i("MetaProperty").bases("Expression").build("meta","property").field("meta",i("Identifier")).field("property",i("Identifier"))}}),define("skylark-asttypes/def/es2016",["./operators/es2016","./es6"],function(t,i){"use strict";return function(e){e.use(t),e.use(i)}}),define("skylark-asttypes/def/es2017",["./es2016","../types","../shared"],function(i,n,r){"use strict";return function(e){e.use(i);var t=e.use(n).Type.def,e=e.use(r).defaults;t("Function").field("async",Boolean,e.false),t("AwaitExpression").bases("Expression").build("argument").field("argument",t("Expression"))}}),define("skylark-asttypes/def/es2018",["./es2017","../types","../shared"],function(n,r,a){"use strict";return function(e){e.use(n);var t=e.use(r),i=t.Type.def,t=t.Type.or,e=e.use(a).defaults;i("ForOfStatement").field("await",Boolean,e.false),i("SpreadProperty").bases("Node").build("argument").field("argument",i("Expression")),i("ObjectExpression").field("properties",[t(i("Property"),i("SpreadProperty"),i("SpreadElement"))]),i("TemplateElement").field("value",{cooked:t(String,null),raw:String}),i("SpreadPropertyPattern").bases("Pattern").build("argument").field("argument",i("Pattern")),i("ObjectPattern").field("properties",[t(i("PropertyPattern"),i("Property"),i("RestElement"),i("SpreadPropertyPattern"))])}}),define("skylark-asttypes/def/es2019",["./es2018","../types","../shared"],function(n,r,a){"use strict";return function(e){e.use(n);var t=e.use(r),i=t.Type.def,t=t.Type.or,e=e.use(a).defaults;i("CatchClause").field("param",t(i("Pattern"),null),e.null)}}),define("skylark-asttypes/def/es2020",["./operators/es2020","./es2019","../types","../shared"],function(n,r,a,s){"use strict";return function(e){e.use(n),e.use(r);var t=e.use(a),i=t.Type.def,t=t.Type.or,e=e.use(s).defaults;i("ImportExpression").bases("Expression").build("source").field("source",i("Expression")),i("ExportAllDeclaration").bases("Declaration").build("source","exported").field("source",i("Literal")).field("exported",t(i("Identifier"),null,void 0),e.null),i("ChainElement").bases("Node").field("optional",Boolean,e.false),i("CallExpression").bases("Expression","ChainElement"),i("MemberExpression").bases("Expression","ChainElement"),i("ChainExpression").bases("Expression").build("expression").field("expression",i("ChainElement")),i("OptionalCallExpression").bases("CallExpression").build("callee","arguments","optional").field("optional",Boolean,e.true),i("OptionalMemberExpression").bases("MemberExpression").build("object","property","computed","optional").field("optional",Boolean,e.true)}}),define("skylark-asttypes/def/es2021",["./operators/es2021","./es2020"],function(t,i){"use strict";return function(e){e.use(t),e.use(i)}}),define("skylark-asttypes/def/es2022",["./es2021","../types"],function(t,i){"use strict";return function(e){e.use(t);e=e.use(i).Type.def;e("StaticBlock").bases("Declaration").build("body").field("body",[e("Statement")])}}),define("skylark-asttypes/def/es-proposals",["../types","./es2022"],function(a,s){"use strict";return function(e){e.use(s);var t=e.use(a),i=t.Type;const n=t.Type.def;t=i.or;const r=e.use(sharedPlugin).defaults;n("AwaitExpression").build("argument","all").field("argument",t(n("Expression"),null)).field("all",Boolean,r.false),n("Decorator").bases("Node").build("expression").field("expression",n("Expression")),n("Property").field("decorators",t([n("Decorator")],null),r.null),n("MethodDefinition").field("decorators",t([n("Decorator")],null),r.null),n("PrivateName").bases("Expression","Pattern").build("id").field("id",n("Identifier")),n("ClassPrivateProperty").bases("ClassProperty").build("key","value").field("key",n("PrivateName")).field("value",t(n("Expression"),null),r.null),n("ImportAttribute").bases("Node").build("key","value").field("key",t(n("Identifier"),n("Literal"))).field("value",n("Expression")),["ImportDeclaration","ExportAllDeclaration","ExportNamedDeclaration"].forEach(e=>{n(e).field("assertions",[n("ImportAttribute")],r.emptyArray)}),n("RecordExpression").bases("Expression").build("properties").field("properties",[t(n("ObjectProperty"),n("ObjectMethod"),n("SpreadElement"))]),n("TupleExpression").bases("Expression").build("elements").field("elements",[t(n("Expression"),n("SpreadElement"),null)]),n("ModuleExpression").bases("Node").build("body").field("body",n("Program"))}}),define("skylark-asttypes/def/jsx",["./es-proposals","../types","../shared"],function(s,l,o){"use strict";return function(e){e.use(s);var t=e.use(l),i=t.Type.def,t=t.Type.or,e=e.use(o).defaults,n=(i("JSXAttribute").bases("Node").build("name","value").field("name",t(i("JSXIdentifier"),i("JSXNamespacedName"))).field("value",t(i("Literal"),i("JSXExpressionContainer"),i("JSXElement"),i("JSXFragment"),null),e.null),i("JSXIdentifier").bases("Identifier").build("name").field("name",String),i("JSXNamespacedName").bases("Node").build("namespace","name").field("namespace",i("JSXIdentifier")).field("name",i("JSXIdentifier")),i("JSXMemberExpression").bases("MemberExpression").build("object","property").field("object",t(i("JSXIdentifier"),i("JSXMemberExpression"))).field("property",i("JSXIdentifier")).field("computed",Boolean,e.false),t(i("JSXIdentifier"),i("JSXNamespacedName"),i("JSXMemberExpression"))),r=(i("JSXSpreadAttribute").bases("Node").build("argument").field("argument",i("Expression")),[t(i("JSXAttribute"),i("JSXSpreadAttribute"))]),a=(i("JSXExpressionContainer").bases("Expression").build("expression").field("expression",t(i("Expression"),i("JSXEmptyExpression"))),[t(i("JSXText"),i("JSXExpressionContainer"),i("JSXSpreadChild"),i("JSXElement"),i("JSXFragment"),i("Literal"))]);i("JSXElement").bases("Expression").build("openingElement","closingElement","children").field("openingElement",i("JSXOpeningElement")).field("closingElement",t(i("JSXClosingElement"),null),e.null).field("children",a,e.emptyArray).field("name",n,function(){return this.openingElement.name},!0).field("selfClosing",Boolean,function(){return this.openingElement.selfClosing},!0).field("attributes",r,function(){return this.openingElement.attributes},!0),i("JSXOpeningElement").bases("Node").build("name","attributes","selfClosing").field("name",n).field("attributes",r,e.emptyArray).field("selfClosing",Boolean,e.false),i("JSXClosingElement").bases("Node").build("name").field("name",n),i("JSXFragment").bases("Expression").build("openingFragment","closingFragment","children").field("openingFragment",i("JSXOpeningFragment")).field("closingFragment",i("JSXClosingFragment")).field("children",a,e.emptyArray),i("JSXOpeningFragment").bases("Node").build(),i("JSXClosingFragment").bases("Node").build(),i("JSXText").bases("Literal").build("value","raw").field("value",String).field("raw",String,function(){return this.value}),i("JSXEmptyExpression").bases("Node").build(),i("JSXSpreadChild").bases("Node").build("expression").field("expression",i("Expression"))}}),define("skylark-asttypes/def/type-annotations",["../types","../shared"],function(s,l){"use strict";return function(e){var t=e.use(s),i=t.Type.def,n=t.Type.or,r=e.use(l).defaults,t=n(i("TypeAnnotation"),i("TSTypeAnnotation"),null),a=n(i("TypeParameterDeclaration"),i("TSTypeParameterDeclaration"),null);i("Identifier").field("typeAnnotation",t,r.null),i("ObjectPattern").field("typeAnnotation",t,r.null),i("Function").field("returnType",t,r.null).field("typeParameters",a,r.null),i("ClassProperty").build("key","value","typeAnnotation","static").field("value",n(i("Expression"),null)).field("static",Boolean,r.false).field("typeAnnotation",t,r.null),["ClassDeclaration","ClassExpression"].forEach(e=>{i(e).field("typeParameters",a,r.null).field("superTypeParameters",n(i("TypeParameterInstantiation"),i("TSTypeParameterInstantiation"),null),r.null).field("implements",n([i("ClassImplements")],[i("TSExpressionWithTypeArguments")]),r.emptyArray)})}}),define("skylark-asttypes/def/flow",["./es-proposals","./type-annotations","../types","../shared"],function(r,a,s,l){"use strict";return function(e){e.use(r),e.use(a);var t=e.use(s),i=t.Type.def,t=t.Type.or,e=e.use(l).defaults,n=(i("Flow").bases("Node"),i("FlowType").bases("Flow"),i("AnyTypeAnnotation").bases("FlowType").build(),i("EmptyTypeAnnotation").bases("FlowType").build(),i("MixedTypeAnnotation").bases("FlowType").build(),i("VoidTypeAnnotation").bases("FlowType").build(),i("SymbolTypeAnnotation").bases("FlowType").build(),i("NumberTypeAnnotation").bases("FlowType").build(),i("BigIntTypeAnnotation").bases("FlowType").build(),i("NumberLiteralTypeAnnotation").bases("FlowType").build("value","raw").field("value",Number).field("raw",String),i("NumericLiteralTypeAnnotation").bases("FlowType").build("value","raw").field("value",Number).field("raw",String),i("BigIntLiteralTypeAnnotation").bases("FlowType").build("value","raw").field("value",null).field("raw",String),i("StringTypeAnnotation").bases("FlowType").build(),i("StringLiteralTypeAnnotation").bases("FlowType").build("value","raw").field("value",String).field("raw",String),i("BooleanTypeAnnotation").bases("FlowType").build(),i("BooleanLiteralTypeAnnotation").bases("FlowType").build("value","raw").field("value",Boolean).field("raw",String),i("TypeAnnotation").bases("Node").build("typeAnnotation").field("typeAnnotation",i("FlowType")),i("NullableTypeAnnotation").bases("FlowType").build("typeAnnotation").field("typeAnnotation",i("FlowType")),i("NullLiteralTypeAnnotation").bases("FlowType").build(),i("NullTypeAnnotation").bases("FlowType").build(),i("ThisTypeAnnotation").bases("FlowType").build(),i("ExistsTypeAnnotation").bases("FlowType").build(),i("ExistentialTypeParam").bases("FlowType").build(),i("FunctionTypeAnnotation").bases("FlowType").build("params","returnType","rest","typeParameters").field("params",[i("FunctionTypeParam")]).field("returnType",i("FlowType")).field("rest",t(i("FunctionTypeParam"),null)).field("typeParameters",t(i("TypeParameterDeclaration"),null)),i("FunctionTypeParam").bases("Node").build("name","typeAnnotation","optional").field("name",t(i("Identifier"),null)).field("typeAnnotation",i("FlowType")).field("optional",Boolean),i("ArrayTypeAnnotation").bases("FlowType").build("elementType").field("elementType",i("FlowType")),i("ObjectTypeAnnotation").bases("FlowType").build("properties","indexers","callProperties").field("properties",[t(i("ObjectTypeProperty"),i("ObjectTypeSpreadProperty"))]).field("indexers",[i("ObjectTypeIndexer")],e.emptyArray).field("callProperties",[i("ObjectTypeCallProperty")],e.emptyArray).field("inexact",t(Boolean,void 0),e[void 0]).field("exact",Boolean,e.false).field("internalSlots",[i("ObjectTypeInternalSlot")],e.emptyArray),i("Variance").bases("Node").build("kind").field("kind",t("plus","minus")),t(i("Variance"),"plus","minus",null));i("ObjectTypeProperty").bases("Node").build("key","value","optional").field("key",t(i("Literal"),i("Identifier"))).field("value",i("FlowType")).field("optional",Boolean).field("variance",n,e.null),i("ObjectTypeIndexer").bases("Node").build("id","key","value").field("id",i("Identifier")).field("key",i("FlowType")).field("value",i("FlowType")).field("variance",n,e.null).field("static",Boolean,e.false),i("ObjectTypeCallProperty").bases("Node").build("value").field("value",i("FunctionTypeAnnotation")).field("static",Boolean,e.false),i("QualifiedTypeIdentifier").bases("Node").build("qualification","id").field("qualification",t(i("Identifier"),i("QualifiedTypeIdentifier"))).field("id",i("Identifier")),i("GenericTypeAnnotation").bases("FlowType").build("id","typeParameters").field("id",t(i("Identifier"),i("QualifiedTypeIdentifier"))).field("typeParameters",t(i("TypeParameterInstantiation"),null)),i("MemberTypeAnnotation").bases("FlowType").build("object","property").field("object",i("Identifier")).field("property",t(i("MemberTypeAnnotation"),i("GenericTypeAnnotation"))),i("IndexedAccessType").bases("FlowType").build("objectType","indexType").field("objectType",i("FlowType")).field("indexType",i("FlowType")),i("OptionalIndexedAccessType").bases("FlowType").build("objectType","indexType","optional").field("objectType",i("FlowType")).field("indexType",i("FlowType")).field("optional",Boolean),i("UnionTypeAnnotation").bases("FlowType").build("types").field("types",[i("FlowType")]),i("IntersectionTypeAnnotation").bases("FlowType").build("types").field("types",[i("FlowType")]),i("TypeofTypeAnnotation").bases("FlowType").build("argument").field("argument",i("FlowType")),i("ObjectTypeSpreadProperty").bases("Node").build("argument").field("argument",i("FlowType")),i("ObjectTypeInternalSlot").bases("Node").build("id","value","optional","static","method").field("id",i("Identifier")).field("value",i("FlowType")).field("optional",Boolean).field("static",Boolean).field("method",Boolean),i("TypeParameterDeclaration").bases("Node").build("params").field("params",[i("TypeParameter")]),i("TypeParameterInstantiation").bases("Node").build("params").field("params",[i("FlowType")]),i("TypeParameter").bases("FlowType").build("name","variance","bound","default").field("name",String).field("variance",n,e.null).field("bound",t(i("TypeAnnotation"),null),e.null).field("default",t(i("FlowType"),null),e.null),i("ClassProperty").field("variance",n,e.null),i("ClassImplements").bases("Node").build("id").field("id",i("Identifier")).field("superClass",t(i("Expression"),null),e.null).field("typeParameters",t(i("TypeParameterInstantiation"),null),e.null),i("InterfaceTypeAnnotation").bases("FlowType").build("body","extends").field("body",i("ObjectTypeAnnotation")).field("extends",t([i("InterfaceExtends")],null),e.null),i("InterfaceDeclaration").bases("Declaration").build("id","body","extends").field("id",i("Identifier")).field("typeParameters",t(i("TypeParameterDeclaration"),null),e.null).field("body",i("ObjectTypeAnnotation")).field("extends",[i("InterfaceExtends")]),i("DeclareInterface").bases("InterfaceDeclaration").build("id","body","extends"),i("InterfaceExtends").bases("Node").build("id").field("id",i("Identifier")).field("typeParameters",t(i("TypeParameterInstantiation"),null),e.null),i("TypeAlias").bases("Declaration").build("id","typeParameters","right").field("id",i("Identifier")).field("typeParameters",t(i("TypeParameterDeclaration"),null)).field("right",i("FlowType")),i("DeclareTypeAlias").bases("TypeAlias").build("id","typeParameters","right"),i("OpaqueType").bases("Declaration").build("id","typeParameters","impltype","supertype").field("id",i("Identifier")).field("typeParameters",t(i("TypeParameterDeclaration"),null)).field("impltype",i("FlowType")).field("supertype",t(i("FlowType"),null)),i("DeclareOpaqueType").bases("OpaqueType").build("id","typeParameters","supertype").field("impltype",t(i("FlowType"),null)),i("TypeCastExpression").bases("Expression").build("expression","typeAnnotation").field("expression",i("Expression")).field("typeAnnotation",i("TypeAnnotation")),i("TupleTypeAnnotation").bases("FlowType").build("types").field("types",[i("FlowType")]),i("DeclareVariable").bases("Statement").build("id").field("id",i("Identifier")),i("DeclareFunction").bases("Statement").build("id").field("id",i("Identifier")).field("predicate",t(i("FlowPredicate"),null),e.null),i("DeclareClass").bases("InterfaceDeclaration").build("id"),i("DeclareModule").bases("Statement").build("id","body").field("id",t(i("Identifier"),i("Literal"))).field("body",i("BlockStatement")),i("DeclareModuleExports").bases("Statement").build("typeAnnotation").field("typeAnnotation",i("TypeAnnotation")),i("DeclareExportDeclaration").bases("Declaration").build("default","declaration","specifiers","source").field("default",Boolean).field("declaration",t(i("DeclareVariable"),i("DeclareFunction"),i("DeclareClass"),i("FlowType"),i("TypeAlias"),i("DeclareOpaqueType"),i("InterfaceDeclaration"),null)).field("specifiers",[t(i("ExportSpecifier"),i("ExportBatchSpecifier"))],e.emptyArray).field("source",t(i("Literal"),null),e.null),i("DeclareExportAllDeclaration").bases("Declaration").build("source").field("source",t(i("Literal"),null),e.null),i("ImportDeclaration").field("importKind",t("value","type","typeof"),()=>"value"),i("FlowPredicate").bases("Flow"),i("InferredPredicate").bases("FlowPredicate").build(),i("DeclaredPredicate").bases("FlowPredicate").build("value").field("value",i("Expression")),i("Function").field("predicate",t(i("FlowPredicate"),null),e.null),i("CallExpression").field("typeArguments",t(null,i("TypeParameterInstantiation")),e.null),i("NewExpression").field("typeArguments",t(null,i("TypeParameterInstantiation")),e.null),i("EnumDeclaration").bases("Declaration").build("id","body").field("id",i("Identifier")).field("body",t(i("EnumBooleanBody"),i("EnumNumberBody"),i("EnumStringBody"),i("EnumSymbolBody"))),i("EnumBooleanBody").build("members","explicitType").field("members",[i("EnumBooleanMember")]).field("explicitType",Boolean),i("EnumNumberBody").build("members","explicitType").field("members",[i("EnumNumberMember")]).field("explicitType",Boolean),i("EnumStringBody").build("members","explicitType").field("members",t([i("EnumStringMember")],[i("EnumDefaultedMember")])).field("explicitType",Boolean),i("EnumSymbolBody").build("members").field("members",[i("EnumDefaultedMember")]),i("EnumBooleanMember").build("id","init").field("id",i("Identifier")).field("init",t(i("Literal"),Boolean)),i("EnumNumberMember").build("id","init").field("id",i("Identifier")).field("init",i("Literal")),i("EnumStringMember").build("id","init").field("id",i("Identifier")).field("init",i("Literal")),i("EnumDefaultedMember").build("id").field("id",i("Identifier"))}}),define("skylark-asttypes/def/esprima",["./es-proposals","../types","../shared"],function(n,r,a){"use strict";return function(e){e.use(n);var t=e.use(r),e=e.use(a).defaults,i=t.Type.def,t=t.Type.or;i("VariableDeclaration").field("declarations",[t(i("VariableDeclarator"),i("Identifier"))]),i("Property").field("value",t(i("Expression"),i("Pattern"))),i("ArrayPattern").field("elements",[t(i("Pattern"),i("SpreadElement"),null)]),i("ObjectPattern").field("properties",[t(i("Property"),i("PropertyPattern"),i("SpreadPropertyPattern"),i("SpreadProperty"))]),i("ExportSpecifier").bases("ModuleSpecifier").build("id","name"),i("ExportBatchSpecifier").bases("Specifier").build(),i("ExportDeclaration").bases("Declaration").build("default","declaration","specifiers","source").field("default",Boolean).field("declaration",t(i("Declaration"),i("Expression"),null)).field("specifiers",[t(i("ExportSpecifier"),i("ExportBatchSpecifier"))],e.emptyArray).field("source",t(i("Literal"),null),e.null),i("Block").bases("Comment").build("value","leading","trailing"),i("Line").bases("Comment").build("value","leading","trailing")}}),define("skylark-asttypes/def/babel-core",["./es-proposals","../types"],function(s,l){"use strict";return function(e){e.use(s);const i=e.use(l),t=e.use(sharedPlugin).defaults,n=i.Type.def,r=i.Type.or;e=i.builtInTypes[void 0];function a(e=String,t){return["extra",{rawValue:e,raw:String},function(){var e=i.getFieldValue(this,"value");return{rawValue:e,raw:(t||String)(e)}}]}n("Noop").bases("Statement").build(),n("DoExpression").bases("Expression").build("body").field("body",[n("Statement")]),n("BindExpression").bases("Expression").build("object","callee").field("object",r(n("Expression"),null)).field("callee",n("Expression")),n("ParenthesizedExpression").bases("Expression").build("expression").field("expression",n("Expression")),n("ExportNamespaceSpecifier").bases("Specifier").build("exported").field("exported",n("Identifier")),n("ExportDefaultSpecifier").bases("Specifier").build("exported").field("exported",n("Identifier")),n("CommentBlock").bases("Comment").build("value","leading","trailing"),n("CommentLine").bases("Comment").build("value","leading","trailing"),n("Directive").bases("Node").build("value").field("value",n("DirectiveLiteral")),n("DirectiveLiteral").bases("Node","Expression").build("value").field("value",String,t["use strict"]),n("InterpreterDirective").bases("Node").build("value").field("value",String),n("BlockStatement").bases("Statement").build("body").field("body",[n("Statement")]).field("directives",[n("Directive")],t.emptyArray),n("Program").bases("Node").build("body").field("body",[n("Statement")]).field("directives",[n("Directive")],t.emptyArray).field("interpreter",r(n("InterpreterDirective"),null),t.null),n("StringLiteral").bases("Literal").build("value").field("value",String).field(...a(String,e=>JSON.stringify(e))),n("NumericLiteral").bases("Literal").build("value").field("value",Number).field("raw",r(String,null),t.null).field(...a(Number)),n("BigIntLiteral").bases("Literal").build("value").field("value",r(String,Number)).field(...a(String,e=>e+"n")),n("DecimalLiteral").bases("Literal").build("value").field("value",String).field(...a(String,e=>e+"m")),n("NullLiteral").bases("Literal").build().field("value",null,t.null),n("BooleanLiteral").bases("Literal").build("value").field("value",Boolean),n("RegExpLiteral").bases("Literal").build("pattern","flags").field("pattern",String).field("flags",String).field("value",RegExp,function(){return new RegExp(this.pattern,this.flags)}).field(...a(r(RegExp,e),e=>`/${e.pattern}/`+(e.flags||""))).field("regex",{pattern:String,flags:String},function(){return{pattern:this.pattern,flags:this.flags}});e=r(n("Property"),n("ObjectMethod"),n("ObjectProperty"),n("SpreadProperty"),n("SpreadElement")),n("ObjectExpression").bases("Expression").build("properties").field("properties",[e]),n("ObjectMethod").bases("Node","Function").build("kind","key","params","body","computed").field("kind",r("method","get","set")).field("key",r(n("Literal"),n("Identifier"),n("Expression"))).field("params",[n("Pattern")]).field("body",n("BlockStatement")).field("computed",Boolean,t.false).field("generator",Boolean,t.false).field("async",Boolean,t.false).field("accessibility",r(n("Literal"),null),t.null).field("decorators",r([n("Decorator")],null),t.null),n("ObjectProperty").bases("Node").build("key","value").field("key",r(n("Literal"),n("Identifier"),n("Expression"))).field("value",r(n("Expression"),n("Pattern"))).field("accessibility",r(n("Literal"),null),t.null).field("computed",Boolean,t.false),e=r(n("MethodDefinition"),n("VariableDeclarator"),n("ClassPropertyDefinition"),n("ClassProperty"),n("ClassPrivateProperty"),n("ClassMethod"),n("ClassPrivateMethod"),n("ClassAccessorProperty"),n("StaticBlock")),n("ClassBody").bases("Declaration").build("body").field("body",[e]),n("ClassMethod").bases("Declaration","Function").build("kind","key","params","body","computed","static").field("key",r(n("Literal"),n("Identifier"),n("Expression"))),n("ClassPrivateMethod").bases("Declaration","Function").build("key","params","body","kind","computed","static").field("key",n("PrivateName")),n("ClassAccessorProperty").bases("Declaration").build("key","value","decorators","computed","static").field("key",r(n("Literal"),n("Identifier"),n("PrivateName"),n("Expression"))).field("value",r(n("Expression"),null),t.null),["ClassMethod","ClassPrivateMethod"].forEach(e=>{n(e).field("kind",r("get","set","method","constructor"),()=>"method").field("body",n("BlockStatement")).field("access",r("public","private","protected",null),t.null)}),["ClassMethod","ClassPrivateMethod","ClassAccessorProperty"].forEach(e=>{n(e).field("computed",Boolean,t.false).field("static",Boolean,t.false).field("abstract",Boolean,t.false).field("accessibility",r("public","private","protected",null),t.null).field("decorators",r([n("Decorator")],null),t.null).field("definite",Boolean,t.false).field("optional",Boolean,t.false).field("override",Boolean,t.false).field("readonly",Boolean,t.false)}),e=r(n("Property"),n("PropertyPattern"),n("SpreadPropertyPattern"),n("SpreadProperty"),n("ObjectProperty"),n("RestProperty"),n("RestElement"));n("ObjectPattern").bases("Pattern").build("properties").field("properties",[e]).field("decorators",r([n("Decorator")],null),t.null),n("SpreadProperty").bases("Node").build("argument").field("argument",n("Expression")),n("RestProperty").bases("Node").build("argument").field("argument",n("Expression")),n("ForAwaitStatement").bases("Statement").build("left","right","body").field("left",r(n("VariableDeclaration"),n("Expression"))).field("right",n("Expression")).field("body",n("Statement")),n("Import").bases("Expression").build()}}),define("skylark-asttypes/def/babel",["../types","./babel-core","./flow"],function(i,n,r){"use strict";return function(e){var t=e.use(i).Type.def;e.use(n),e.use(r),t("V8IntrinsicIdentifier").bases("Expression").build("name").field("name",String),t("TopicReference").bases("Expression").build()}}),define("skylark-asttypes/def/typescript",["./babel-core","./type-annotations","../types","../shared"],function(o,d,u,p){"use strict";return function(e){e.use(o),e.use(d);var t=e.use(u),i=t.namedTypes,n=t.Type.def,r=t.Type.or,e=e.use(p).defaults,t=t.Type.from(function(e,t){return!(!i.StringLiteral||!i.StringLiteral.check(e,t))||!(!i.Literal||!i.Literal.check(e,t)||"string"!=typeof e.value)},"StringLiteral"),a=(n("TSType").bases("Node"),r(n("Identifier"),n("TSQualifiedName"))),s=(n("TSTypeReference").bases("TSType","TSHasOptionalTypeParameterInstantiation").build("typeName","typeParameters").field("typeName",a),n("TSHasOptionalTypeParameterInstantiation").field("typeParameters",r(n("TSTypeParameterInstantiation"),null),e.null),n("TSHasOptionalTypeParameters").field("typeParameters",r(n("TSTypeParameterDeclaration"),null,void 0),e.null),n("TSHasOptionalTypeAnnotation").field("typeAnnotation",r(n("TSTypeAnnotation"),null),e.null),n("TSQualifiedName").bases("Node").build("left","right").field("left",a).field("right",a),n("TSAsExpression").bases("Expression","Pattern").build("expression","typeAnnotation").field("expression",n("Expression")).field("typeAnnotation",n("TSType")).field("extra",r({parenthesized:Boolean},null),e.null),n("TSTypeCastExpression").bases("Expression").build("expression","typeAnnotation").field("expression",n("Expression")).field("typeAnnotation",n("TSType")),n("TSSatisfiesExpression").bases("Expression","Pattern").build("expression","typeAnnotation").field("expression",n("Expression")).field("typeAnnotation",n("TSType")),n("TSNonNullExpression").bases("Expression","Pattern").build("expression").field("expression",n("Expression")),["TSAnyKeyword","TSBigIntKeyword","TSBooleanKeyword","TSNeverKeyword","TSNullKeyword","TSNumberKeyword","TSObjectKeyword","TSStringKeyword","TSSymbolKeyword","TSUndefinedKeyword","TSUnknownKeyword","TSVoidKeyword","TSIntrinsicKeyword","TSThisType"].forEach(e=>{n(e).bases("TSType").build()}),n("TSArrayType").bases("TSType").build("elementType").field("elementType",n("TSType")),n("TSLiteralType").bases("TSType").build("literal").field("literal",r(n("NumericLiteral"),n("StringLiteral"),n("BooleanLiteral"),n("TemplateLiteral"),n("UnaryExpression"),n("BigIntLiteral"))),n("TemplateLiteral").field("expressions",r([n("Expression")],[n("TSType")])),["TSUnionType","TSIntersectionType"].forEach(e=>{n(e).bases("TSType").build("types").field("types",[n("TSType")])}),n("TSConditionalType").bases("TSType").build("checkType","extendsType","trueType","falseType").field("checkType",n("TSType")).field("extendsType",n("TSType")).field("trueType",n("TSType")).field("falseType",n("TSType")),n("TSInferType").bases("TSType").build("typeParameter").field("typeParameter",n("TSTypeParameter")),n("TSParenthesizedType").bases("TSType").build("typeAnnotation").field("typeAnnotation",n("TSType")),[r(n("Identifier"),n("RestElement"),n("ArrayPattern"),n("ObjectPattern"))]),l=(["TSFunctionType","TSConstructorType"].forEach(e=>{n(e).bases("TSType","TSHasOptionalTypeParameters","TSHasOptionalTypeAnnotation").build("parameters").field("parameters",s)}),n("TSDeclareFunction").bases("Declaration","TSHasOptionalTypeParameters").build("id","params","returnType").field("declare",Boolean,e.false).field("async",Boolean,e.false).field("generator",Boolean,e.false).field("id",r(n("Identifier"),null),e.null).field("params",[n("Pattern")]).field("returnType",r(n("TSTypeAnnotation"),n("Noop"),null),e.null),n("TSDeclareMethod").bases("Declaration","TSHasOptionalTypeParameters").build("key","params","returnType").field("async",Boolean,e.false).field("generator",Boolean,e.false).field("params",[n("Pattern")]).field("abstract",Boolean,e.false).field("accessibility",r("public","private","protected",void 0),e[void 0]).field("static",Boolean,e.false).field("computed",Boolean,e.false).field("optional",Boolean,e.false).field("key",r(n("Identifier"),n("StringLiteral"),n("NumericLiteral"),n("Expression"))).field("kind",r("get","set","method","constructor"),function(){return"method"}).field("access",r("public","private","protected",void 0),e[void 0]).field("decorators",r([n("Decorator")],null),e.null).field("returnType",r(n("TSTypeAnnotation"),n("Noop"),null),e.null),n("TSMappedType").bases("TSType").build("typeParameter","typeAnnotation").field("readonly",r(Boolean,"+","-"),e.false).field("typeParameter",n("TSTypeParameter")).field("optional",r(Boolean,"+","-"),e.false).field("typeAnnotation",r(n("TSType"),null),e.null),n("TSTupleType").bases("TSType").build("elementTypes").field("elementTypes",[r(n("TSType"),n("TSNamedTupleMember"))]),n("TSNamedTupleMember").bases("TSType").build("label","elementType","optional").field("label",n("Identifier")).field("optional",Boolean,e.false).field("elementType",n("TSType")),n("TSRestType").bases("TSType").build("typeAnnotation").field("typeAnnotation",n("TSType")),n("TSOptionalType").bases("TSType").build("typeAnnotation").field("typeAnnotation",n("TSType")),n("TSIndexedAccessType").bases("TSType").build("objectType","indexType").field("objectType",n("TSType")).field("indexType",n("TSType")),n("TSTypeOperator").bases("TSType").build("operator").field("operator",String).field("typeAnnotation",n("TSType")),n("TSTypeAnnotation").bases("Node").build("typeAnnotation").field("typeAnnotation",r(n("TSType"),n("TSTypeAnnotation"))),n("TSIndexSignature").bases("Declaration","TSHasOptionalTypeAnnotation").build("parameters","typeAnnotation").field("parameters",[n("Identifier")]).field("readonly",Boolean,e.false),n("TSPropertySignature").bases("Declaration","TSHasOptionalTypeAnnotation").build("key","typeAnnotation","optional").field("key",n("Expression")).field("computed",Boolean,e.false).field("readonly",Boolean,e.false).field("optional",Boolean,e.false).field("initializer",r(n("Expression"),null),e.null),n("TSMethodSignature").bases("Declaration","TSHasOptionalTypeParameters","TSHasOptionalTypeAnnotation").build("key","parameters","typeAnnotation").field("key",n("Expression")).field("computed",Boolean,e.false).field("optional",Boolean,e.false).field("parameters",s),n("TSTypePredicate").bases("TSTypeAnnotation","TSType").build("parameterName","typeAnnotation","asserts").field("parameterName",r(n("Identifier"),n("TSThisType"))).field("typeAnnotation",r(n("TSTypeAnnotation"),null),e.null).field("asserts",Boolean,e.false),["TSCallSignatureDeclaration","TSConstructSignatureDeclaration"].forEach(e=>{n(e).bases("Declaration","TSHasOptionalTypeParameters","TSHasOptionalTypeAnnotation").build("parameters","typeAnnotation").field("parameters",s)}),n("TSEnumMember").bases("Node").build("id","initializer").field("id",r(n("Identifier"),t)).field("initializer",r(n("Expression"),null),e.null),n("TSTypeQuery").bases("TSType").build("exprName").field("exprName",r(a,n("TSImportType"))),r(n("TSCallSignatureDeclaration"),n("TSConstructSignatureDeclaration"),n("TSIndexSignature"),n("TSMethodSignature"),n("TSPropertySignature")));n("TSTypeLiteral").bases("TSType").build("members").field("members",[l]),n("TSTypeParameter").bases("Identifier").build("name","constraint","default").field("name",r(n("Identifier"),String)).field("constraint",r(n("TSType"),void 0),e[void 0]).field("default",r(n("TSType"),void 0),e[void 0]),n("TSTypeAssertion").bases("Expression","Pattern").build("typeAnnotation","expression").field("typeAnnotation",n("TSType")).field("expression",n("Expression")).field("extra",r({parenthesized:Boolean},null),e.null),n("TSTypeParameterDeclaration").bases("Declaration").build("params").field("params",[n("TSTypeParameter")]),n("TSInstantiationExpression").bases("Expression","TSHasOptionalTypeParameterInstantiation").build("expression","typeParameters").field("expression",n("Expression")),n("TSTypeParameterInstantiation").bases("Node").build("params").field("params",[n("TSType")]),n("TSEnumDeclaration").bases("Declaration").build("id","members").field("id",n("Identifier")).field("const",Boolean,e.false).field("declare",Boolean,e.false).field("members",[n("TSEnumMember")]).field("initializer",r(n("Expression"),null),e.null),n("TSTypeAliasDeclaration").bases("Declaration","TSHasOptionalTypeParameters").build("id","typeAnnotation").field("id",n("Identifier")).field("declare",Boolean,e.false).field("typeAnnotation",n("TSType")),n("TSModuleBlock").bases("Node").build("body").field("body",[n("Statement")]),n("TSModuleDeclaration").bases("Declaration").build("id","body").field("id",r(t,a)).field("declare",Boolean,e.false).field("global",Boolean,e.false).field("body",r(n("TSModuleBlock"),n("TSModuleDeclaration"),null),e.null),n("TSImportType").bases("TSType","TSHasOptionalTypeParameterInstantiation").build("argument","qualifier","typeParameters").field("argument",t).field("qualifier",r(a,void 0),e[void 0]),n("TSImportEqualsDeclaration").bases("Declaration").build("id","moduleReference").field("id",n("Identifier")).field("isExport",Boolean,e.false).field("moduleReference",r(a,n("TSExternalModuleReference"))),n("TSExternalModuleReference").bases("Declaration").build("expression").field("expression",t),n("TSExportAssignment").bases("Statement").build("expression").field("expression",n("Expression")),n("TSNamespaceExportDeclaration").bases("Declaration").build("id").field("id",n("Identifier")),n("TSInterfaceBody").bases("Node").build("body").field("body",[l]),n("TSExpressionWithTypeArguments").bases("TSType","TSHasOptionalTypeParameterInstantiation").build("expression","typeParameters").field("expression",a),n("TSInterfaceDeclaration").bases("Declaration","TSHasOptionalTypeParameters").build("id","body").field("id",a).field("declare",Boolean,e.false).field("extends",r([n("TSExpressionWithTypeArguments")],null),e.null).field("body",n("TSInterfaceBody")),n("TSParameterProperty").bases("Pattern").build("parameter").field("accessibility",r("public","private","protected",void 0),e[void 0]).field("readonly",Boolean,e.false).field("parameter",r(n("Identifier"),n("AssignmentPattern"))),n("ClassProperty").field("access",r("public","private","protected",void 0),e[void 0]),n("ClassAccessorProperty").bases("Declaration","TSHasOptionalTypeAnnotation"),n("ClassBody").field("body",[r(n("MethodDefinition"),n("VariableDeclarator"),n("ClassPropertyDefinition"),n("ClassProperty"),n("ClassPrivateProperty"),n("ClassAccessorProperty"),n("ClassMethod"),n("ClassPrivateMethod"),n("StaticBlock"),n("TSDeclareMethod"),l)])}}),define("skylark-asttypes/gen/namedTypes",[],function(){"use strict";return{}}),define("skylark-asttypes/gen/visitor",[],function(){"use strict";return{}}),define("skylark-asttypes/main",["./fork","./def/es-proposals","./def/jsx","./def/flow","./def/esprima","./def/babel","./def/typescript","./types","./gen/namedTypes","./gen/visitor"],function(e,t,i,n,r,a,s,l,o,d){"use strict";var{ASTNode:l,AnyType:u,Field:p}=l,o=o["namedTypes"],d=d["Visitor"],{astNodesAreEquivalent:e,builders:t,builtInTypes:i,defineMethod:n,eachField:r,finalize:a,getBuilderName:s,getFieldNames:f,getFieldValue:c,getSupertypeNames:y,namedTypes:b,NodePath:h,Path:m,PathVisitor:T,someField:S,Type:E,use:g,visit:x}=e([t,i,n,r,a,s]);return Object.assign(o,b),{AnyType:u,ASTNode:l,astNodesAreEquivalent:e,builders:t,builtInTypes:i,defineMethod:n,eachField:r,Field:p,finalize:a,getBuilderName:s,getFieldNames:f,getFieldValue:c,getSupertypeNames:y,namedTypes:o,NodePath:h,Path:m,PathVisitor:T,someField:S,Type:E,use:g,visit:x,Visitor:d}}),define("skylark-asttypes",["skylark-asttypes/main"],function(e){return e});
},this,define,require);
//# sourceMappingURL=sourcemaps/skylark-asttypes.js.map
